# PTF test for FaultDiagSmall
# p4testgen seed: 1000

import logging
import itertools

from bfruntime_client_base_tests import BfRuntimeTest
from ptf.mask import Mask
from ptf.testutils import send_packet
from ptf.testutils import verify_packet
from ptf.testutils import verify_no_other_packets

import bfrt_grpc.bfruntime_pb2 as bfruntime_pb2
import bfrt_grpc.client as gc

logger = logging.getLogger('FaultDiagSmall')
logger.addHandler(logging.StreamHandler())


class AbstractTest(BfRuntimeTest):
    def setUp(self):
        BfRuntimeTest.setUp(self, 0, 'FaultDiagSmall')
        self.dev_id = 0
        self.table_entries = []
        self.bfrt_info = None
        # Get bfrt_info and set it as part of the test.
        self.bfrt_info = self.interface.bfrt_info_get('FaultDiagSmall')

        # Set target to all pipes on device self.dev_id.
        self.target = gc.Target(device_id=0, pipe_id=0xFFFF)

    def tearDown(self):
        # Reset tables.
        for elt in reversed(self.table_entries):
            test_table = self.bfrt_info.table_get(elt[0])
            test_table.entry_del(self.target, elt[1])
        self.table_entries = []

        # End session.
        BfRuntimeTest.tearDown(self)

    def insertTableEntry(
        self, table_name, key_fields=None, action_name=None, data_fields=[]
    ):
        test_table = self.bfrt_info.table_get(table_name)
        key_list = [test_table.make_key(key_fields)]
        data_list = [test_table.make_data(data_fields, action_name)]
        test_table.entry_add(self.target, key_list, data_list)
        self.table_entries.append((table_name, key_list))

    def modifyTableEntry(
        self, table_name, key_fields=None, action_name=None, data_fields=[]
    ):
        test_table = self.bfrt_info.table_get(table_name)
        key_list = [test_table.make_key(key_fields)]
        data_list = [test_table.make_data(data_fields, action_name)]
        test_table.entry_mod(self.target, key_list, data_list)
        self.table_entries.append((table_name, key_list))

    def _responseDumpHelper(self, request):
        for response in self.interface.stub.Read(request, timeout=2):
            yield response

    def overrideDefaultEntry(self, table_name, action_name=None, data_fields=[]):
        test_table = self.bfrt_info.table_get(table_name)
        data = test_table.make_data(data_fields, action_name)
        test_table.default_entry_set(self.target, data)

    def setRegisterValue(self, reg_name, value, index):
        reg_table = self.bfrt_info.table_get(reg_name)
        key_list = [reg_table.make_key([gc.KeyTuple("$REGISTER_INDEX", index)])]
        value_list = []
        if isinstance(value, list):
            for val in value:
                value_list.append(gc.DataTuple(val[0], val[1]))
        else:
            value_list.append(gc.DataTuple("f1", value))
        reg_table.entry_add(self.target, key_list, [reg_table.make_data(value_list)])

    def entryAdd(self, table_obj, target, table_entry):
        req = bfruntime_pb2.WriteRequest()
        gc._cpy_target(req, target)
        req.atomicity = bfruntime_pb2.WriteRequest.CONTINUE_ON_ERROR
        update = req.updates.add()
        update.type = bfruntime_pb2.Update.MODIFY
        update.entity.table_entry.CopyFrom(table_entry)
        resp = self.interface.reader_writer_interface._write(req)
        table_obj.get_parser._parse_entry_write_response(resp)

    def setDirectRegisterValue(self, tbl_name, value):
        test_table = self.bfrt_info.table_get(tbl_name)
        table_id = test_table.info.id
        req = bfruntime_pb2.ReadRequest()
        req.client_id = self.client_id
        gc._cpy_target(req, self.target)
        entity = req.entities.add()
        table = entity.table_entry
        table.table_id = table_id
        table_entry = None
        for response in self._responseDumpHelper(req):
            for entity in response.entities:
                assert entity.WhichOneof("entity") == "table_entry"
                table_entry = entity.table_entry
                break
        if table_entry is None:
            raise self.failureException(
                "No entry in the table that the meter is attached to."
            )
        table_entry.ClearField("data")
        value_list = []
        if isinstance(value, list):
            for val in value:
                df = table_entry.data.fields.add()
        else:
            df = table_entry.data.fields.add()
            df.value = gc.DataTuple(gc.DataTuple("f1", value))
        self.entryAdd(test_table, self.target, table_entry)

    def setupCtrlPlane(self):
        pass

    def sendPacket(self):
        pass

    def verifyPackets(self):
        pass

    def runTestImpl(self):
        self.setupCtrlPlane()
        logger.info("Sending Packet ...")
        self.sendPacket()
        logger.info("Verifying Packet ...")
        self.verifyPackets()
        logger.info("Verifying no other packets ...")
        verify_no_other_packets(self, self.dev_id, timeout=2)

    def getAllRegisterValue(self,reg_name):
        reg_table = self.bfrt_info.table_get(reg_name)
        reg_table.operations_execute(self.target, 'Sync')
        for i in range(0,4):
            resp = reg_table.entry_get(
                self.target,
                [reg_table.make_key([gc.KeyTuple('$REGISTER_INDEX',i)])],
                {"from_hw": True})
            data, _ = next(resp)
            data_dict = data.to_dict()
            for j in range(4):
                value_lo = data_dict[reg_name+'.id'][j]
                value_hi = data_dict[reg_name+'.cnt'][j]
            print(data_dict)

            # value_lo = data_dict[reg_name+'.id'][0]
            # value_high = data_dict[reg_name+'.cnt'][0]
            # print((value_lo))
            # print((value_high))
        return resp
    
    def getAllCounterValue(self,reg_name):
        reg_table = self.bfrt_info.table_get(reg_name)
        for i in range(0,4):
            resp = reg_table.entry_get(
                self.target,
                [reg_table.make_key([gc.KeyTuple('$REGISTER_INDEX',i)])],
                {"from_hw": True})
            data, key = next(resp)
            data_dict = data.to_dict()
            print(data_dict)
            print(key)
            # value_lo = data_dict[reg_name+'.f1'][0]
            # print((value_lo))
        return resp
#dst_addr:0xF912251D
#src_addr:0xE9311EA7
#protocal:0x11
#pathBF:0xEE57C7C3
#dstp:0x2329
#srcp:0x1CBD
#pathBF: 0xEE57C7C3

    def pkt1(self):
        pkt = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\xE9\x31\x1E\xA7\xF9\x12\x25\x1D\x1C\xBD\x23\x29\x00\x00\x00\x00\xEE\x57\xC7\xC3\x00\x00\x00\x00\x41\x22\xB2\x71\x4E\xBC\xC3\x02\xA7\x8B\x50\x2B\x21\x95\xB3\xEC\x50\x95\x00\xFC\x78\xAA\x74\xCF\x6C\x3D\xED\x4E\x85\x76\x73\xD5\xEA\xC1\x6C\x9C\xDB\xB2\xAF\xBD\x4E\xEC\xCA\xC1\x9D\x39\x0B\x4A\x98\x37\xDA\xB6\x61\x63\xAB\x9C\xDE\xC7\x85\xEA\x8F\x15\xB3\x14\x14\xE6\x74\x01\xBF\x1B\x37\x08\xF1\x0D\xEE\xC2\x85\xF6\x3E\xF5\x88\x93\xB1\x1C\xC0\x56\x09\xE6\x5E\x77\xB4\x75\x07\x2B\x57\x2A\xB3\x1F\x6A\xD5\xF0\x1B\xB7\x96\x16\x47\x18\x3A\xE3\xBF\x47\x5A\xED\x09\x10\xA1\xBD\x83\x5C\x91\x9C\xF1\xB5\xC1\xE2\x76\x69\x7A\xCE\x55\x9D\xF5\x77\xFD\xA7\x37\x84\x0D\x31\x1F\x77\x43\x12\x4B\xB6\xB1\x8D\xDA\xBA\xE7\xC5\x4E\x67\x6A\xA8\x72\xDB\x08\x2A\x5C\x16\x74\xF5\xA9\x47\x8B\x44\x49\x32\x41\x7B\x99\x47\x98\xCD\x4B\x87\x3B\x2B\xC1\x1F\xD9\xD2\xB8\x34\x15\x3E\x44\xFC\x18\x9C\xB8\x4D\x6B\x99\xD5\x4B\x0C\x64\xAF\xF3\x3D\xA2\x61\x6D\xA0\x08\x0B\x26\xEC\xB1\x7A\xA2\x85\x6F\xEC\xDE\xF4\xF1\x0E\x69\x3F\x16\xB3\xEE\xDC\xF6\x0E\x6D\x42\x20\xAB\x98\xE2\xB2\xB3\xFA\xC0\xB1\x7E\x15\x8B\xD8\x36\x06\x81\x81\x7B\xA6\x3A\x9F\x0B\x4E\x57\xD6\x43\xDE\x89\xC7\x25\xEB\x1B\xC2\x93\x1E\x12\xE3\x6C\x8A\xBF\xBB\x03\xDF\x94\xDC\x8C\x5C\x20\xEA\x8C\xD5\x6A\xAD\xE1\x32\x32\xF8\x58\x02\x76\x7E\xA1\xFE\xD6\xF2\xCE\x0B\x4F\x77\x18\x9E\x59\xD4\x3E\xC6\x95\x08\x69\xD9\x15\x39\x80\x42\x6F\xFF\x67\x76\x23\xBB\x38\x8B\x79\x09\x28\x8F\x49\xC8\x15\x55\x24\xAB\x32\x05\xD7\x52\xD3\x56\x5A\xDD\x03\xCD\x80\xED\x43\x6C\x32\xFD\xE7\xEC\xD7\x39\xE1\xD2\x68\x34\x05\xF0\x00\x20\x6F\x86\x0E\x4B\x33\x1E\xA5\x7F\xB3\xA6\xE7\xA7\x0E\x09\x9D\x49\x0D\x84\x66\x4E\xF5\x19\x88\x42\xA9\x13\xF7\x29\xDA\x44\x24\x0D\x12\x23\xEB\x27\xBB\xF1\x65\xB7\x80\xF7\xB1\x24\x9B\x69\x7A\x25\x17\x57\xF3\x7F\x49\x83\x2A\x6E\x0D\x21\x02\x69\xD4\x07\xE1\x4D\x0D\x88\xFA\x3F\x00\x61\xEE\x5D\xE0\x5A\xD0\xF2\xC9\x44\x80\x43\xF2\xC0\xEA\xF1\x58\xDF\x78\xF8\xDB\x07\x60\xD8\x62\x39\x45\x51\xF4\xCE\xCB\x31\x8E\xAA\x61\xE1\xD3\x4C\x6C\x41\x03\x66\x1E\xDE\xB8\xE9\x86\x2C\xAD\x31\xC2\x45\x79\x70\xFA\x9A\xBD\x32\x57\x1B\xE2\xB9\x73\x97\x63\xE7\x05\x57\x5D\xB2\x3C\x25\x0C\xD4\x73\x0A\x8C\x24\x44\xDB\x56\x0C\xD6\xE4\x81\xD7\x86\x12\x4E\x46\xDD\x23\x04\x0A\x18\xE0\xD0\x78\x4E\x23\x1C\xC4\x3B\xD6\x67\x1E\x27\x2B\xFD\x22\x34\x0C\x11\xA6\xAF\x73\xA8\xD3\x7C\xA8\xC0\x87\x24\x83\x26\x52\xC6\x16\xEF\x91\xEA\xB4\x9B\x0C\x3F\x60\x37\x4F\x07\x41\x02\x40\x1E\x01\xC2\xB7\x99\xA8\x4A\xDF\x81\xFB\xFC\x14\x3B\x64\x6E\xD4\xB3\x13\x91\xB8\xC6\xEE\x78\x38\xA8\xB0\x03\x57\xD8\x96\x6D\xF0\xA6\x09\xE7\x49\x2D\x57\x65\x1D\x16\xA7\xFA\xD7\xCD\x98\xF7\x2C\xD8\x90\x3A\x88\x10\x32\x9C\x4C\x9B\x46\x98\x67\x04\xCC\x7D\x8C\x3C\xAA\x9B\x5A\x40\x74\x0A\xAF\xC6\x85\x66\x0A\x63\xD2\x53\x72\x86\xF5\x4F\x18\x34\xDF\x36\xC6\xC4\x8B\x70\xE1\xD0\x88\x34\x61\xD9\x5F\x6D\x4E\xA5\x0C\x8E\x71\x83\x90\x6E\xDA\x74\x59\xA2\x51\xD3\x63\xD0\xC5\x69\xB0\x05\x96\x6C\x43\x5A\x5E\x50\xD7\xC2\x0A\xCC\x24\x04\x4C\xBA\xE4\x98\xBD\xB0\x62\x11\xE3\x1C\x1A\x82\xED\x45\x5E\xCC\x81\x3D\x0E\x75\x17\xAB\x30\xF1\xFF\x47\x48\x5C\x9B\x88\xE8\x2F\xE0\x7F\x2F\x10\x43\xDD\x14\x32\x7A\xA1\x44\xEE\x9B\x35\x80\x12\x25\x19\x15\x5E\x14\xDD\x27\x47\xC1\x96\x98\x3C\xF8\xF4\x36\x79\x23\x27\xDA\xA5\xAF\x16\xD6\x24\x32\x59\x82\x1F\xCA\x50\xB6\x3A\x55\xF4\xDC\xFE\x8C\xEC\x82\xA2\x02\x85\xCF\xE0\xB7\xBB\xFB\x92\x6A\x91\x24\x31\x32\x54\x80\x28\x12\x4B\xFA\xF4\xDD\xBC\xE4\xF8\xA6\xFF\x60\xAE\xC7\x65\xAF\x3D\xC7\x5D\x37\xA0\x6B\x84\xCE\x81\x7F\x88\x39\x97\x07\xFA\x9C\x20\x06\x87\xDA\x53\xFC\x1D\xFF\xF4\xE1\x91\x6C\xAE\x11\xAC\x0C\xFB\x9E\xEF\xAF\xBB\xE4\x31\x1B\x85\xBA\x90\xB1\x3F\xEE\x14\xAC\xDE\x14\xED\x3E\x69\xCF\xFA\xB5\x95\x19\x2D\x82\x03\x8E\x90\x09\xE9\x19\xB4\x4B\x14\xC1\x7B\xBB\x48\x1A\x76\xF3\x62\x9E\x67\x29\x39\x3E\x97\xDE\x13\x99\xED\x23\xB7\x31\x22\x7D\x6F\x08\xE0\x8B\x69\xD6\xD6\xCB\x67\x49\x06\x6D\x0D\x26\xB8\xF1\xDB\xB5\xEF\x7C\xFC\xB5\xEF\x12\x5C\x05\x70\x91\xA0\x8E\x7E\x2A\xD6\xD1\x7C\x39\x0F\xDE\xAF\x8F\xD5\xFC\xCA\x1B\x96\xF5\xF8\xFB\x5C\x00\x10\x4F\x59\xF4\x01\xAA\x34\xA0\x6C\x7F\x25\xDD\xC5\x87\x00\x59\x52\x4E\x40\x4B\x16\xCF\xA8\x86\xDE\x40\x07\x2D\x1F\x6C\xEB\xE6\x61\x64\x58\xAE\x44\x7F\x3F\xAC\x79\x08\x0D\x0E\x37\xB9\x0F\x5E\xC4\x38\x42\xE2\xC3\xF8\x32\x97\x93\xED\x8B\xAE\xFC\x57\x4E\x72\xD3\x3D\x7B\xC3\x35\x60\xA9\xA1\xFE\x2A\xE1\x27\xCA\x5D\xAC\xB1\x5B\x5C\x1E\x03\x58\xB7\x88\x06\x26\x1F\x16\x09\x1B\xC5\xC7\x1B\xC7\xDA\xB2\xA5\x1E\xF5\x79\x61\x6E\xFB\xF8\x81\x43\x0B\xE8\xC2\x32\x9D\xD1\xC0\x24\xD3\xA6\x7C\xC7\xA1\xCC\xD3\x17\x31\x16\x79\xCF\x10\xEF\x77\xE9\x4D\x37\x47\x10\x82\x6D\x34\x31\x36\xDE\xCE\xB6\xEE\x8A\x96\x10\x38\x62\x85\xD4\x7F\x3E\x33\x2C\x3E\x98\x30\xF0\x0C\x3B\x1A\xA5\x1D\x10\x25\xE7\x43\x75\x53\x8F\xE1\x68\xE1\xE4\xED\x49\x23\x97\x8B\x14\x85\xC6\xF7\x49\x8A\x83\x9A\x58\x55\xEB\xC2\xFF\x40\x36\xE0\x70\xA9\x39\xD2\x85\xBD\x3A\x04\x41\x65\xFE\x28\xCE\x4E\x70\xB2\xA9\x60\xF3\x9B\x3A\xAD\xA4\x91\xF7\x96\x47\x90\x97\xED\x6B\x39\x3E\xDC\x6C\x5E\xD4\x81\x48\x4F\xA0\x15\x84\xAD\x06\xFC\xD2\x4D\xCA\x20\x0B\xBA\x43\xD7\x8F\xA6\x23\x9A\x0E\x44\x3F\xFA\xAC\x00\x7B\xD9\xDC\xEF\x1F\xC1\xA2\x29\xCB\x8D\x11\xCB\xD1\x37\xEA\x68\x87\x19\xCF\xD7\xFB\x3C\xB1\x57\x08\xEE\xBB\xA0\x4B\x4F\x3C\x2F\x44\x6C\x8B\x5C\xD9\x15\x34\x10\xA5\x04\x28\x4F\x1E\xC8\x62\x75\x37\x68\x3D\x45\xF2\x63\x53\x93\xBE\x61\x5C\x84\x15\xF5\xC8\x0D\x49\xDB\x1D\x79\x8F\xB1\xC2\x8C\x55\x49\x40\x34\xF3\xC8\xDA\xDC\xFC\xAF\x4C\xCA\x41\x43\x32\xB9\x89\xCE\x30\x27\x80\xE1\xF8\x56\x24\x62\x76\xDC\x6F\x9E\x79\xF9\x5B\x10\xC9\x76\xFD\xC3\x35\x1A\xFB\x9B\xC0\x24\x6B\x95\xC8\x70\xB5\xF1\xED\xA4\x15\x74\xB0\xFA\x6C\x03\x76\x54\x14\xC5\x08\x77\x59\x38\x21\x6A\x17\x04\x3C\x22\x07\x28\x42\x69\x6A\x47\x43\x93\x1F\x33\x79\x24\xFE\xC2\x40\xC0\x41\x18\xED\xA3\xAD\x92\x37\x71\x14\xC1\xA3\xD0\x89\x58\x88\x4D\x1A\x58\x70\xB6\x12\x18\x49\xBC\xB1\xCE\xF5\xFF\xDC\xE9\xCC\xF6\x9A\x72\x1A\x1E\xEA\x57\x34\x29\xC8\xD8\x10\xE3\x61\x1E\x90\x43\xD9\x11\x28\x3D\x90\x96\xE6\x0F\x79\x3C\xBE\x8B\x92\x1B\xDE\x38\x32\x78\xEF\x11\x16\x16\x84\x18\xC0\xB2\x44\x67\xB3\x13\x5A\xF3\x9F\x92\xC3\xBE\x54\x33\x8C\xAD\x5E\x5F\xC7\x30\x42\x69\x25\xAB\x79\xE9\x87\x60\xCF\x41\x48\x91\x71\x4B\x33\x7A\xDC\x77\x5A\x9D\x1E\x0A\x9F\xA5\x1F\xFA\xA1\xFD\x18\xC8\x89\xE0\xFB\x78\x8B\x01\x28\x65\x1B\x69\x29\xDF\x8C\xC2\x5F\x4A\x59\x96\x69\x7C\x0C\x80\xBA\x86\x2C\xFE\x2A\x09\x3B\x1B\x28\x0B\x9E\x0D\x10\x3B\x97\x34\x55\x45\x4D\x67\x62\xF1\x13\x83\xB0\x75\xFC\xCE\xF8\x51\x2C\xE1\xA2\x20\x0E\x9B\x20\xEE\x8B\xF1\x30\xC4\x0C\xA7\x53\x2B\xE6\xD3\x48\xF1\x26\x6E\xC3\x41\x46\x92\x21\x65\xA7\x13\x00\x59\x6D\xDF\x1A\x22\x0F\x13\xBA\x4F\x30\xF0\xC4\x91\x49\x3A\x1D\x3C\xBB\xF2\xBD\xDE\xC4\x3E\x63\x76\xF9\x07\xB5\xEA\x4C\x1F\x40\xB3\x3E\x6D\x03\x77\x4F\x5C\x7A\x76\xF4\x5A\x49\x92\x6C\x30\x29\xC6\x05\xAF\xC9\xDC\x31\x98\x4E\x24\x45\xD9\x01\x3F\xDB\x5C\x81\xB3\xFC\x97\xDF\x60\xE0\x61\x1B\x17\x36\xEE\x11\xFA\xAC\x49\x0C\xF1\x35\xE2\xE0\x14\xDC\x59\xDA\x3E\x63\xD0\xC8\xCE\x7A\x18\x91\x2C\x12\xCC\x0B\xC2\x1A\xF3\x1D\x55\xFF\xC6\xF8\x93\x44\x0C\x32\x59\xC3\x5F\xA5\x8C\x83\x48\x94\xB2\xE1\x29\x28\x3B\x62\x1E\xEB\xA7\x4B\xC8\x70\x4D\xCE\xA6\x6F\x4C\xDC\x58\xB8\xEB\x5E\x2F\x7B\x8F\x5F\x38\x32\xA8\x21\xA2\x72\xDD\x0E\xAA\xBD\x22\x35\xC0\x96\xB3\xBB\x1F\xC8\x35\xBD\x13\x67\x76\x3D\x2C\x65\xD6\xEF\x39\xDE\x59\x42\x9A\xE1\x0B\xC6\x39\x68\xFE\x62\x0B\x5D\xCC\x0D\x03\x1C\xDF\x9C\xCF\xBA\xF7\x81\x40\x88\xEE\x95\xEE\x99\xDF\xB2\x95\xAD\xA0\xB4\x54\xF3\xC7\x93\xA7\x64\x09\xA9\x6A\xC1\xA7\x03\x6A\x3C\x70\x37\xAB\xF7\xC9\xB2\xEB\xD7\x2A\x9C\x0F\xD4\x26\x15\x0E\xEE\x5F\xAC\x36\x61\x37\xDC\x71\x9E\x9F\x6A\x98\xF9\x09\xCA\xCA\xD9\xE1\x1E\xDE\x8E\x43\x03\xAA\xF3\x51\x59\xD8\x7F\x47\x7D\x4E\x8D\x1F\x8C\xD8\x82\xBB\x8E\x38\xCD\x4B\xF4\x5B\xC7\x9F\x80\xE5\xA2\xEE\x8F\x20\xC3\xB4\x5C\x4B\xD9\x92\x44\xE8\x12\xD3\x67\xB9\xED\xE4\xC6\xC3\x9E\xFE\xAD\xE9\x38\x83\xF9\xCA\xA8\xCC\x41\x0A\xED\xB5\x53\x37\xDD\xCA\x09\xD1\x5B\xBE\x0A\x60\x00\xD0\x39\x29\x70\x5D\x1C\x8F\x4E\x6C\xEC\x3C\x57\x19\x2F\x7C\x52\x72\xFB\xDE\xE4\x07\x26\x91\xA6\x6F\xB2\xC6\xFB\x4A\x3C\x03\xEC\x07\xE6\x6E\x48\xFF\x94\x39\xC7\xC2\xD6\xA7\x9B\xD5\x5F\xFB\x08\xEE\xC5\xBA\x6C\xBD\x83\x91\xE7\x96\xA1\xD5\xC7\x40\x34\x63\x60\xD2\xBC\xC5\x88\x59\xB4\x5B\x85\xDB\x28\x6E\x0F\xE7\x13\x46\x81\xAD\xB8\xD1\xE0\x14\x9B\x63\x7D\xB9\xE5\x20\x83\xFE\x0F\x69\xA4\x29\x00\xE4\x7B\x0B\x4E\x45\x1B\xF4\x89\xA7\x8B\xEA\xCF\xA9\x94\x44\xE9\x71\x28\x85\xCD\x4E\x82\x55\xED\xE8\xCA\x26\xFC\xC3\x49\x13\x5E\xBE\xC8\x10\x28\x00\x8E\x00\x5B\xE7\x28\x77\xD3\x83\x14\xD1\x3E\x86\xA7\xC2\xED\x72\x56\xE8\x21\x0E\xE8\x25\x4D\x6D\x89\x26\xF4\xB3\x56\xE4\xF2\xBA\xA9\xE1\x84\x16\x20\xC6\x7E\x82\xA6\x7C\xED\x26\x02\x23\xFD\x08\xB7\x2F\xCF\xD1\x63\xF0\x4C\x25\x97\x5F\x2E\x80\xED\x1E\x01\x1A\xA9\x90\xB7\xB4\x68\x50\x39\xA5\x53\x24\x20\xB5\x8B\xBF\x29\x47\x9D\xCE\x49\x61\xEE\x9E\x80\x51\xC7\xA7\x07\xA7\x55\x0E\x4E\xE1\xD1\xE3\x5E\x1F\x40\xBD\x30\xF1\x53\x73\x4C\x67\xAD\xF9\x1C\x0C\xDB\x96\x0C\xF7\x01\x84\xC1\x39\xB1\xA5\x75\x63\xC4\xB6\xB2\x01\x0A\x47\xEB\xCA\x79\x5C\xE8\x3D\xCE\xA7\x26\xF1\xA3\xF7\x92\x74\x52\x6A\xDF\xD1\xD8\x5D\x3A\xF2\xD3\x61\x76\x66\x74\x1F\x46\x76\x08\x14\x64\xCC\xEC\x6B\xD0\x42\x16\x47\xB2\x3C\xBA\xE8\xBB\x15\xB4\xD0\xE8\x30\x00\x5C\x11\x75\x31\x79\x22\xA8\x13\xB6\xCF\xE4\x06\x67\xA1\xC4\xDA\xC0\xE9\x93\xC9\xB3\x42\x80\x98\x25\x37\x14\x22\xB1\x68\x74\x29\x08\xA3\xC5\xCA\x3D\xB1\xC9\x57\xAA\x50\xF4\x7A\xA9\x72\x4D\x2D\xD5\x4B\x63\x83\xED\x1D\x84\x19\x92\x8C\x4C\x88\x7C\xC2\xF5\xD5\x7F\x9A\x9F\x37\x44\x04\xF2\x69\xE0\x8A\xA8\x0D\x6E\x8C\x46\xF0\x74\x75\xE3\x91\x8C\x88\xED\x63\xC0\x2D\x5E\x13\x5D\xE8\x58\xE1\xC2\xC7\x80\x95\x8F\x82\x5A\xB2\xA6\xA6\xDE\x2D\xFE\x17\x6A\xA1\x04\xAF\xC4\x6C\x4D\x7F\x7E\xEB\xF7\x8E\xA2\xE5\xCE\xDB\xD8\x00\xBA\x2B\x2F\xE6\x42\xFB\x58\x32\x01\x68\x39\x62\x3E\xD8\x4C\x1E\xA1\xC7\x26\x82\x03\x2E\xE3\xDA\x67\x3A\xEE\x52\xDC\xE8\xF7\x2B\x6C\xB5\x21\xB3\x40\x55\x13\x34\x95\x31\x61\xFC\xDC\xD2\x40\x99\xA4\xA1\x53\xDD\x3C\x19\x8E\xA8\x9E\xA4\xCD\x6F\x01\x1C\xFE\xE3\xDE\x97\x2D\xAF\xA5\xF5\x16\xC3\x41\x3D\x80\x01\x3C\xB1\x78\x09\x87\x87\x6B\xF2\x29\x02\x6C\x8C\x8C\x69\x6A\xC0\x1F\x4F\x48\xF6\xFA\xE2\x36\xAB\x17\xB0\xF0\x97\xC7\x27\x08\xEC\x77\xB8\x78\x08\xB7\xB5\x40\xD7\xE5\x81\x6E\x34\xE9\x20\x23\x2D\x46\xB2\x69\x08\xEA\xF0\x3C\xA6\x10\xC7\x36\x9C\x34\x6A\x83\xF8\x76\x9C\x86\x9E\xB4\xA4\xF5\x4F\x50\xF1\xA3\xB0\x8C\x7A\x22\x86\xE5\x04\x2E\x0F\xD0\xBF\x58\xA8\x41\x82\x38\x41\x94\xAE\xA7\x91\xAB\xC0\x7A\x08\xE5\xC8\xCC\x79\x39\x97\x24\x78\x16\x72\xDC\xFE\x3F\x03\x12\x44\xD1\x2C\xA4\x01\x8C\x92\x63\x5C\xEA\x8E\xA5\xAC\x28\xB4\xF6\x58\xCC\x65\x49\xAC\xBB\xFD\x75\x0A\x36\xC9\xE2\x3E\x61\x9C\x61\x42\xE1\x09\xD3\x1F\x9A\x96\xBD\x97\x15\x1F\x7F\x1B\x5E\x68\xB9\xE0\xB2\x4A\x11\xB7\x1B\x0B\xF1\x6E\x99\xA5\x22\x00\xE2\x94\x0C\x29\x5A\x21\x31\xEC\xE3\xD0\x2C\xC9\x3F\x8D\x92\x8D\xD5\x90\xC4\xCB\xD9\xEB\x39\x71\xB4\xA1\x02\x15\x08\x7A\x19\xDC\x29\x27\xE6\xF3\xF4\x5A\x4B\xCA\x77\xD9\xED\x59\xA4\x01\xC0\x86\x83\x41\x76\x27\xD5\x3A\x78\xC9\x72\xEF\xEB\x2A\x92\x99\x70\x1E\x95\xBD\xD7\x27\x06\xA7\xA2\xE7\xA5\xA2\x3F\xE6\x3C\x33\x09\xB5\x28\xCD\x50\x02\x71\x51\x08\x4A\x15\xA9\x18\xCB\x97\x00\xCC\xCF\x8F\x4E\xEE\xCA\xF1\x2C\xDF\x56\x63\x01\x44\x41\xE0\x98\xD7\xC7\xB1\x14\x4C\x6A\xEA\x30\x71\x66\xF3\xCA\x80\x2A\x0D\x71\x1C\xE2\x32\xA0\xF7\x6E\x19\xC4\xB1\xF1\x52\xEF\x54\xC0\x44\x5B\x9A\x1E\x59\xC4\x31\x0E\xF7\x8D\x0D\x09\xF8\x79\xEF\x37\x6A\x59\xEF\x5F\x20\x1C\x72\x64\x75\xD1\x2C\x78\xA1\x78\xF0\x7B\xFE\xA0\x63\x21\x3F\xE7\x5F\x3A\x78\xEF\xCB\xBB\xAD\x37\xA3\xB3\xD5\x65\xD7\x4B\x06\x7A\x2C\xBF\x60\x1B\x2F\x6F\x51\xFA\xC0\x15\xD8\xC2\xD3\x9F\x0E\x8E\x47\x98\x12\x16\xB6\x0B\xA6\x70\x62\x7E\x4C\xDC\x27\x5F\x43\x9C\xC9\xAC\x1E\x1E\x2D\x46\x5D\x20\xA1\xB4\x97\x47\x6D\xD9\x2F\xA7\x05\x66\x88\xF3\x3B\x67\x27\x91\xE6\x7E\x0D\x94\xBC\x24\xCC\x95\x36\x31\xAC\xFD\x71\xF2\x40\x49\x64\x6C\x06\x09\x82\xDD\xD2\xEC\x20\xDD\xEE\xC3\x88\x2D\x23\xDE\x0D\x65\xBF\xE7\x75\x99\x6F\x00\x5D\x89\xC0\x5F\x0E\x5E\x20\xFA\x74\x92\x82\x12\xDD\xCE\x36\x11\x02\xEE\xD9\xDD\xC6\x85\x04\x0E\xD5\xA8\x5A\x0F\x5B\x66\xD1\x66\x10\xE0\xBD\x36\x03\x58\x1B\xDB\xE3\xC1\x01\xCE\x82\xDB\xAF\xBE\x28\x99\x16\xB5\xE4\x1E\x14\xAD\x5B\x3C\x11\xC3\x49\xA9\xFD\x88\xB4\xBE\x67\x8D\x3F\x47\x71\x9F\x33\x7F\xA1\xFF\xAC\xB1\xF7\x12\x72\xFE\x15\x63\x70\x5F\x30\x14\xB9\xB3\x91\x0E\xD8\x08\x19\x9C\x4D\xD0\x18\x5D\x22\xCE\x2C\x6B\xD7\x95\x7B\xE4\x13\x9B\x01\xCD\xDA\xA4\x4D\x9D\x08\x0A\x0D\x16\x52\xAE\x0D\x32\x77\x65\x8B\xFA\xDA\x2A\xF8\x46\x2E\x07\x31\xCA\x8C\x1D\x33\x45\x26\x52\x3C\x74\x9B\x30\x2D\x0E\x8E\x06\x16\x67\xFC\xED\x32\xCC\x0C\xA3\x52\xD3\xEA\x63\xC1\x41\x6B\xFB\xB5\xC2\x6C\xED\x41\x93\x9D\xA8\x21\x9F\x55\x55\xEF\x6E\x93\x80\xFA\x9E\x1C\x42\xF9\xC8\xF9\x12\x2B\x1D\x73\x5D\x55\xD4\x7E\x38\x74\xFE\x5D\x44\x26\x15\x12\x33\x61\x1D\x55\xAD\x64\x9B\x53\x3D\xE3\xB8\xCC\x67\x6A\x68\xAE\xC7\xED\xBF\xC0\x92\x69\x2B\x39\xAE\x1D\x7D\x00\x3D\xAC\xB5\x41\x7B\x7E\x16\xCB\x62\xE7\x1E\xCB\x82\x5D\x9A\x5A\x4F\xEE\x05\x47\x00\x44\xFE\x99\xAB\xDC\xAF\x78\x1A\xAF\xA6\xE1\x5D\xBC\x62\x00\x81\x23\xF1\x6F\x2E\xE5\x4F\x20\x2F\x53\x4E\x7B\xD3\x45\x4C\xF4\x22\x7A\x13\x63\x67\x70\xE5\xF2\xBC\x07\x3D\x1C\xCC\xBC\x04\x67\x9A\x72\x8E\x43\xEA\xD4\x31\xD1\x94\x0C\xCC\x44\xF7\xAB\x0D\xCA\xF8\x00\xE8\x70\xBD\x9B\x61\xCE\xD9\xC5\xF1\x71\x6E\x3A\x84\xA6\x53\xAC\x42\xB2\x9D\xFB\xDB\x6C\xE8\xCC\xBF\x8D\x8E\x15\x6A\xA8\x68\xC2\x08\x3E\xB1\xE7\x78\xAE\x6B\x38\x0A\x05\x92\x7E\xA4\x19\x4D\x11\x9D\xD0\x8B\x80\xC7\x05\xC5\x02\x1F\x1C\x4E\xB1\x73\x00\xDF\x48\x19\xF8\x77\xC9\x6D\x60\x4E\x3C\xAA\xD2\xCD\xC7\x20\x14\x6A\x3D\xA6\xE5\x04\x20\x60\x31\xCD\x4D\xC7\xE6\x7E\x94\x2D\x29\x41\x52\x13\x9B\xCF\x16\x8A\x56\x4F\x8F\xEA\xC4\x16\xFE\x7A\x4B\xF6\x31\x52\x8A\xD7\x84\xE9\x81\x14\x43\x28\x8A\xA1\x14\x17\x99\x24\xC1\x55\x6B\x6F\xD2\x3E\x32\x86\x3F\xEB\x19\xFF\xF9\x90\x91\xBB\x92\xBA\x85\x75\x2A\xE8\x34\x52\xA5\x29\xE5\xD8\x31\xC6\x62\x57\x29\xA1\x0D\x6D\x39\x66\x03\x3F\xB6\xAB\x5B\xEF\xC1\xEB\x14\xC9\xFD\x9B\xAE\x00\x58\x2D\x0E\x5F\x09\xF7\xB0\x1B\x63\x0C\x65\xA5\xE1\x35\xE2\xD9\xB8\xD6\x21\x84\xCE\x5B\x5D\x00\xDE\xAC\xDA\xA1\x7C\x77\xB8\x65\x53\x22\xC4\xED\x12\xA6\x99\x83\x18\xFA\xB1\x7E\xFC\x28\x1F\x20\x72\xA9\x02\x9F\x84\x58\x58\x48\xD5\x57\xAD\xE4\x56\x48\x2B\x58\x51\xE4\x2E\xED\x14\x20\x64\x05\x0A\x49\xF4\x88\x23\x7A\x6B\x64\x2D\xB2\x64\x36\x8F\xF5\xEB\x33\x0D\x6B\xA2\x69\x04\xD7\xF3\x9F\x66\x92\x0A\x62\x3E\x76\x26\xDB\x81\xD9\x40\xC2\xCD\x8A\x96\x6C\x69\x74\x2C\x9B\x25\x7D\x6D\xD2\xE8\x12\x8C\x48\x9B\x6A\x26\x1C\x16\xC3\x47\x40\x15\x4C\x34\xA2\x48\x57\xB1\xBC\xA7\xCD\x88\xB2\xDB\x20\x13\x45\x7F\xA3\x64\xC1\x55\x79\xEE\x5A\x32\x24\xA9\x50\xA9\x77\x05\x7B\xB4\x47\xDB\x26\x4F\x69\xE7\xD4\xA8\xF6\x91\x63\x0A\x7E\xB3\x7A\xEA\xA0\xEE\x7B\x53\xD3\xBE\x76\x8B\x0C\xC8\x17\xDB\x13\xE1\xAD\x4B\x8D\xA7\x61\xD5\xF9\x46\x22\x40\xDA\xD2\x5A\xE1\xD0\x8C\xD1\x06\xC0\xB6\x19\x43\x8C\x88\x94\x44\x52\x81\x71\x60\x66\xE7\x64\xED\x32\x49\x49\x69\x73\xFE\x82\xFB\xE8\x80\xA0\x4B\xCA\x93\x07\x10\xE6\x41\xAC\xB9\x93\x5B\x2E\xE7\x6C\x14\x26\xA6\xC9\x11\x15\xEC\x16\x5F\x0D\x9B\xDD\xF5\x0A\x3B\x39\xB4\xEB\x01\x82\x5F\x25\x0A\x85\xA7\x00\xC0\xB6\xF1\x37\x89\xC2\x89\xF4\xDC\x5F\x47\xB4\x20\xDE\x51\x23\xB2\xE5\xB3\x5A\x1C\x10\x81\xDC\x72\xEE\x3A\x26\xFB\xA4\xBA\x6A\x1D\xB8\xE5\x0E\x81\xDF\x36\x16\x39\xEE\x32\xE8\x9F\x01\x70\x18\x6E\x3D\xEF\x7B\xE2\xCD\x94\x47\xD0\x81\xEC\x47\x8E\x3E\x6D\x98\xDF\xCD\x5D\x7B\x43\xCE\xCC\x4A\x53\xC0\xB9\xE5\x72\x09\x47\xD8\x1F\x62\x61\xFC\x0D\x63\xA3\x00\x2D\x78\xE7\x0A\x5E\xF9\xD4\x23\x6F\xE1\x56\x7F\xEF\x83\xBE\x23\xAA\xB8\x6D\xAA\xD0\x90\x06\xFF\xA7\x9D\xDA\xB7\x5D\xE6\x84\xFA\xD0\xA7\x3E\xA4\x1D\xD6\x13\xF8\x0C\x62\x47\x91\xA7\x70\x5D\xDE\x9D\x7A\x86\x73\xBB\xAE\xC5\x64\xE0\x39\x2F\xA3\x2F\x66\x48\xC8\x5F\x15\x73\xDD\xE2\x15\xFD\x12\xE4\x35\xAA\xA5\x25\x0B\xE7\x5F\x50\x6A\x81\x27\x24\x3E\x11\x2B\x3B\x5D\xA7\x9D\x28\x2D\x80\x36\x51\xE9\x7B\x9C\x77\x4B\x10\x0B\x5B\xC7\xDE\x58\xC0\xF7\xDD\x2B\x9B\x5B\x34\xD0\x45\x4A\xE0\x87\x15\x1C\x25\xD3\x2F\x13\x04\x90\x67\x76\x7C\x2C\x3B\x84\x18\xD7\x78\x0F\x86\x11\xB7\x73\x0B\x84\x56\x59\xCD\xA6\x9A\xCE\x5D\xEB\x25\x18\x54\x8D\x0B\x24\xBD\x70\x94\x93\x26\xC5\x9C\x3C\x53\xCE\xAD\x2F\x99\xEC\x82\xCF\xCD\x15\x4A\xF1\x47\xB2\xEE\x5D\x56\x71\xE5\x7E\xBF\xFE\xFF\x8C\xE9\x55\xD7\xFF\xB5\xB5\x51\x6A\x62\x13\xD5\xC7\xAE\x5E\xFF\x98\xBD\x42\x4D\xE3\x37\xAA\x1F\xA2\x93\xB3\x89\x87\x24\xE4\xEB\xBC\xC1\xEA\x94\xC3\xF4\x5F\xC7\x3B\x4C\x5F\xAD\xB2\xDF\x88\xD4\x49\xB1\x9E\x57\x7E\x28\xA0\xB3\x98\xED\x91\xA3\xD2\xE4\x9A\xC2\xEE\x7E\xBD\x98\x8C\xED\xA2\xFA\xC8\x94\x6B\xBB\xA6\x03\x53\xA8\x8C\x8B\xC5\x73\x97\x78\x6C\xDD\xCA\x36\x27\x43\xC9\x17\x19\x4B\x4F\x9E\x40\xFA\x67\x5A\x44\x86\x16\x3D\xA5\xBE\xD0\xF9\xDE\x45\xD3\xE4\x42\x46\xE2\x88\x86\xAA\xBF\x4F\x42\x4F\x6A\x2B\x53\xEC\xF6\x18\xAC\xCE\xFC\xAC\xF7\x65\x29\xDF\x8C\xDD\x11\xA7\x28\x48\x28\x9B\x4A\xFD\xE0\x2D\x31\xDA\x8A\xB7\xF7\x75\x1C\xDA\x7F\x9B\x32\xDA\x97\xEC\x0E\xAA\x6C\xEB\xA6\xD3\xE4\x55\xB6\x6A\xCF\x2D\xCC\x42\xA6\xCC\x84\x27\x2A\xE4\xEC\x4F\x28\xF5\xD7\x62\x4E\x89\x1F\x0C\xCA\xA1\x4D\x32\x42\x92\xB3\x3C\xB1\x45\xA2\xA5\x8E\x4E\x6F\x4D\x29\xF9\x8B\xED\xD9\x55\xA1\xED\x1E\x42\x7B\x63\xBD\xCF\x7B\x89\xF7\x92\xBC\xCE\x4F\xAB\x3A\x97\x80\xA0\x22\x76\x72\x87\x6E\xD0\xC8\x50\x47\x7B\x76\xAE\xFB\x53\xF6\x7B\xEC\x5D\xD5\x08\xE7\xB7\xA1\x1B\xA1\x73\x4B\xF4\x38\x86\x1E\xC2\x70\x97\xD1\x78\x40\x3D\x8C\x96\xE1\xD8\x8C\x3E\x8B\x89\xBD\xA1\x2D\x06\x25\x7C\x22\x11\x8F\x93\xE9\x66\x22\x4E\x01\xF6\x91\x88\xD4\xBD\x44\xC5\xD7\xBD\xA4\xD4\xB1\x00\x5F\xFA\x3D\xA2\x5B\x7D\xA7\xA8\x6E\x56\xFF\x8A\x92\x1B\xDC\xEB\xC0\x69\x3B\x4B\x25\xDC\xAB\x1B\x37\x99\x76\xAD\x1C\x88\x3D\x63\x3A\xCC\xBD\xE4\x2E\x54\xB6\x78\xE6\x04\xA3\x58\xBD\x33\x91\xC7\x9F\x90\xB7\xDE\x8B\x64\x1D\x8C\xCE\x0F\xD9\x8A\x81\xDE\x4C\x88\x8D\x15\x76\x88\xBD\x29\xEA\xBA\xF9\x0C\x3B\x06\x24\x9B\x7A\xF9\x15\x85\xA7\x7D\xFF\x01\xE9\x07\xA0\xF6\xE1\xC9\x1A\x91\x24\x50\xD8\xEA\x14\xAF\x49\x7C\xEF\x38\xA8\xA4\xEA\x02\xD8\xBC\x09\x8C\xE6\x02\x61\xF6\xF1\xE0\xA9\x83\x1D\xCD\xBA\x7D\xF6\xF5\x2B\xB3\x8E\x97\x7B\x39\x07\xB0\x92\x72\x72\x2C\x9E\x8E\xBE\xED\x74\x77\xA5\x14\x5E\xE2\x95\xE6\xCE\xDE\xA1\xB0\x0B\x39\x44\x85\xCD\x70\x01\xC2\xFF\x3C\x7D\xA6\x0F\xD1\x70\xE2\x43\x15\x6B\x9F\xE4\x18\xBB\x28\x9B\x19\xD0\xE6\x84\x68\x9C\x3E\x05\x0A\x4B\x99\x07\xC3\xB5\xC1\xBD\xE4\x10\x04\x41\x74\x2A\x14\xB7\x58\xE7\x3A\x9B\xCA\xC8\xF8\xBC\xAF\x75\xFF\xF1\xFA\x95\xB8\x71\x1C\x7F\xAF\x14\x63\x9D\x32\x20\xF9\xB0\xE1\x07\x5E\xF5\xBF\xDD\xCF\x72\xBB\x19\x13\x8E\xF8\x4E\x19\x04\x08\xA5\x3F\x4A\xE5\x44\xD6\xC0\x08\x9F\x08\x8A\x62\xBD\x8C\xB3\xF1\x13\x10\x80\x3D\xC7\x8F\xD2\x66\x32\x3C\x5B\x80\xCE\x47\xDC\x19\x75\x52\x5D\x43\x53\xE9\x6F\x9A\x5A\x5C\x8E\x0D\x3D\x4A\x2B\x97\x53\x84\xD4\x3A\x4C\x59\xA8\x4E\xD6\x9F\x34\x8F\xB7\xCF\x39\xA7\x44\xCD\x9A\x83\x0F\xD1\x64\x86\x38\x89\x75\x77\x8E\x64\xAB\x4A\xBF\xFD\x4F\xA2\x4C\x7D\x7A\x4D\x28\x0B\x8B\x0E\xF7\x5A\x02\xD8\x4B\x6C\x52\xCC\x7E\x33\x21\x94\x11\x3C\xFF\x01\x56\x91\x20\xD2\x28\x45\x2C\xE0\x3D\x6E\xF6\x59\x7C\x13\xB1\x7D\x6F\xFA\x0F\x65\x9A\x97\x96\x78\x11\xCC\xC9\x83\x73\xB2\xAF\xFC\xAC\x8B\x59\x21\x68\x77\x0C\xEE\x6A\x31\xA9\x41\xEE\x06\xB1\x15\x3F\x4A\x8D\x40\x59\x68\xF4\x59\xF1\xB1\x74\x33\x42\xEA\xB2\x2D\x93\x0A\xA6\x3A\x84\x3D\x46\x70\x43\xCD\x81\x8C\x16\x18\x11\x1D\x9C\x4C\xEA\x24\x2C\x72\x98\xAA\x0F\x6D\x1B\xC4\x1F\xFE\x2C\xF7\xA5\xEC\x29\x82\xDE\x3C\x69\xE1\x39\x06\xED\xAB\x89\xF0\x50\x41\x54\x0A\x88\x00\x4D\x50\x92\x51\x2F\x50\xBA\x29\x27\x4C\x7E\x40\xCD\xAC\xEA\x6B\x41\x66\x05\x91\x33\xB6\x48\xCC\xA5\x1F\x5A\x85\x45\x51\x2E\x9E\xE0\xA2\x2D\x90\xD7\x33\xA4\xFB\x7A\x9C\x38\xBB\x8F\xC5\xDA\x60\x58\x4E\xF8\x80\xAB\x9F\x78\xE2\xD9\x37\x4A\x9D\x91\x9A\x26\x33\xCE\x77\x4B\xA3\xA7\xF4\x5C\x1D\xF1\xCA\x02\x65\x4F\x44\xC4\x9B\x96\x7B\xE6\x61\x43\xCA\xE3\xC1\x46\xB5\xBA\x4C\x78\x80\xD4\x8E\xA7\x53\x0E\xA0\x40\xAD\x42\xDD\xA8\x51\xCC\xFB\xEA\x16\xA7\x6B\x27\x93\x1A\xE3\x5C\x92\x13\x2C\xE3\x10\xEB\xD6\xCE\xBE\x37\x16\xC5\x08\x46\x40\x0F\xCB\xDD\x20\xBB\xAA\x10\x2A\x27\x4D\xDB\xC3\x49\x3B\xE1\x15\xCC\xF7\x9B\x9E\xED\x92\x7F\x61\xFF\xBB\x11\x4B\xC0\x25\x3F\x9E\x14\x1E\x37\x13\x71\x60\xF7\x6D\xF8\xD3\x8B\x37\x7A\x4A\xE6\x93\x60\x1C\x50\x7B\x69\x33\x47\x9D\xF9\x60\x45\xCB\x67\x25\xA0\x5D\x4B\xB5\x0E\x11\x76\x56\x9F\x0E\x1E\x6E\xE9\x8D\xBA\x23\x3E\x0C\xF1\xD0\xD6\x67\x43\x9D\x9C\xD7\x0A\x4C\x17\x62\x68\x4F\xDA\xC5\xF8\xF6\x96\x00\x0F\xA6\x96\x61\x1D\x47\xCC\x22\x38\x31\x1A\xFC\xE2\x90\x8D\xCF\x0E\xA6\xC5\x53\x92\xAC\xE4\x19\x4B\x4A\xA4\x1A\xB7\x91\x0D\xDC\x3F\x07\x0D\x7E\xB0\x00\x80\x8E\x2B\xC4\x38\xB7\x03\xBB\xE8\x79\xA5\x6E\x14\xE2\xD8\x06\xF1\x80\xA3\x2F\x33\x87\x27\xCA\x37\xF6\x2D\x15\xFD\x64\x79\x99\x3B\x83\x1E\x78\x81\x14\x13\x19\xB7\xD4\xD7\x81\x24\x54\xD5\xFB\xE1\x5F\xDC\xC3\xCA\x72\xFD\x2F\x03\xFF\xA9\x84\x09\x37\xA4\x10\x44\x06\x03\xA3\xEA\x53\xCA\x26\xE7\x37\x9B\xCE\x18\xD0\x3D\x12\x4D\xA1\xDA\xF4\xC7\xE3\xB9\x49\xDA\x93\x46\x34\x47\x5D\xFB\x16\x1D\x90\x02\x73\x39\x50\x4B\x9A\xCB\x8C\x3E\x4F\x78\x9E\x52\xEC\x97\x7D\x2E\x7A\x5F\x92\x0B\x38\xD8\xB1\x9F\x39\x03\xBB\xFA\xAF\xE1\x6A\x59\x75\x66\xED\xC0\x8E\xFE\x94\x97\x08\xE3\xBA\xBE\x51\x2E\x3D\xCB\x59\xD8\x99\xE4\x4A\x81\x64\xF6\xC6\x44\xD4\xCA\xB4\x5F\x03\x82\x62\xF0\x04\xA8\x81\x62\x39\x42\x0C\x56\xAE\xDD\xDF\x64\x76\xB2\xCE\x20\xD6\xBE\x8A\x99\x10\xF4\x16\xDD\xCE\x03\xDC\x91\x8A\xF9\xDB\xB7\x7F\xEE\x2A\x80\xA0\x1F\x6F\x4D\xA7\x0D\x52\x37\xE4\x85\xF1\xFB\xD3\x8A\x9F\x1F\xCC\x5D\x89\x42\x21\x32\xBC\xB7\xCF\x04\x7D\x78\x64\x96\xBF\xF1\x43\xC0\xB2\x96\x49\x9C\x5E\x39\x67\x67\xA3\xD4\xB3\xD4\xB9\x4F\xED\x9F\x66\xF0\xC1\x5D\x11\xE0\xCC\xDA\xD6\x22\xE2\x5C\x8D\xD5\xB2\x94\x3C\x17\x28\xDF\x40\xC1\x33\x9C\xC1\xA7\x98\x57\x53\x4B\xA1\xF8\x34\x87\x7B\xCB\x13\xEC\x4E\xC6\x1E\x0C\xC4\x51\x61\xB6\xCC\x90\x62\x28\xB9\x01\x4B\x14\x66\x32\x6B\x24\x9F\x14\x9B\xB7\x0F\xFB\xE5\x74\xAF\xFF\xDE\x42\xCA\x23\x54\xA8\xDD\xD2\x5B\x7F\xE3\x42\x4F\xF1\xEF\x38\x4F\x08\x8E\xC3\x60\x62\x14\xAE\x65\x75\xF7\xBF\x7A\xD3\x2D\xCF\x20\x5E\x99\x17\x24\x52\xCB\x76\x1F\xEA\xA4\x20\x5C\x47\x1D\xF0\x24\xB6\x48\x3C\xDD\xA0\xE5\x94\xEB\x81\xDB\x91\xFB\xA2\x4A\x20\x8E\xD4\xF4\x83\xB9\x1A\xB0\x1E\x38\xAC\x30\x50\xA5\x40\x25\x4A\xA5\x31\x57\xF2\x76\x30\x5F\x2E\x70\xD7\x41\xB7\xA2\x8B\x78\xE5\x4E\x68\x4B\xD7\xEE\xC4\xE1\x89\x2F\xDF\x00\x85\x32\xCC\x55\xBB\xA0\xB0\x23\x39\x5C\xF9\x14\x84\x01\x91\x4E\x09\xB0\xEE\xFD\x3B\xBE\x40\x0D\xFF\x17\x03\x90\x4D\x72\xA7\xBA\x4D\x06\x6D\x5D\x17\x3D\x6E\xBD\x14\x62\x6F\xED\xB4\x1D\xA9\xAE\x98\xCA\xB2\x98\x3F\x60\xD4\xC2\x8D\x84\x13\xAF\x19\x7C\xF4\x94\xFC\x2D\x05\xE4\xFE\x94\xE9\x3C\xC9\x52\x2E\xFD\x8C\xF6\x21\x71\xED\x79\x8E\x26\xCA\x09\x85\x37\x54\xD8\xD2\xBE\xDE\xC7\xF9\x02\x91\x6B\xE3\xBF\x3F\xF2\x05\x47\xB5\x67\x86\x57\x11\x33\x2A\x1B\x2A\xF4\x02\x52\x71\xEA\x90\xEE\xB5\x70\x66\x02\xCE\xA1\xBD\x74\x90\x96\x08\x00\x1A\x33\x02\x9A\x26\x11\x19\x58\x0A\xE2\x1B\x0A\x7B\x24\x45\x57\x02\x20\x09\x52\x51\xDD\x0D\xFD\x79\xA0\x69\xAB\x30\x90\xBD\x41\x9C\x65\x25\xC6\x25\xE1\x9D\xDB\x75\x6C\x58\x3C\x85\x71\x3A\x88\x15\x8C\x25\xDE\xBE\x5A\xD3\x95\xD9\x61\xE1\x3F\xFA\x09\x64\xFB\x07\x7B\x92\x5E\x85\x22\x9E\xA5\x61\x47\x84\x30\xF0\x4D\x4C\x27\xF3\x5A\xE8\x09\x4D\xAC\x2B\x1C\x33\xB2\x69\x40\x6D\x77\xDD\x53\x6A\xC1\x0D\x77\x4F\x63\x78\xDE\x4B\xD0\x12\x2B\x10\xEA\x85\xE6\x5A\x3F\x1C\xB2\xBC\x77\x03\x40\xFD\x0C\xC6\xEC\x98\x37\xE6\xC6\x30\xB0\x9B\xB4\x8E\x4E\xAF\x41\x5C\x73\x8E\x24\xD6\xB6\x92\x49\x76\x00\x62\x64\x21\x06\x19\x3A\xA6\x1F\x19\x22\x43\x60\xD0\x82\x1D\x1D\xF8\xA1\x2A\x24\xFE\xC9\x66\xCA\x75\x1C\xAA\x1C\x12\x18\x83\x7E\x69\x45\xD9\x24\xAA\xCE\x93\x20\x36\x28\x14\xA8\x2C\xBB\x7C\xC0\xF4\xE2\x59\xE5\xB2\xC6\xB6\x9C\x6A\x17\x36\xE8\x04\xE4\xC3\x1A\x99\xB4\x0E\x85\x2F\xE9\x0E\x2F\x07\x68\xC8\x2C\xCD\x2B\xC1\x70\x32\x24\xFE\x5A\x70\x2D\xB3\x12\x28\x7F\x12\x8D\xFD\x52\x7D\x3B\x6D\xEF\x79\xB8\x7C\x3E\x17\xFC\x7A\x0C\xB3\x37\x2C\x87\xD7\xC5\x39\xEF\xDF\x39\xD4\x3C\x92\x40\x3D\x2E\xBA\xE9\xB4\x0C\x79\x71\xA5\xE7\xF0\x71\xF0\x01\xB0\x94\xD5\xB3\xD0\x39\xA8\x76\xF0\x68\xCD\xF8\x6B\x52\xC0\xDF\x90\xE6\xE7\xE9\x12\xB8\x47\x4F\x5C\x2C\x51\x20\x12\x9F\x16\x46\x0B\x9D\x5F\xBB\x59\x00\x26\xA8\xFD\x4D\x74\x1A\x0D\xFF\xD0\x1D\x1A\x04\xF8\x5B\x99\xF7\x37\x82\x58\x7C\x59\x03\x79\x4C\x25\xDB\x3C\x68\x12\xF4\x38\x1E\x84\xA7\xF3\xE8\xC8\x8E\xF6\x9F\x23\xAD\x47\xD3\x17\x75\xDB\xD9\xFD\x94\x24\x32\xED\x59\x1A\x19\xC2\x91\x68\xE2\xF9\xF2\x4D\xE6\x6F\x21\x3F\x40\x36\x7A\xAF\x3F\x96\xAD\xB3\x9A\x88\xD1\x8A\xA2\x1E\x50\xE6\x95\xBE\x28\x4F\xA9\x8B\x14\xEF\x86\x0D\x83\x9D\x6D\xED\x6B\x5E\xB3\xC7\x30\xA5\x94\xA9\x15\xF4\xFA\xC8\x02\xB9\xCA\x87\xA9\x92\x65\x5E\xA3\x55\x3E\xF5\x93\x25\x30\x3D\x85\x71\x8B\x93\xAC\x8F\x8D\x23\x46\x61\xA1\xAA\x27\xF7\xD6\x3E\x2B\x80\x16\x7E\xD1\x7A\xD5\xA1\xC2\x7D\x90\x34\xEE\xF0\xFA\x12\x00\x33\x2E\xB8\x40\x54\xDC\x82\x08\x9E\xA3\xA5\x2D\x66\xAF\x20\x98\xAF\xD0\x5E\x3C\xC8\xD7\xEA\x94\x5E\xD9\x1C\x31\x83\x19\x7F\x44\xCF\xFB\x6A\x1D\xD4\xB8\x10\xF8\x78\x26\xF9\xC8\x83\x8E\x15\x3A\x68\xCD\x95\x5F\xAC\xFE\x17\x7A\x12\x20\xF5\x87\xC6\xD7\x32\x80\xC2\x5A\xD5\x5A\xD6\xCE\x6E\x81\x90\xCA\x18\x31\x87\xF3\x61\xB0\x10\x43\x53\x86\x86\xF4\xB2\x8B\x52\x76\x58\x9E\x01\x44\x92\x18\xB0\x6A\x23\x01\xFD\xB8\x5E\x7F\xC1\x14\xF6\x97\x25\xFA\xB5\x2D\x5A\x9A\xB5\xC2\x1E\x8E\x18\x46\x7F\xAC\x38\xBC\xA4\xE0\xE1\xF1\xAB\x67\xA6\xF1\xF9\x5F\xAE\x71\xBC\x86\xC6\x18\x2B\x4C\x39\x1F\xC4\x44\x82\x4A\x93\x1E\xD9\x67\x16\xF2\x68\x1F\xDF\x4B\x53\x67\xA5\x63\x69\x1C\x5C\x32\xE2\xB6\xC1\x70\x8B\x4E\x10\x14\x6E\xEE\x3C\x1F\x0D\xD6\x22\xD7\x49\xBB\xC7\xB8\x8A\x6B\x20\x8F\x37\x72\x89\xE5\x42\x2C\xD2\xB7\xAB\x63\xD5\x1F\xFD\x3E\x89\x12\x63\x68\x5A\xD2\x32\x6B\x08\x5B\x25\x05\xBF\xE3\xBF\xF4\xEF\x78\xFB\x6F\x56\x91\x98\x2B\xE1\x80\x45\xD8\x80\x1B\x8A\xC7\x35\x1D\x74\xD6\x2E\xB4\xC9\xEF\x1D\x18\xC7\xAB\x22\x3B\xF4\x09\x15\x98\x1F\x09\x50\xF4\x12\xA0\x93\x91\xFD\x07\x57\x91\x8D\x42\x24\x6F\xBE\x07\x7C\xF0\xAA\xEE\x63\xA1\x72\x4B\x6F\xA6\xF4\xCF\xA7\x60\xA9\x74\xBF\x5A\x16\xE7\x68\xE7\x8D\xDE\xC3\x52\x19\xF3\xF9\x61\xBD\xD1\xDE\x9C\xC5\xA4\x21\xDA\x62\x83\x90\xBF\x62\xFE\xD1\xCF\x42\xB2\x44\xF2\x4C\xA1\x9A\x7C\xC0\x8B\x95\x54\xC5\x48\x33\x9B\x81\x31\xA9\x31\x8D\xF9\x07\xC4\x6E\xBE\x88\x55\x71\xC6\x48\x90\x69\x05\xF1\x65\x3D\xCE\xE5\x79\x5F\xC7\x0C\x87\x80\xC7\xCC\xB7\xFE\xE9\xB6\xC6\xF2\x0F\x3C\x0D\xA7\x36\x6A\xC0\x75\xD8\xE4\xE8\xF4\x12\xE7\xB3\x21\x10\xFB\xE2\xC8\xA3\x67\xE1\x79\xB9\xF9\x10\x50\x74\x69\xE3\x8F\x08\x64\x4A\xAF\x6C\xC7\x6C\x33\x22\x9D\x6C\x1D\x44\x23\x6B\x22\xC3\xD0\x09\x1E\x85\xAF\xB2\x45\xE6\x0D\xD4\x88\x65\x26\xC8\x9D\xA7\xF2\x30\x03\xFB\x68\xF5\x40\x79\x7D\xCF\x85\x64\x18\xEA\x53\xEC\xEC\x83\x75\x34\xF8\x4B\x15\xAF\xE7\xF3\x0F\xD9\x70\x2E\xFD\x01\xEB\x45\x0B\xBB\x66\xDC\x76\x47\x34\x42\xA8\x68\x9A\xF9\x64\x3F\x53\x8F\x25\x8A\x98\x20\xAC\xDB\x0B\x4A\x15\xD1\xCA\xFF\x96\xA4\x27\xC6\x56\x5F\xE5\x32\xC4\x3A\x83\x5B\x8E\x36\x43\xF9\x8A\x84\x0A\xA1\xA5\xE7\xBF\xE1\x82\xC5\x5D\xCE\x01\x1C\x35\xB5\x9E\x69\xD5\x9B\xD9\x65\x3C\x07\xB9\xF4\xB4\x6D\x59\xE7\x57\x07\x89\x3E\x09\xC2\x52\x15\x4F\xCB\xFA\x56\xA3\x8E\x04\x96\x03\xC6\xB4\x97\x6C\x57\xEE\xC5\xAC\xD6\x40\x2F\x09\xEC\x47\xEF\xAA\xF9\xBE\x5A\xE4\x7A\xA1\x5E\x04\x66\x13\xF9\xF1\xEF\xE7\x66\x82\x5C\xBA\x25\x7F\x79\xD6\x74\xBC\xFA\xD2\x4B\xFD\xC0\x08\xFF\x17\x6B\xFE\x48\x47\xC0\x88\x7F\x85\x75\x5F\x03\x37\x10\xE5\x89\x0A\x86\x8F\x17\x9E\x7C\xFB\x2C\x05\x14\x46\xDB\x7A\x93\x16\x0B\xBC\xCA\x25\x55\xC3\xEA\x68\xAF\xF5\xF4\xD2\xA0\x74\xEA\xFC\xD2\xD8\x8F\x2C\x93\x39\xB5\x3F\x5C\x8E\x64\xCC\xDB\x71\xE4\x82\x32\x2F\xC2\x36\x12\x16\x5B\x58\x6C\x74\x83\xAB\xBA\xD5\xFF\xAC\x7D\xE3\xDB\x1F\xA3\x5F\xCB\xF9\x48\x12\xF0\x71\xAD\xA4\xA4\x99\x5F\x63\x22\x21\x96\x04\x58\x8A\xD2\xAE\xE8\x25\xD3\x42\x8C\x2B\xA8\x31\xD7\xE7\xA3\x2B\xFD\xD2\x48\x63\x8B\x07\x2B\x2D\xFC\x46\x21\x20\x0F\x49\x04\x1F\x55\xAE\x01\x94\x64\x84\x38\x01\xF4\xD6\x6A\x5E\xA9\x8D\x62\xD5\xE7\x39\xF7\x19\x4D\xE3\x67\xAE\x0A\x00\xF9\xD4\x3F\xC9\xB9\x8A\xBF\xD2\xA4\xD3\x35\x93\x6A\x56\xFA\x39\x53\xF7\x0A\x68\xA8\xDA\x52\x24\x3C\xEB\x71\x79\x1F\x70\xD3\xB2\xD3\x13\xA5\xE6\x10\xD7\x5B\x6E\x94\xDC\x87\x61\xB5\xD7\x7D\xBA\xD6\x0B\x2C\x3A\x50\x28\x4E\x33\x58\x77\x1B\x71\x0A\x8C\x6E\x23\xDE\xA4\x31\xF1\x50\xF0\x38\x21\x84\x0B\x67\x54\xDF\xA4\x98\x3B\xE8\x6E\x73\x62\x9D\x52\xD0\xBD\x23\xB6\xA6\x94\x07\xBA\x73\x0F\x87\x41\xE3\xE4\x67\x1A\xAE\x77\x81\x6C\x14\x92\x08\xD5\x79\x5C\xAD\x29\xDD\xE1\x3D\xFA\xC5\xE3\xD3\x6E\xA9\xDF\xD8\x3C\x49\xC2\x0D\xAC\x38\xC1\xD8\x1D\x83\x03\x0B\x25\x5E\xC2\x3B\x34\x8D\x55\xEC\x83\xAA\x6E\xE2\xA3\x87\x73\x78\xB4\xE9\xDD\x1F\xBB\xF8\x85\x89\x24\xC8\x00\x24\xB3\x28\x47\x5C\x45\x28\x55\xC5\x48\xDB\x7C\x9B\x9C\x8C\xB6\x11\x67\x82\x3C\x46\x31\x17\x42\x55\xE6\x32\x34\x87\x83\x0A\xBC\x5C\xC1\xCC\xF6\x9F\x19\x00\x50\xAD\xC0\x02\x6D\x15\xC1\x1B\x2B\xE1\xBD\x4A\x3E\xEA\x59\x01\x60\x01\x00\xC2\xA3\x0E\xE1\x58\xAB\x48\x7F\xF9\x12\x71\x7A\x47\xDC\x0C\x07\x5B\x08\x9E\x57\xE4\xDC\xA9\x75\x2F\x03\x24\x77\xFD\xBF\xAF\x80\xAD\xD5\x9E\xEC\x7C\xA4\x7C\xF9\xDB\x2F\x53\x69\x5E\x92\x1F\x84\xEA\xFA\xA1\x48\x58\x34\xC9\x79\x24\x07\x05\xD0\x50\x19\xC1\x34\x53\x29\xD2\xD3\x8D\xB4\x34\x50\xAA\xF2\x62\x93\x33\xB4\xA5\x7A\xCA\x04\xFA\x94\x58\xAB\x55\x6F\x9F\xD4\x5F\x51\x56\x9D\x09\x05\x17\xB9\xC9\xD9\xCF\x33\xB8\x8F\x9D\xC9\x32\x82\xEC\xE7\x85\x67\x86\x98\x59\x0F\xFA\x09\x3A\xC6\x56\x1E\x20\xA1\xF2\x8C\x71\x50\xD8\xFF\xD6\x8B\xA6\xD9\x92\x2D\x7F\xE6\x0D\x2D\xDF\x35\x34\xFE\xBE\xEA\x60\x88\xFC\xE8\x57\xE6\x8B\x57\x3F\xCA\xDF\xF7\x0A\x14\x81\xF5\xC2\xDA\x9A\xAB\x9C\x60\x4D\xE1\x54\x0D\x13\x08\x09\xE0\x95\x16\xD1\xAC\x89\xF5\xD8\x53\x57\xFB\x06\x13\x44\x50\x8E\xEF\xD8\x50\x3D\xED\x38\x4A\xC9\x8F\x35\x49\xCA\x80\x27\x3C\x2F\x3E\xFF\xE5\x0C\x8B\xE7\xA6\xD8\x8C\x64\x6B\x53\x6C\x9E\xCB\x9B\xBC\x70\xFF\x58\x20\xF6\x27\x63\xEA\x5E\x4A\x3C\xD4\x97\x6B\x5D\x3C\xAA\x9C\x5C\x94\x58\x76\x0D\xE2\xBF\xD4\x00\x57\xB9\x5C\xCC\xBD\xF9\x3B\xE3\x83\x6E\x9A\x7D\xE5\x4D\x5B\xFE\x6F\x6B\x6D\xB1\x6D\xC6\x1D\xF9\x00\x87\x85\x37\x5D\x0C\x1A\xFA\x80\x83\x7A\x1F\x8A\x6F\x3E\x8D\x85\x33\x73\x24\xBF\x58\xCA\xCB\x42\xD3\x91\xE6\xD7\x12\x55\x4E\xFC\x54\x8A\xB5\x91\x71\x4A\xB4\x1C\xC2\xB6\xA2\x24\x44\x3D\x91\x9D\xA9\x0A\xAA\xFD\xF7\x20\xE9\x35\x4F\x89\xA6\xE0\x95\x22\x92\x8F\x54\x21\x05\x62\xA3\xC7\xB6\xDC\xAE\xDC\xE9\xF4\xF1\x1C\xCD\x87\x50\x5B\x8C\x61\xC0\x1A\x6B\xAD\x7C\x62\x1B\x40\x3B\xDD\xEE\x5E\x03\x26\xA7\xE2\xEE\x5F\xB7\xFC\x98\x92\xDD\xF2\xF2\x0A\x55\x7A\xCC\x26\x3E\xEC\x44\x76\xEC\xA1\x7D\xC3\x43\x80\xDD\xC6\xC4\x13\xD3\x7C\x91\x79\xDC\xA0\x43\x9F\xEE\x1F\xB5\xFB\xC6\x33\x11\xD8\xA1\x0F\x91\x48\x27\x74\x3C\x7F\xBD\xAF\xA6\x49\xBD\xE1\x40\x65\xB3\x00\x7F\x25\xA3\x20\xBB\x33\x82\x7A\xF6\xCB\x90\x10\x3F\xF6\xAF\xCE\xB5\xCF\x1E\x60\x6A\x83\x3F\x7A\xA7\x05\xE7\xFB\x5D\xD9\xAE\x9E\x11\xB7\xC8\xEC\x7D\x83\xCA\x03\xB5\xE8\x7D\x09\x70\x3E\xA9\x9C\x31\x37\x3C\x1D\xEC\x73\xB3\x30\x57\x34\x5A\x14\xF1\x56\x9B\x31\xD7\x17\x46\xF2\x11\x66\x7E\x27\xB1\x73\x75\xE4\x62\xA9\x69\x71\x7D\x65\xE7\xAE\xC1\xE4\x90\x30\x19\x9F\x65\xB1\x58\x0C\x77\xA6\x60\x0C\x8F\xB2\x4B\x6C\xD4\x48\x3C\x53\xF6\x53\x2E\xFE\x00\x61\xB2\x7F\x4A\x75\x13\x2A\x0A\x90\x70\x35\x94\x04\x3B\x82\xD9\xDC\x9D\x9A\x44\xF5\x06\xDE\xBC\x73\x62\xAF\x2D\x49\x5E\x24\x6B\xB9\x2C\x33\xC3\x52\xFC\xBE\xC7\xA5\xAA\x50\x43\x07\xED\xF1\x25\xAF\x61\x1C\x8C\xE6\xEE\xE7\x12\xD4\x7C\x51\x1F\x46\x0F\xF9\x83\x9C\xAF\xF1\xA5\x59\x6F\x6A\xFA\xE6\xE4\x16\x2C\x72\xFE\x20\x68\xD2\xE0\x9A\x82\x83\x62\x0A\xFB\x3F\x7E\xD8\x30\x00\x8F\x38\x4C\x42\x3C\x2E\x7B\xA1\x4E\xC8\xC2\x32\xE9\xDC\xE0\x84\xCA\x67\x8B\x5F\xE3\xA9\xA9\x3A\x72\x84\x23\x66\xBC\xBF\x4D\xCD\x6A\x0F\xF3\x96\xFF\xEB\x17\xBF\xC8\xE2\x9F\xC8\x3C\x31\x3D\xFB\xEC\xE8\x58\xD2\x3C\x1C\xF1\x91\xAE\x31\x31\x09\x01\xF2\xBB\xA6\xB6\x4F\x05\x02\x0A\xB4\x8A\x28\xE7\x12\x69\xE4\x23\x44\x3E\x1B\x4F\xD8\x26\x10\xBF\x01\xB1\xD3\x4E\x7A\x1F\xD2\xDC\xBA\x11\xE3\xE2\x10\xEA\x51\xC1\xC8\xE0\x65\xA4\xBF\x55\x2F\xFF\xA7\x4D\x51\x5D\x32\xAA\x94\x89\x2B\x53\xD0\x59\x6A\x0C\xFE\x53\x33\x39'
        return pkt

#'hdr.ipv4.dst_addr', 0xA20CFF35
# 'hdr.ipv4.protocol', 0x11
# 'hdr.ipv4.src_addr', 0x3DDA7479
# 'hdr.path_t.pathBF', 0x30AA1116
#  'meta.dstp', 0x2329
#  'meta.srcp', 0x74BD
# pathBF: 0x30AA1116
    def pkt2(self):
        pkt = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x3D\xDA\x74\x79\xA2\x0C\xFF\x35\x74\xBD\x23\x29\x00\x00\x00\x00\x30\xAA\x11\x16\x00\x00\x00\x00\x8D\xF0\xA8\xEA\x73\xCE\xE8\xF9\x88\x24\x30\xB8\x54\xE7\xE5\x65\x3D\xE7\xB2\xAB\xC8\xF2\x97\xAF\xE9\x30\x45\x27\xA6\xB9\x44\x5A\x30\x95\x56\x3B\x83\x5A\x02\x05\x0F\x1B\x16\x78\x4A\x01\x57\x98\x5D\x76\x27\xB6\xFF\xBA\x56\xE7\xB8\xD7\xE9\x19\xBB\x0B\x09\x36\xA2\xFC\xC9\x80\xC7\x9E\xF3\x52\x05\xB8\x8D\x9C\x92\x1C\x93\x5A\x0D\xA8\xB4\xA1\xCF\x67\x21\x91\xB6\xA5\xCB\xA9\x69\x34\x5F\xF4\xF9\x1D\xA0\x5B\x07\x67\x63\xEC\xDE\x27\xE4\x91\x1A\x82\xB4\x59\x4B\xFE\x27\x4E\x7C\xD7\x7A\x79\x3E\x47\xF7\xAE\x21\x7F\x64\x1A\xBC\x79\xAB\xC0\xF5\xB4\x79\x60\x2A\x5F\x83\x6F\xD6\xBD\x5E\x82\x2D\x84\xA2\x2C\xFB\xC7\xDB\x0E\x84\x64\xBF\x72\x73\x20\x6C\x90\x97\xB0\x02\x51\x71\x82\x0F\xBF\xE5\xF7\xF0\x2B\xFE\x07\x0C\x77\x85\x4B\xC0\x38\xA2\xCF\x32\x5E\x20\x13\x1A\x87\x80\xE5\x9A\x8C\x39\x73\x09\x8C\x2F\xB5\x82\xC1\xAF\xA4\xC2\x1E\x4C\x2E\xB1\xBA\xC3\xBA\x78\x1D\x4A\x12\x33\x65\xB1\x28\x83\xDE\x26\x70\x2A\x20\x6B\xBB\xE6\x6A\xBD\x22\x97\xF4\x82\x43\xE9\x9E\xA4\x36\xB4\x52\x3B\xF3\x52\xCB\x70\x96\x65\x38\xFE\xE0\x4A\x2D\x12\x15\xFC\xA5\xC1\x84\x37\xA9\xA0\x21\x78\x9F\x41\x1D\x96\x3A\xD9\x79\xE9\x5F\xDE\x99\x1E\x36\xA2\x49\x8E\x38\x30\xA7\x56\x7B\xC7\x7D\xB2\x21\xE7\x64\x72\xB0\xA5\x2F\xCF\x44\x59\x97\xE6\x58\x14\xC4\x52\xA8\xF0\xF8\x18\x85\x3B\xB8\x4A\x00\x2A\xD7\xD4\x15\xB3\x02\x62\x50\x3A\xAD\x27\xFE\xF7\xC0\x31\xF2\xD2\xD3\x4B\x73\x6F\xDC\x45\x0B\xAB\xFE\xF5\xF2\x21\x7C\x5F\x2D\x93\xDC\xB3\xD9\xFB\x13\x83\x7E\xE1\x19\xA5\x5A\x7D\x3E\x78\x39\x12\xEF\x12\x72\xD4\x09\xDB\xD0\xBE\x4A\x63\x2E\x29\x8B\xC8\x30\x41\x06\xC1\x05\x89\xAD\x99\x8C\x9A\xEE\x36\x6F\x1D\xEC\x9C\xD8\x5E\x25\x94\xB1\x5E\xEE\x8A\x54\x35\x53\x55\xC5\x73\x92\x61\x51\xAA\xC8\xB5\xEA\xB7\xB7\xE0\x91\x8E\xA1\x85\xF1\xAA\x0E\xAE\x80\x1E\x44\xF3\xBF\xF0\xA2\x2C\x24\xF6\xEB\x6E\x7A\xE0\xB4\x2B\x48\x97\xFA\x12\xB1\x6F\x8C\x39\xDF\x41\x6F\x98\x8B\x50\xB3\xE7\x69\xD9\x87\xF1\x3A\x09\x48\x11\x32\x04\x35\xAF\x0C\x72\xA2\x79\xCA\xE9\x47\xCF\xB0\x27\xAB\x9C\x71\x98\x6E\xC6\x7D\xEF\x0B\xA7\xA2\x02\xB0\x29\x2E\x9D\x88\xE1\x6E\x3A\xAE\xF4\x64\x64\xD8\xEA\xA3\x05\x62\x63\x8F\x27\xE9\xAB\x05\xD2\xF4\x35\x79\x0B\x7A\x22\x15\x8E\xF4\x83\xBD\x52\xDD\x25\xF7\xFC\xF3\xD1\x7D\x8B\xF5\x3A\x3B\x66\x85\xE3\x15\x44\x95\xF2\xBE\x5E\x6D\x91\x30\x03\x4E\x78\x70\x8D\x3C\x82\xB2\x59\xF7\x71\xAD\x8C\x5F\x9C\xC6\x81\x4E\x42\x5A\x71\x56\x18\x25\x1D\xF1\x29\x22\xED\x25\x48\x54\xF4\x50\x91\xFF\x13\xC5\x68\xE6\x70\xCE\xE6\xAA\xC9\x31\x3B\x54\xE1\x8E\x67\x01\x3C\xB8\x43\xB0\x20\x24\x0C\xDD\x8A\xB6\xE5\x39\xAF\x3A\x3E\x70\x9C\xBE\xE2\xF4\x75\x47\xF3\x32\x64\xE8\x37\x5C\x33\xA1\x62\x57\xDE\x59\x61\xFD\xDF\x20\xD5\x8E\x85\xD1\x72\x94\xC9\xE5\x22\x4C\x14\xB7\x81\x2A\xB8\xCC\xE3\xD2\x44\x88\x8F\x40\x85\xCE\xAF\xFD\xCE\xDF\xEE\x10\xEB\x98\x8C\xEB\x39\x3C\xA9\xC5\xE3\x1A\xAE\x5D\x59\xD3\xBA\xDF\x30\x60\xD1\x15\xD8\x92\xE9\x94\x5E\x3D\xCB\x89\x5F\xC4\x92\x95\xD5\xE2\x4C\x2E\x3E\x9E\x23\x13\x5E\x86\xE4\xFE\x2E\x7C\xE2\xD1\x04\x2C\x7D\xA2\x9F\xDB\x3E\x6B\x8A\x3D\xEA\xF1\x19\x2E\xEB\x37\x98\x73\xF4\xF3\xC8\xCB\xCE\x7F\x8A\xEF\x91\x7F\x64\xEF\xB0\xDD\xA9\xB3\x20\xE1\xE7\x72\x69\x92\x45\x6A\x97\x34\x89\x6C\x6E\x0B\x6E\x27\x05\xAD\x68\x57\x92\x5B\x4B\xE4\x13\xDA\x68\x7C\x93\x09\x78\xE7\xFF\x14\xEB\xD5\xDA\xD8\x61\x2C\x47\x14\xA2\x10\x8D\x35\x4A\x40\x33\x5D\x95\x69\x7A\xC0\xF5\x14\xD1\xCA\x5D\x62\x3C\x40\x89\x33\x4D\x40\xAB\x19\x26\x7A\x26\xC7\x9A\x63\x77\x76\x42\x51\x8C\x9F\xFE\x74\xBF\x6C\x52\x06\x4C\x22\x2F\x32\xB2\x10\x83\x6A\xA5\xCF\x01\xCC\x42\x26\x45\xDF\xA1\x88\xB4\xE9\xDF\x65\x53\x3E\x67\xB2\xD8\x42\xA9\x1F\x66\xA1\xE0\xE9\x87\x81\xA8\x46\x2F\x54\x19\x8D\x91\x48\xAE\xA5\x12\x31\xE9\xE3\x22\x6B\xDA\xC6\xDC\xEC\x6F\xBA\x90\x50\x48\x0E\x79\xF7\xCC\x07\x2E\x26\xFF\x84\xB2\x26\xA4\xEF\x8E\xE3\xEA\x93\xA5\xF0\xC7\x01\x23\x5D\xA0\x20\x74\x98\xEC\x24\x35\x64\x1F\x91\x71\xA2\x79\xAD\x29\xCE\x38\xAE\x5E\x46\xC0\x27\x91\x31\x73\xB9\x37\xD3\xF0\x97\x3A\xB0\xD1\x30\xE9\x6F\x9A\x27\x9E\xA2\xCC\xFA\x01\x57\x03\x4B\x61\x59\xBC\x93\x52\xD5\xC3\x08\xFF\x9B\x4A\x96\x7E\xD8\xE3\xB2\x70\xB2\xD7\x4B\x5F\x8F\xA4\x57\x65\x54\x4A\x7C\xD1\x5C\xDC\x1F\x45\xC3\x45\xC5\x17\x2B\xB2\x43\xBB\x67\xC4\x35\x9A\xE4\x30\xB8\xED\x28\xD4\xC1\xE2\x2D\xC7\xD1\x11\x9A\x27\x3E\xFE\xA3\xD6\xB7\x00\xA8\xF6\x6D\xBB\x2D\xB5\x03\x37\x0E\x08\x43\x32\x6C\x30\xFB\x40\xD1\xD8\xBC\x5A\xB1\x4D\xB8\x9C\x55\x52\x42\x70\x84\x99\xCE\x7C\x5C\xF6\xEC\xC3\xAD\x18\x9C\x56\x02\x69\xF6\xDB\xAA\x2E\x03\x7E\x7E\xBB\x74\x8C\x73\x64\x85\x8C\xCB\xA6\xC1\x38\x55\xE9\xF3\x9D\x3D\xE7\xB4\xCE\xB7\x36\xFE\xE5\x56\xA8\x13\x0B\xB2\x57\xEF\x78\x05\xD7\xF0\x34\xDB\x72\x6C\x5D\xC0\xB5\x42\xFA\x02\xF8\x32\xCF\xD3\xA8\xCC\xF6\x7F\xBE\x71\x43\xCE\x0C\x47\x68\x89\x88\x39\xC0\x48\x02\xB0\x23\xD0\x8E\xF2\x2E\xE8\x7C\x78\x27\xA7\x2B\xAD\x64\xAF\x47\xBB\x02\x59\x5B\x80\xED\x49\x98\x20\x17\xCB\xF5\x12\x19\xBC\xA7\xEC\xDE\xE7\xC9\x70\x04\xDD\xF2\x18\x41\xCF\x2F\x60\xEE\x2C\x27\xFB\x8E\x4F\xE0\xFA\x1D\x60\xC3\x58\x76\xE2\xC7\xCF\x2F\x4E\x52\x4B\xE9\x51\xEC\xD8\xF9\xE4\x11\x7E\x17\x62\x8C\xBE\xFD\xB4\x4D\xF2\x72\xC3\xAF\x9E\x96\x03\xF9\x10\x0C\xBD\x08\x4F\x26\x0A\x68\x75\x77\xD2\x01\x59\xDA\x49\xF7\xE2\xD4\xED\xAE\xCE\x46\x7F\xD0\x81\x24\x18\xE6\x6D\x53\xA3\xF5\x2F\x01\xE7\xAE\xC2\xD6\xB7\x3D\x41\xAC\x53\x5C\x1D\x15\x46\x5F\xCD\xE8\x25\x80\x61\x09\x15\x98\x42\x9A\x20\x75\x81\xD1\x3A\xC4\x0F\x05\x4B\x7E\xB2\x84\xB9\x6C\x17\x52\x73\x44\xA9\x6E\xDC\x86\x8B\x3D\x35\xCE\x20\x9B\x8F\xA1\x85\xF8\x7B\x49\xDA\x3C\x19\x07\xB3\xC4\x8F\x20\x28\x39\x89\xE4\x16\x8B\x86\x59\x46\x28\x7B\x8B\x81\x07\xA6\xC7\xA6\xCB\x15\x1D\xA8\xBF\xB8\xD0\x35\x7A\xB9\x8B\x4F\x95\x16\xF0\xD8\x38\x47\xD1\xC7\x51\x9C\x41\x4A\x86\xF7\xB9\xBD\xE9\x35\xD8\x57\xCE\xDB\x7C\x1C\x27\xBE\xCE\xA5\x67\x1B\x88\x25\x7F\x8A\xD3\x0F\xA8\x23\x38\x00\x6D\xB0\x48\x19\x0E\x8F\xB4\xC2\x61\x20\xE3\xDA\x75\x1B\x3B\x45\xF2\x69\xC6\x72\xED\x99\x9B\x32\x76\xEC\x1E\xDD\xB9\x66\x91\x7B\x18\xFA\xA7\x40\x59\x07\x18\x3E\xDC\xD6\x9F\x88\xEC\x8A\x37\xCE\x93\xA9\x4C\xCD\x85\x0E\x7C\xFF\x65\x1D\x33\x6C\x73\x2B\x06\xA4\x83\xFF\x1C\x1E\xF2\xEA\xC9\x83\x76\xDB\x94\x57\x9E\x46\xA0\x3F\xA1\x7F\x56\x2D\xED\xF4\xA6\xD2\x15\x7D\x21\xBA\x6B\x48\xC5\x61\xA3\xA4\xDE\x26\x7D\xF6\x1E\xF2\xCF\xE7\x53\xD2\x0B\xB0\xE4\x60\x55\x42\xB9\x7C\xD5\xE1\xB7\x94\x1B\xEA\x70\x52\x2A\x7B\xB0\xAE\x2D\x36\xD5\xB6\xF7\xE2\x7F\xDF\x3B\xA5\x9E\x09\x33\xB7\x14\x16\x5A\x1A\x69\x11\x6D\x25\x03\x4D\xEA\x47\x7D\x99\x67\x6B\xF8\x88\x57\xFB\x78\x46\x42\x28\x43\x08\x99\xC3\x08\x80\x61\x64\x93\xA8\x6C\xE9\x60\x63\x33\xBC\x7D\x45\xEC\x12\xDD\xD1\x4D\x8A\x06\xAA\xD1\xB1\x4E\x8D\x19\xCB\xC6\x74\x97\x04\xE5\x3C\x0F\x69\x32\x0A\x64\x5A\x18\xA1\xE7\xD4\x47\x6C\xCD\xA4\x59\xB0\xD6\xDF\x97\xF6\x6C\xBA\x02\x3D\x05\x1C\x34\x30\x16\x9D\x80\x54\xE5\x79\x42\x53\xA9\x7B\x1F\x17\x2F\xEC\xB6\x8D\x3F\x42\xA6\x54\x91\x20\x8C\xDC\xC3\x90\xFB\x23\xFC\xA7\x5E\xF2\xD0\xF0\xEE\xAA\x96\x4F\x32\x52\xB9\x9B\xA6\xF9\xE9\x68\x7E\x13\x25\x12\x41\xF8\x6C\x1D\x22\xEC\xF7\xA7\xED\x7A\x92\xA3\x4E\xCE\x70\xCD\xCA\xB7\x9B\xC8\xE3\x0C\x19\x74\x7E\x62\x02\xAA\xE0\xD5\x68\x47\x07\x61\xED\xB7\x02\x2B\x91\xD2\x55\x23\x0C\x8D\x56\x06\x03\x03\x14\xF4\x34\x91\xF3\x3D\x1F\x04\x43\x44\x41\x73\xB4\xE2\xD4\x4E\x20\x6B\xF4\x11\x6C\x01\xEA\x2B\xBE\x1E\xBC\x83\xBF\x22\x60\x0B\x93\xED\x63\xD0\x88\x0B\xFB\xA1\x31\x98\x3F\xB7\xE0\x33\x2E\x1D\xF1\x4E\x58\x35\xEB\x4E\xEC\xFF\xE9\x27\xB5\xBB\x07\xAD\xD1\x3E\xF5\xAA\xD5\x3B\xE7\x00\x9B\xB9\xEA\xCA\xEB\xFE\xA4\xAE\x07\x02\x4E\x64\x36\xEE\x1A\x85\x87\x03\xA0\x99\x18\xAC\x1E\xEE\xF4\x96\xFD\xB6\x3F\x80\x4D\xD1\xD4\x7A\x93\x92\xA7\x15\x22\xA8\xA4\xA4\x97\xBC\x41\x0D\x8E\xE1\x81\xD9\xD3\x9A\x82\x6E\x08\x98\xCB\x52\xE1\xE7\x09\x50\xDF\xD3\x5B\xB3\x51\x96\xE0\x56\x3C\x4A\x58\x7A\x8A\xBA\x88\x7C\x81\x9D\xBD\xAC\x0F\xE1\xFE\xFD\x44\x56\x30\x5A\x80\xBA\xA6\x72\x2B\x6C\xC1\xEE\xD6\x8B\x95\xD9\x25\x1F\x89\x78\xD2\x9B\x19\xB6\x3A\x33\x72\x0B\x66\x70\x16\xF1\xC9\x13\x35\x1B\x15\x0C\x6D\x0A\x10\x22\xFC\xE9\x07\xD6\xAF\x36\xEA\xEB\xE4\x37\x38\x66\xF7\xB8\xAF\xD5\xE0\xD8\xC0\xF0\x90\x0B\x96\x6D\xDA\x08\x42\x0F\x15\x88\x58\xA0\x2D\x38\x93\x88\x90\x29\x45\x3C\xAE\x2E\x4F\x62\xE8\x40\xD5\x9A\xBA\xEF\x94\x2D\xA7\x4E\xB6\x3E\x3E\xDC\xDE\x70\xC4\xEB\x22\xEC\xA9\x8B\xFF\xE1\xD8\xC5\xA7\x61\x06\x94\xDD\x89\xD8\x91\x36\xD9\x3A\xCB\x04\x1D\x23\x38\x9B\x11\x2E\xE9\x02\xF5\x72\x5B\x69\xC9\xBD\x09\x95\x24\x28\x7D\x2D\x93\xFB\x4A\x81\x39\xE7\x51\xDE\x4F\x6D\xE3\xC8\x03\x92\x7E\xA5\x30\x2A\xAC\xAC\x98\xD4\xD6\xE5\x91\x0A\xBE\xD1\x81\x89\xC4\x87\x58\xEE\x09\xF8\x0B\x10\xA3\xE4\x79\xEB\x57\x94\xBA\x55\x9E\x10\xC9\xC2\x4A\x59\x43\xD0\x29\x56\x6F\x06\xD1\x3A\xBE\x7B\xE3\x21\xCB\xB6\x66\xFE\x9C\xC6\xFE'
        return pkt

#'hdr.ipv4.dst_addr', 0x6D490C53),
# 'hdr.ipv4.protocol', 0x11),
# 'hdr.ipv4.src_addr', 0xDC33F450),
#  'hdr.path_t.pathBF', 0xC5C1E4EC),
#  'meta.dstp', 0x2329),
#   'meta.srcp', 0x038E),
#pathBF:0xC5C1E4EC

    def pkt3(self):
        pkt = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\xDC\x33\xF4\x50\x6D\x49\x0C\x53\x03\x8E\x23\x29\x00\x00\x00\x00\xC5\xC1\xE4\xEC\x00\x00\x00\x00\x9D\x97\x74\x98\xB9\x69\x78\x2C\x04\x98\x08\xCB\x2A\xC5\x7F\x50\xC3\xE1\x6E\xBE\xC7\x72\x34\x91\x21\xD5\x0A\x5A\x42\x21\xB4\xF8\x4C\x69\x35\xB8\xFD\x7F\xCA\x25\x56\xB1\x91\xBB\x0F\xDE\x72\x7E\xCF\x66\x7D\xBE\x0D\x79\x0A\x25\x6A\x5A\xF8\x69\x12\x7A\xBB\xD9\x0B\xCC\x31\xB0\x35\x3E\xDD\xC6\x6E\x48\x01\xF9\x78\xC0\xC8\xF4\xA7\xAE\xBF\x14\x62\x9D\x2A\xBB\x86\x92\x0E\x4E\x57\x6A\xD2\xDB\xD5\x96\xB6\xBA\x36\x58\xEE\x2C\xAC\xD5\xF4\xD2\x02\x36\x38\xC1\xE0\x56\xE2\x54\x64\xD8\xDC\x72\x70\x3E\xD5\x23\x95\xDA\xAC\x34\x3B\xDB\x37\x7D\xA4\xEF\x8F\xE5\xEE\x3E\x66\x03\x69\xD0\x60\x41\xD5\x3C\x9C\xAC\x0A\x45\xB9\x4E\x27\xDA\xD0\x59\xBE\xCD\xA1\xC7\x1A\x19\xE1\xD1\x06\x2C\xF5\xA7\xEE\x6C\xF3\x3E\xB1\xAD\x18\xB0\x13\x87\xBF\x0B\x82\xAA\x5E\x3F\x56\x2B\x32\xAB\x94\xA6\xD5\xBD\xFF\x44\xFC\x97\xAB\x2E\xD5\xCE\x81\x0F\xB5\xDC\xFB\x78\x2A\xF6\x1C\x57\x71\xB3\x17\x67\x0B\xB9\x18\x5E\x88\x7C\x86\x30\xE5\x93\x06\x8E\xEB\xD6\x7C\x81\x39\x65\x00\xEF\x3C\xD8\xA8\x19\x12\x46\x91\xA8\x49\x6D\xAD\xC1\x15\x4D\x48\x53\x5A\x83\xCC\x3D\xFF\x1C\x74\x8C\x28\x4D\x81\xF8\x91\xDB\xDD\xDF\x31\xA1\x56\x32\x3D\x33\x82\x32\x29\x94\x4D\xB4\x6D\xA1\x80\x73\x7F\xD8\xCC\xAE\xF3\xAF\x98\x3C\x9B\x88\x0B\xCA\x12\x1A\xBB\x17\xB2\x3E\xE1\x70\xFB\x68\x1B\xF2\x66\xC8\xA4\xE6\x3E\x07\xB2\x72\xDD\xCA\x1E\x90\x9C\x9D\xCA\x1E\xA7\x68\xEB\x2E\x20\x5B\x76\x7E\x1A\x34\x59\x43\xB4\x21\x9E\xFB\x66\x4B\xFD\x73\xFE\x67\x6D\x04\x4E\x0C\xDA\x5E\xDB\x58\x9A\xA9\x68\x84\x32\x0A\x07\x57\x4E\xB8\x61\x2F\x70\x59\xA7\x52\x6A\xE1\x44\x37\x94\x5E\xEC\xE4\x7E\x22\x9A\xBA\xF0\x11\xDB\xBB\x77\xF7\x16\xB1\xB9\xDC\xCE\xE6\x66\x0A\x40\x11\x16\xF0\x68\xA0\xEB\x3C\xFA\xC4\xCC\x57\x44\x4B\x11\x9F\xA9\x10\x49\x83\xE7\x6B\xCA\x50\x13\x7D\x35\x96\xC3\xEB\xAE\x7E\x9A\xAD\xD3\xD9\x4B\x0E\xE5\x0A\xEA\x35\x0F\x4A\x27\x18\xD4\xAE\x0F\x5A\xBA\x5C\xB1\xD4\x32\xF1\xD9\x20\xB6\x0E\x8A\x04\x5F\x10\x1D\x37\x34\x77\x02\xF8\xE9\x0B\x98\x6F\x93\x05\x74\x3C\xB7\xF1\x50\x01\xBE\x03\x85\xAF\x5A\x13\x5F\x6F\x0A\xB2\x30\x1D\x78\xD6\xD4\xA8\xF9\x92\x17\xAE\x4B\xDB\x79\x3B\x5C\x5D\x34\x88\xA6\xF3\x41\x2B\x77\x8B\xE1\x7F\xC2\x32\xE3\xE8\xA0\xD2\x04\x5E\xE7\x00\x75\xD3\x01\xBA\x44'
        return pkt



#hdr.ipv4.dst_addr', 0x637AB0B4),
# 'hdr.ipv4.protocol', 0x11),
#  'hdr.ipv4.src_addr', 0xA17C5ACD),
#'hdr.path_t.pathBF', 0x46666557),
#  'meta.dstp', 0x2329),
#  'meta.srcp', 0x1EB2),
# pathBF:0x46666557

    def pkt4(self):
        pkt = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\xA1\x7C\x5A\xCD\x63\x7A\xB0\xB4\x1E\xB2\x23\x29\x00\x00\x00\x00\x46\x66\x65\x57\x00\x00\x00\x00\x62\x84\xF0\xCB\x70\xF4\x85\x38\xE8\x75\xEC\x0F\x8B\x50\x27\xC2\xA9\xAD\x2A\x3C\x24\xE1\x64\xE8\x89\x40\x47\x7F\x91\xF2\x0A\xA8\x94\xAC\x83\xB5\x41\xBA\xA5\x02\xE0\x94\xCD\xF0\xE5\xBC\x92\x25\x74\x2A\x88\x88\x61\xF6\x4A\xA1\xB7\x28\xC9\x43\xCD\xFF\x3C\x27\xFD\x4F\xC2\x7C\x88\x5B\x50\x4E\xA6\xD5\x38\xEB\x1A\x7A\x5A\xD2\xA4\x58\x43\x56\x95\x8B\xD0\x3D\x2A\xBC\x92\x89\xCD\xFF\x20\x52\x38\x2C\xB4\x07\xC4\x33\xDA\x58\x7A\x6B\x37\x51\x95\x86\xDA\xAF\x0D\x85\x88\xFE\xD1\x5B\x60\x6E\x55\xA6\x66\xE0\x5D\x3E\xDC\x04\xA0\x75\x43\x58\x3B\xA4\xE5\x90\x4E\x77\x7C\x6E\xDB\xB5\x1F\x91\x13\xFB\x9D\xAF\xFB\x3F\x33\xCA\x9D\xB9\x74\xC7\x55\xEE\x89\x71\x70\x35\x79\x26\x6F\x6B\x57\x6E\xB6\x92\x80\x9E\xF0\x42\x63\x2D\xF3\x31\x7E\xBA\x02\x83\xD2\x81\xBB\x85\x2B\x94\x61\x92\xBF\x00\xF2\x2B\x9C\xDE\xB0\xB8\xB2\x15\x5B\x77\x4E\xE7\x2E\xFF\x68\x1D\xE6\x8F\x9F\xD7\x0B\xFB\x3F\x44\x69\x15\x69\xC3\xE1\xC8\x20\x9E\xA7\xFA\xBF\x5D\x85\x50\xC2\xA2\xD0\x24\x98\x33\x99\x2C\xAD\x61\x57\xAA\x0D\xB0\x68\x71\x30\xAF\x31\x40\xD8\x85\xB5\x2C\x44\x2A\x12\x40\xB7\x08\x6D\x28\x64\xD1\xAC\xDD\xED\x2E\xD4\x3B\x4B\xE4\xFD\x90\x98\xFB\xDE\xEC\x07\xAF\x5D\x00\xCC\xE9\x6A\xA9\x79\x1C\xED\xC8\x0D\x63\xCC\x39\x72\x6E\xA4\xF1\xA3\xCC\x21\xAD\x8D\xC5\xFF\xA7\xAB\x39\x84\x0B\xA1\x61\x04\x5D\x72\x4C\x0A\x71\x81\x62\xDF\xE2\x00\x72\x85\xC0\x7D\x14\xA8\x1C\x16\xD3\xFF\xF7\x6F\x38\xF9\x80\x26\x64\x8A\xE9\x87\xB5\x94\xA5\xE6\x0F\x90\x19\x14\xEB\x06\x0B\x06\x4D\x15\xDE\xAF\x2E\x23\xB6\x9C\x01\x0C\x23\x17\xE3\x1F\x70\x66\x4B\xAA\xBF\x54\xA8\x8E\xD6\xF5\x11\xE8\x41\x97\x77\xC1\xCD\x4B\xE9\x13\x41\x6A\xFC\xE7\x17\x0C\xAA\x69\x63\xCD\x1B\x1E\x73\xC0\x95\x33\xA2\x89\x93\xF2\xFC\x35\xD2\xA2\x8B\x61\x85\x6C\x5A\xBB\xC8\xB8\xB0\xDD\x76\xFC\x16\x20\x54\x1B\x71\x0C\xF1\x9C\x5E\xC6\x69\xA5\xE4\x8B\xC8\xC3\x1C\x80\x04\x22\xCD\x9F\x08\x52\xF8\x65\xDE\x8B\xC8\x96\x2E\x0D\x92\x39\x28\xF6\x47\x0A\xEF\x0A\x7B\x96\xF5\xBB\x99\x29\x86\xA0\x53\x10\x95\x31\x7F\xA4\x47\x74\xC8\xA9\x0F\x51\xA6\x0E\x42\x9D\x52\x91\xA6\xC7\x87\x98\x58\x37\x38\xFD\x0B\x3B\x98\xDD\xA6\xCF\x33\xB3\x2E\x1A\x71\x47\x37\x6C\x9B\x50\xD0\xE3\xFA\xA2\xD3\x0D\x4D\x7D\xB3\xF5\x42\x0E\x6A\x99\x25\xDC\xCF\x18\x9A\x99\x2C\xB2\xE3\xA8\xF0\xB3\xC6\xFE\x9F\x10\xD0\x55\xF2\x60\xD7\xE8\x8D\xC8\xEB\x17\x1B\x8F\x85\x29\x28\xE2\xC8\x42\x52\xBE\xBE\x91\xBD\xC0\x69\xA6\xE1\x60\xF1\x4E\x82\xE9\x0D\x2F\xBF\xDE\xD4\x38\x25\xD7\x77\xDE\x52\x8D\x77\x55\xA7\xDF\x3B\xB1\xD4\xAA\xCE\x64\x48\x62\xDE\x18\x99\x94\x1A\xC7\xBE\x49\x58\xDD\x24\x0B\x18\x49\x61\x17\x79\x93\xE2\xC1\x02\xD8\x9C\x3F\x46\xA0\x77\x70\xE7\x5F\xBB\x17\x37\x31\xC7\xC6\x6A\x1D\xA5\x8B\x68\xCA\x0C\x96\xB4\x10\x09\x9A\xD0\xFF\xF6\x93\x12\xFD\x1D\xCF\x83\x90\xCC\x2B\x3F\x92\x6E\x13\xA3\xFC\x1F\x0D\x9F\x20\x62\x8C\xF1\x74\xFB\x63\x32\x5E\xAD\xA7\xF4\x8B\xA0\x50\xA5\xD2\x19\x0D\xA4\xF0\x79\x86\x36\x0B\x1B\xE3\x59\x11\x4B\xC7\x76\x8C\x0A\x02\x75\x55\x1F\x58\x78\x85\xD1\x1C\xC6\x4B\xD8\xB0\x46\x8A\xA7\x0F\xF5\xAB\x87\x57\xEF\xD4\x43\xA9\x7F\x38\x24\x2C\xF0\x67\x4E\xEB\xFF\x00\xD3\xC5\x33\xD4\x65\xBF\x07\x13\x83\x04\x0C\xB1\xDD\x13\x03\xB0\x24\x92\x6F\xDF\x9A\x1E\x57\xC0\xDC\x81\x7C\x10\x67\x37\x01\xA3\xB7\x5C\xE7\x2C\xFF\x59\x58\x67\xC6\x0C\x90\xBC\xB8\xAD\x31\x53\xB2\x1F\x5A\x57\xEF\x6E\x31\x53\xD0\x09\xF4\xD3\x0A\x62\x6D\xAC\xB3\xC2\x5C\xE7\x9A\xF0\xE5\xAE\xBA\x01\xA1\x2A\x2E\x63\x87\xC3\xDF\x79\x19\x9C\xA6\x3B\xB4\x6F\xC9\xB1\xB7\x50\x37\xB9\x9C\x2B\x07\xCC\xC7\xC5\xA4\x52\x57\xB6\x1E\x28\x53\x89\x8F\xD1\xEC\x27\x02\x0B\x22\x2D\x1A\xB6\x6F\x60\x03\xB6\x10\xEA\xB3\x65\x16\xBF\x97\xB1\x06\xCA\xAA\xF3\x6E\xA1\x85\x98\x52\xB2\x61\xA8\x06\x54\x7C\x63\x9E\xC3\x4C\xC8\x1A\xEA\x36\x54\xE6\x7D\x34\x83\x9C\x82\xF7\xAD\x32\xB0\xA3\xFF\xEF\x3D\x1B\xBC\xFE\x51\x20\xD5\xEF\xE5\x12\xFA\x71\xFE\xAE\xD3\xBC\xA1\x6E\xF6\xE5\x38\x12\x41\x4B\xB8\xD6\xA0\xC4\x2F\xB2\x72\x3C\xD0\xA4\x07\x1D\x63\x31\x29\x7E\xB5\x34\xF0\xE8\x3D\x13\x0C\xC0\x89\xC2\xE6\xA2\x61\xCD\xE1\xED\xEA\x93\x48\x2F\xF0\xE0\xFF\x84\xEF\xFD\xD0\x78\xF3\xE8\x1B\xBE\x33\x15\x7C\x6C\xA6\xA9\x28\xE2\x22\x14\xCA\x5E\xFE\xC6\x63\x1E\xA2\x6F\x7C\xEA\xE1\x1F\xA2\x60\xB9\xC6\x0B\x84\x06\x62\xFC\xD9\x4B\x1D\x6A\x5D\x24\xCA\xE5\x46\x57\x9A\xD4\x3C\x2E\x1B\x33\x2E\x04\x67\xE2\x43\x04\xBA\x8F\x57\x89\x03\x42\xED\xF3\xD4\xFB\x90\x4B\x4B\x72\x80\x51\xBD\xCA\x1E\xAF\x14\xD4\x48\xBB\x15\xB9\x90\xB0\xEA\xDB\x46\x03\xAC\x19\x1B\xE3\x74\x5C\x14\x27\xC9\x9E\x79\x80\x7C\x65\x43\x54\x03\x5C\x57\x66\xBB\xE3\xBE\xC5\x75\x6B\xCA\x55\xFC\x4E\x21\xB5\x59\xC3\xE9\x6F\xE9\xC3\xFB\x54\x5F\x97\xDC\x9B\xCE\xD4\xAC\x1C\xD3\xBB\x22\xC6\xF3\x35\x55\x0E\x73\x24\x85\x86\x9D\x75\xC9\x5F\x5B\x76\xAE\xA2\x9E\x20\xE7\x92\xF5\x59\xC9\x40\x8B\x31\x5A\x4C\xF4\x17\x3D\x0B\x2F\x51\x61\x11\xEF\x8E\x72\x49\x29\x85\x4E\x76\xD7\xA5\xA9\x1F\xF7\x6B\x69\xD4\xCB\x13\x03\xA5\x33\x3D\xDA\xB0\x08\x7A\xED\xA4\xFD\xAC\x06\x61\xBD\xFD\x44\x84\xDE\x87\x74\x94\x07\xB3\xBB\x2F\x67\xA3\x5A\x43\x13\xE6\x01\x32\x8F\x6E\x21\x7A\xAA\x22\xB8\x4E\xEE\x63\xDE\xB6\x0A\x72\xBE\x36\xC7\x6E\x2A\x0B\x9D\xFC\xAD\x15\x10\x48\x91\xBB\x0F\xEE\xEC\x56\xBC\x6A\xF0\x3E\x9D\xB8\xD4\x67\xE8\x08\x40\x06\xF5\x47\x40\x85\x29\x8B\xFD\x2E\x04\x09\xD2\xB2\xFF\xCF\x14\xC2\x66\xD5\x1A\x0D\xBE\x4A\xA4\x9E\x18\xFC\x40\x3C\xA6\x09\x94\x77\xB8\x92\x7E\x2B\xD4\x47\x2A\x6C\xA1\xA6\x4F\xEE\x76\xCC\xDD\x30\xDE\xD2\xFB\xCA\x58\xFA\x4D\x33\x95\x1F\x5E\x0C\x25\xB6\x3B\xB0\x2F\x88\x16\x70\x14\xB7\xC2\xD7\x28\x24\x0D\x6B\xA6\xCC\x0E\xAF\xE8\xB9\x4B\x51\xED\xFE\x61\xD0\x00\xCD\xEC\x96\x38\x46\x9B\xDD\xE5\xE6\xEE\x1C\x9E\x56\xFA\x25\x0D\xE6\xF8\x4A\x65\x2E\xCD\xF4\x56\xC9\x90\x18\xC5\xFF\x8E\xDF\x6B\x94\xE1\xCA\x44\xE1\x65\xE1\x44\x48\xD3\xA4\x92\x9F\x64\x3E\x2C\x11\x46\x83\x0F\x24\x7D\x64\x8D\x23\xC5\x76\x6D\xC8\xB9\xE8\xC1\x6D\xB0\x04\x4E\x75\x6E\xDD\x31\xB4\xAA\xE4\x3C\xE3\x58\x63\x4E\x26\x0C\xD5\xDD\x8A\x62\x56\x2B\xBA\xCD\x9D\x88\xDA\xC9\x51\x34\xEF\x4F\x1B\xDA\x9D\xD3\x39\xD5\x51\x59\x49\xF6\xEB\x1D\xD0\x03\xF5\xF0\xC1\xD0\x49\x45\x0E\x5B\xC6\x29\xB6\x43\xC2\xE7\x32\x4E\x5C\xCF\xF7\x3E\xC7\x11\x98\x24\xA3\xD7\x37\x7A\x89\x41\xAB\xF0\x3C\x9F\x6D\x90\x3F\xDA\x58\x37\x23\x5C\x99\x02\xA1\x78\x41\x0E\x43\xD0\xE8\xCF\x81\x44\x62\x73\x24\x31\xFF\xA3\x82\x1C\xC6\x63\x5E\xFB\xAE\x74\x36\x5F\x69\x06\x02\xC4\x90\x3F\x66\xCA\x5F\xA8\x40\x08\x9C\x2D\xD3\x71\x89\xFF\x5B\xF7\x81\x42\x12\xCD\x22\x74\x08\xDC\x2C\xDB\x2D\xD1\x80\x80\x34\xA7\xB4\x9E\x16\x14\xEE\xB0\x37\xD3\xC6\x09\xA6\x85\x63\x07\x83\xA3\x43\x3E\x4A\x14\xEB\x97\x7E\x33\xC6\xF2\xC9\x44\xFE\xCC\xE1\x7C\x0C\x8E\x17\xA4\x7A\x6F\xC0\xE0\x79\xD6\x64\xD6\xD0\xF0\xD1\xC4\xD0\xEB\x5F\xC0\x32\x16\x2E\xB4\x8B\xD5\xD2\xF2\x8A\xB4\xA1\xB0\xC1\x74\x5A\xEB\xD7\x8F\xC6\x0E\xD5\x6D\x27\x72\xB5\x43\xA4\x85\xD2\x02\x79\x38\xFE\x9D\xC3\x73\x7A\x94\x42\xA5\xCF\x09\x15\xF2\x58\xF3\x71\xEE\x0D\x09\x61\x90\x31\x36\x57\x57\xC0\xC1\x6D\x2F\x7B\x61\xA4\x57\xA5\x78\xCA\xEA\x51\xC1\x75\x8E\xC5\x12\x1C\x24\x90\x49\xBD\x0C\x08\x26\x27\x39\xFB\xCB\xE7\xD1\x11\xD4\x31\x37\xB0\xCF\x96\x20\x6B\x9B\x2F\x9D\x09\xF7\x0B\x52\xA8\x9A\xC3\x0E\x79\x06\x1F\x2D\x7A\xF6\xAF\x4F\x92\x78\xC5\xE9\x36\x62\x31\xFF\xFF\x92\xFD\x82\x96\xD0\x3F\x38\xFD\x12\x8B\x07\x66\x57\xFD\x67\xB1\x02\xA5\x3E\xBA\x9F\xA2\xA8\xEA\x05\x9E\x46\xD7\xBA\x1C\xBC\xBC\x9F\x2A\x52\xA5\xA9\xCE\x74\xB5\x67\x30\xDB\x08\x5D\x9B\x04\x7F\x5E\x87\x2A\xC5\xED\x3C\xC1\x68\x27\xE1\xD2\x0E\xA6\x66\x20\xDA\x32\xDA\xAB\xF9\x20\xDB\x63\x6B\xC2\x4A\x44\x2F\x2A\x35\xB0\x89\x20\x7A\xBA\x2B\xDC\x72\x11\x4D\x2F\x7B\x1C\x84\xB3\xFA\x22\xE2\xDB\xC3\xA8\xE5\x9F\x02\xC2\xA4\x2F\x45\xE3\xCF\x01\xBB\xC7\xEF\x6B\x3F\xBF\x9C\xB8\xBE\xC5\xF6\x6E\x28\x10\xA0\x64\xBB\x2B\xEB\xCA\xAC\x90\x66\xC6\xD1\x71\xCC\x8E\xE2\xE5\x40\x4B\xD1\x20\x3C\x35\xE1\x05\xDC\x07\x4B\xBB\x5E\x87\x0C\x26\xB5\xA9\xD0\x74\xFD\x86\xF4\xF1\x21\x24\x50\x72\xCE\xC2\x7F\xA5\x7B\x9E\x8B\x56\xBE\x6B\xD0\xC2\x83\xE2\x3B\x0E\x41\xEB\xEF\xE3\x99\xA5\x8F\xF8\xFC\xFD\x75\xAA\x5D\x21\xBC\x5D\xA4\xAB\x71\xB5\xB8\x1A\x20\x99\x1F\x4A\x0E\x21\x7F\x67\x5D\xB7\xB3\xC2\x32\xC3\x90\xB9\xB3\x54\xD8\x28\x31\x8A\x7E\x6D\x76\x29\xBC\x36\xBE\xB3\xAA\xBB\xE5\xFF\xB0\x29\x1D\xA9\x29\xBC\xA5\x29\x31\xD8\x33\x42\x37\x41\x4D\x61\xB7\xDE\xE3\xD4\x63\x71\xCA\x98\x68\x85\x0A\x8C\x61\x5A\x61\xBB\x2C\xC4\xE6\xF0\x80\x57\x81\x54\x8D\x12\xC7\xA2\x5D\x24\xEE\x51\x5D\x27\x39\xB8\x0D\xE2\xAD\x49\xD2\x2B\x61\x31\xDF\x41\x4D\x5F\xB3\x21\x40\x70\x52\x6E\x08\x35\xED\xBF\xD3\x5E\x39\x73\xBD\xD0\xAF\x6B\xE7\xE9\x70\x35\xC7\x47\x2A\xDA\x39\xBB\x12\xDC\x56\x15\x1C\xCA\xD0\x5E\x20\xC5\xE4\xE3\xDB\xFB\x09\x6B\x80\x13\xD4\x95\x34\x4C\x54\x48\x83\x73\x9A\x9F\x18\x5D\x4E\x8B\x8A\xE5\x98\x3C\xA1\x15\xC2\xF0\xCB\xA1\x64\x06\x6F\x9E\xD2\x69\xA7\x95\x65\x49\xC1\x52\x4F\x24\xFB\xFF\x96\xD4\x92\x51\x56\x2D\xDF\xBF\x90\x0D\x85\x8F\x40\xC8\xA5\x3D\x4A\x10\x88\x26\x5B\xC9\x63\x57\x7A\xA0\xAD\xFA\x51\x2F\xDC\x7F\x48\x9D\xA3\xA2\x67\x73\xAE\x0D\x60\x64\xB7\xDD\x11\x27\x4A\xE4\xEE\x8D\xD4\x7F\x90\x6A\x2F\xE1\xB3\x8C\x72\x81\x8D\x3C\xE2\x06\x64\xFB\xE4\x0F\x68\xE9\x71\xA0\xFD\x2A\x08\x46\xB9\x78\x1E\xB6\x5C\xDA\x0F\x3F\x1F\x62\x60\x0D\x5B\xAF\xFF\x5A\x75\xA1\x4D\xC6\xE9\x25\xF1\x47\x10\x54\xCD\xD3\x64\xCD\xFF\x5F\x68\xB5\xA9\xC5\xE2\x33\xF7\x7D\x63\x97\x27\x07\x71\xF6\x2B\x8C\xC1\xCB\x40\xCD\xE4\x78\xFA\x68\x48\xDE\x16\xA8\xBB\x78\xC6\x2B\x18\x5C\x04\x11\x6D\x18\x8B\xD5\xC0\xDD\xF0\xD4\xCC\xC7\x7F\xBE\x60\xBC\x98\x73\x42\xE8\xAB\x5F\x71\x19\x7F\xBB\x59\x70\xDC\x4C\x80\x81\x24\x36\x7F\xBC\x33\x4B\x98\xCE\x8E\xFB\x13\xD5\xE1\xF8\xE8\x68\x7C\xC9\xD5\x04\x8F\x5B\x7F\x10\xAE\xB0\xE4\x0C\xF9\x44\x1C\x70\xB3\x23\x5C\xEC\xFA\xBA\xCD\x34\x6B\x64\x10\xE5\x48\x30\x7F\xDD\x82\x98\x5C\x52\x4F\x0E\xB2\x39\x5F\x91\x1F\x2F\x89\xE6\x30\x35\x41\x09\x2F\xAB\x01\xEF\xD5\xF0\x14\x4C\xF2\xCC\x67\x1C\xC2\xC3\xB8\x9F\xCB\x2F\x62\x70\x1B\x68\x77\xC5\x74\x2D\x26\xAD\x1D\xBC\xDD\x1B\xDC\x29\x3D\xEC\x8F\xAF\xE7\x7F\x75\x8B\x81\xA3\x14\x39\x8B\x88\xA1\x6B\x4A\x05\xDF\x59\x38\xC1\x99\x66\x9D\xA5\x3E\x7C\x8D\x64\x0D\x9A\x7B\x97\x4C\x5A\x6E\x22\xE9\xB2\xCC\x47\x21\x83\xDE\xF6\x77\xEC\x95\x34\x3C\x7D\xD3\x99\x95\x80\x13\x11\xA9\xBD\xE4\x77\x95\x9B\xAC\x40\x86\x9E\xF7\xC7\xEA\x66\x59\x31\xD9\x2F\x67\xB4\xF5\x39\xA7\xFA\xBC\x56\xEB\x0D\xB6\xFC\x35\x26\x9F\x11\xE7\x80\xE5\x12\x89\xD1\x5C\xC3\xAC\x13\xD0\x47\x6F\xED\x66\xF4\x1A\x06\xFE\x88\x9C\xBE\xB9\x68\x68\x1B\x1A\xD6\x89\x01\x77\xC4\x62\x27\x92\x73\x93\xD8\x3F\x00\xDF\xD8\xF7\xBD\x5C\x0F\xAD\x73\xD0\x93\xDE\x2D\xCA\xAC\x88\xDB\x4A\xA5\x2C\xBC\xB1\x18\x6A\xC2\x8F\x57\xAB\x61\x93\xC3\x35\x61\x13\x7D\xBB\xDF\xA4\x8E\x25\x6F\xAE\x9C\x09\xB7\x84\x3E\x72\x61\x67\xE1\xDB\x9B\x83\xE6\x77\x7D\x52\xB5\xEB\x4A\x07\x57\x00\x5C\x18\x0C\xDD\x64\x54\x2C\x9E\xC5\xB7\x50\xE7\x98\x63\xEC\x7E\x81\x0E\x87\x5C\x39\xCC\x02\x6E\x5C\x43\x9C\x9D\x0A\x15\xF7\xB3\x4E\x02\xEF\x4B\x14\x86\x32\xCE\x0E\x6D\x8F\x16\x4F\x0B\x8E\x24\xD4\xA3\xA4\x3F\x6A\x4D\xF6\x6C\x13\x96\x48\x2C\xCC\x81\x6E\xED\x1B\x18\x80\x81\x61\x4C\x76\x2D\xA5\xB1\x39\x2C\x2A\x5C\x22\xDE\xDC\xB3\x33\x7A\xAB\x50\xD6\x24\x51\x78\xD3\xDD\x25\xC1\xC8\xD1\xA6\x28\xA1\x03\x32\x52\x2F\x36\xD1\xA0\x79\x7A\x3F\x27\x6D\x18\x98\xE0\x9A\xBD\x08\xA3\xDC\xE7\xA3\xBB\xC6\xB8\xE3\x24\x1E\x3C\x2E\x62\x97\xC4\xC2\x45\xF4\x01\x07\x12\xBF\x52\xEF\x4C\x43\x76\xB3\xB7\x38\x9C\x74\x9A\xA3\x99\x76\x08\xA3\x86\x98\x75\xC0\x18\xCC\x6D\x6C\x8D\x6C\x42\x2B\xA9\xF5\xA9\x44\x21\x7C\x7B\x42\x9A\xF1\xC2\xF3\x11\x5D\x53\xCF\x49\xA3\x5B\x15\x21\x16\xB1\xFA\x92\xE7\xE0\x37\x88\x56\xDC\x9F\x6A\xF7\x8E\xE4\x01\xA0\x00\xF1\x6A\x5A\xA3\x2C\xD1\xAB\x44\xA1\x77\x86\x16\xDF\x7C\x66\xF1\x1B\xB3\x19\xD8\x8B\xAD\x56\x58\x03\x84\x0C\xF8\x6F\xF7\x68\xC3\xD1\x27\x1C\x62\xAB\x9A\x31\xB6\xE2\x69\x46\x17\xBB\x1B\xFD\x23\xE0\x30\x5E\xF0\x39\x15\x92\x0E\x32\x32\xE0\xBF\xC3\xAF\xBB\x2F\xE9\xE1\x83\xBE\x0E\x6F\x78\x8B\x7F\x2D\x99\xB6\x52\x9F\x50\x49\xF5\x07\xCE\x2C\x0E\x25\xFE\x96\x19\xDF\xF2\x0E\xEB\x61\xCC\xD3\xAF\x87\xE5\x8A\x1F\xF7\xB3\x23\xA0\x25\xD7\x59\x3A\x31\xAC\xD5\x3B\xA8\x77\xA9\x86\x50\x87\xF8\x61\xCE\x28\x80\xC5\x7D\xA0\xE9\x92\x52\x18\x31\x67\x8D\x19\x73\xA8\xAC\x1E\x84\xA5\x08\x46\x08\x84\xFA\x7C\xA8\x8D\xBF\xC5\xE5\x85\x38\xAC\xFA\x33\xD9\x72\x9E\xB0\xC2\xD7\x29\x55\x75\x19\x23\x2E\x42\xAE\xD9\x27\x11\xF5\xB9\x52\x7F\x9A\xDA\x21\x54\x9D\xB9\xF9\x3A\x2C\x4E\xF5\x11\xE0\xF7\x8A\x24\xC5\xEA\x8A\x6F\x48\x3B\xC8\xC3\xE8\x4E\x40\xE2\x5A\x6C\xE0\x3F\x2C\x12\x7A\xBC\x0D\x62\x42\x99\xA6\x4E\xE5\x7A\x73\xE8\xD9\xC0\x90\x52\x94\xF4\x2E\xE7\xDC\x2A\x67\x67\xF8\xA3\x6B\x68\x2F\x97\x94\xA6\x94\x3A\x1F\x2C\x06\x0B\x7F\x10\x75\x2B\xA2\x80\x30\x5C\x35\x7C\xDC\xB8\xDF\xC0\xC5\x8B\x10\x24\x9F\xFE\xE1\x1B\x54\x4A\x61\x4C\x88\xDA\xE5\x72\x18\xE2\x8B\x1E\xD9\xA5\xD7\xAA\x97\x0A\x7D\x3F\x3D\x69\x62\xBE\x28\xF8\xE9\xC2\xE8\x72\x96\x99\x87\x7E\x19\x22\x87\xF2\x9B\x54\x0F\x19\x59\xA0\x4E\x37\xB1\x5F\x2E\x15\x6F\xD0\xD5\x67\xC2\x86\xD2\x05\xBD\x89\x29\xEC\x7F\x23\xCF\xBF\x3F\xC1\x29\xE1\xAB\x4C\x3C\x5A\x5F\x6C\xAD\xCA\x8A\x5B\x9E\x9A\x61\xDD\x6A\x16\x95\x8F\x06\x9B\x07\x9E\xCD\xE2\xBD\x33\x73\x06\x6C\xB8\x7A\x4F\x0A\x67\x7F\x88\x6F\xC1\x5E\x39\xA9\xFA\xA9\xDB\x3A\x3C\x06\x60\x20\x51\x71\xE1\x96\xAB\xBC\x1A\xD6\x9A\x48\x97\xE0\x3B\xE6\xD3\x2F\x9C\xF9\xEA\xA4\x4D\x22\x68\x73\x4B\x20\x9D\x22\x80\x73\x92\x2B\x96\x51\xD5\xBB\xF2\xAB\x29\x71\x17\x9D\x71\xBF\xF4\xA0\x2B\x55\x5B\xE2\x66\x73\xB6\xCD\xB0\xDC\x81\xEC\x82\xA7\x8C\x37\x1C\xFF\x73\x5E\x63\xB8\xFE\x31\x82\xE0\x56\x4E\x52\xDE\x77\xB3\xA6\xAA\xB9\x06\x22\xA0\x8D\xC7\xF1\xC0\x99\x5D\xCB\xBD\x56\x1F\xFB\xFD\xEE\x9D\xE1\x94\x1E\x28\xAC\x7C\xC6\x49\x6D\x81\x03\xB9\x3B\x4D\x56\xB7\x6E\xF2\x10\xB2\x29\x44\xB3\x23\xC7\x3E\x54\x35\x94\x0C\x77\xF3\xDB\x0A\x69\x38\x51\x4E\x28\xEF\x88\x8C\xF2\x77\xEA\xE7\xE3\x7D\xAC\x5F\x37\x2A\x26\xEE\x5F\xFB\x92\xFC\x8D\x00\xC4\x20\xB8\x37\x06\x34\x8E\x5A\xBB\x0B\x13\xF4\xB8\x8D\xAD\x90\xD4\x84\x13\x64\x0F\xAB\x5C\x29\x65\x99\xEC\x28\x04\x01\xA7\xE8\x07\x6B\x45\x51\xB1\x9B\x86\xCA\x14\x21\xED\x39\x42\x84\xCE\xEC\x46\x42\x94\x20\xE1\xF0\x25\x81\xC5\xDC\xD3\x6F\x97\xBA\x1F\xCC\x8C\x04\x65\x22\xBE\x5A\x4B\xBE\x20\x4B\xBE\x88\x4B\x6D\x21\x1F\x94\xB8\x14\xE1\xAC\x41\x1B\x87\x08\xDE\x65\x06\xE8\xB2\x8F\xD1\xCE\xC9\x75\x02\xB7\x9F\x5F\x5E\x1D\x72\xDD\xBA\x3F\x5F\xE5\x4D\x67\xA0\x58\x69\x9E\x61\x3F\x3D\x98\xB5\xE0\x38\x02\x88\xAE\xFF\x03\xD1\x75\x03\x50\xF0\xFA\x71\xEB\x5C\x95\x56\xBE\x21\x78\x54\x3E\x07\xD9\x42\x07\x2F\x07\x59\x9D\x42\x44\xB9\xAF\x8D\xD6\x48\x7F\x97\x97\x9B\x09\x24\x91\x98\xBA\x79\xDE\x92\x44\x4B\xF9\xB8\xC7\x76\x76\xAB\x98\xBE\xC9\x6A\x34\x5D\x91\x6F\xC4\x76\x85\x8D\xE7\x33\x08\x4C\xA3\x63\xFA\x9E\xCA\xCA\x0C\xDC\x65\x60\x63\x4E\xC1\x89\x05\x5F\xE1\x63\x38\xE8\xF1\x37\x8A\xCD\x48\x4C\x61\xF2\x7A\x27\x62\x18\x05\xFC\x0D\x43\x60\xEB\x5C\x49\xDA\xF4\xE6\xBE\x4F\x48\x97\x93\x3A\x8A\xCF\xEB\xE2\x69\x5F\x95\x11\xAC\xE8\x56\xEF\x9B\x16\xCC\x20\xEF\xFB\x0F\xB3\x73\x41\x82\x57\x24\x33\x0C\x30\x80\x3E\xB0\xD4\xAD\x12\xEA\xC7\x66\x2C\xA6\x83\xB0\x83\x46\x96\x2A\x0D\xAD\x20\x0D\xB0\x65\xDD\x58\xE7\xBC\x28\x75\xD3\x5A\x7E\x89\xF5\x1E\x93\xA7\xF5\xD0\x1C\x6A\x40\x30\x83\x44\x81\xB3\x63\xE3\xE0\x7B\xF4\x65\xDE\xC1\x50\x57\xFC\x77\x57\x73\xE2\x97\xA0\xBB\x95\x29\x35\x47\x19\x65\x13\x83\x29\xE0\xBF\x6F\x85\xB9\x34\x21\xDC\x55\xB0\xC2\xF4\x2D\xC7\x97\xEF\xF5\x02\x65\x9A\x69\x57\xE9\xA8\x06\x17\x51\x02\x97\xB4\xA2\xD2\x1A\x4F\x4B\x5F\x3B\x64\x08\x2C\xC9\xB3\xF7\xFE\xB1\xB8\x4E\x60\x4B\x0B\xCD\xD8\xCE\xC7\x80\x0F\x54\x7D\x52\x6E\x0B\x5C\xAF\xCE\x70\x40\x70\xDA\xF6\x8D\xD0\xDF\x8B\x9A\x45\x80\x65\xB5\x84\x17\xD2\xA0\x13\xBC\xA6\x0C\x81\xE5\x94\x3F\xF8\xA6\x67\xC2\xF7\xBC\xF4\x29\x6D\x9E\x79\xC2\xF1\xE8\x82\x41\x39\x2D\x27\x94\x17\xAC\x7A\x40\x3D\xC1\x42\xD1\x3E\xDD\x6A\x9B\x91\xB3\xE5\x53\xA0\x3A\x54\x8D\xF5\xB7\xEE\xC3\x33\x89\x78\x87\x57\x3B\xE1\x7A\xC5\x41\x1A\x6F\x72\x5F\x30\x21\x40\x80\x72\x26\x54\x20\xA4\xE0\x38\xE4\x39\x5E\x47\x9D\x19\x9F\xCF\xD0\xE3\xE4\x69\x31\xFC\x01\x6C\x99\x0A\x38\x5B\x44\x3D\x2A\xB3\x0B\x2F\x8B\xF4\x96\x7B\x29\x93\xCE\x40\xF7\xF6\xB7\xC5\x2E\x63\x50\x65\x89\xB4\x01\x52\xD4\x50\x32\xD1\x92\x75\xA8\x39\x11\x72\x6B\xF9\xBA\x90\xA7\x69\x06\xB8\x4C\x4D\x90\x3B\x58\xD8\x89\x8A\x87\x8F\x5F\xC4\x98\x21\xB8\xAA\xB9\x91\x01\x49\x12\x71\xCC\x4B\x44\xD7\x0E\x4D\x62\x4D\x2E\x30\xA1\x28\x38\xA3\xBD\xE5\xD5\x3A\x8E\x1E\x0E\xA5\x69\x04\xF7\x6C\x79\xA3\x38\x3C\xE3\x99\x21\x60\xBF\x5D\x38\x2C\xE6\x83\xF7\x02\x72\x53\x76\x1F\xD5\x10\xA8\x0E\xE7\x9B\x57\x71\xBE\xA0\xA4\x54\xAC\x4D\x38\x78\xE9\xB6\xCD\x29\x0A\xAA\x9C\x46\x1E\x80\xE0\x23\x89\x7C\x8C\x2B\x68\x22\x63\x64\x08\x8A\xF8\x43\x57\x1D\xD6\x10\xD2\xEA\x4D\x4B\x15\x8E\x3A\x07\x63\xA3\x7A\x19\xF9\xD9\xCB\xB4\x85\x6D\xDA\x49\xE3\x60\x22\x02\x46\xE8\xEC\x91\xD3\xD8\x90\x50\x6B\x57\xAE\x52\x8B\x94\x0C\x3E\xC7\x29\x16\x57\x41\x8E\x52\xF6\xE3\x07\x00\xB0\x8A\x0F\x3D\x8A\x23\x75\x3E\x35\xAE\xEF\x84\xEF\x03\xD5\xAF\x98\xDC\xCE\xCB\xE6\xEB\xCA\xE4\x98\x4D\xAF\xFC\x03\xA9\xA0\x13\xAD\x97\xA5\x09\x13\x3B\x6B\xE7\xF3\x31\x8D\xDC\x23\x60\x89\x3D\xFA\x06\x45\xAC\x59\x8C\xCC\x64\x80\xB8\x74\x54\xE7\x03\x60\x4E\x1B\xE4\x5F\x5A\xB3\xBB\x24\x69\xF5\x82\xDD\xBB\x31\x60\x8D\x96\x53\xED\x8B\x41\x28\xF1\xFE\x07\x8D\x5E\x31\xB2\xBE\x85\x72\x11\x8E\x7F\xB1\x01\x8C\x5F\xD8\xD3\x98\x41\xA8\xDD\xB4\xF6\xCB\xC0\x50\x77\x8C\xBE\x67\x21\x90\x7B\x2A\xF6\x91\xF6\xA1\x82\x00\x05\x37\x51\xF7\xA1\xE8\x61\x8C\xD4\x83\x9D\x55\x24\x62\xE3\xC8\x5C\xD3\x0C\xA9\xC9\x61\x53\x9D\x5E\x30\x08\xAA\x82\x82\x20\xA7\x8A\x5E\xBC\x39\xEB\xE2\x77\x31\x4B\x23\x39\x78\x07\x0B\xF6\xB4\x1D\xB2\x8A\x1A\x96\xA2\xDE\x42\x80\x77\x88\x48\xEF\xA6\xA9\xC8\x98\x7D\x33\x6D\x4C\x94\x49\xB0\xAD\xAC\x7B\x83\xB7\x14\x0B\x5B\x42\x51\x31\xFC\x57\x6D\xF6\x16\x92\xFA\xE5\xF8\x75\xA0\xFF\xEA\xFA\x5C\xF0\x5C\x47\x2E\x90\xDB\x0E\x1D\xEA\x61\xB6\xA5\x05\xAE\x36\xA3\x4C\x31\x45\xD6\x91\x44\xB4\xB4\xF3\x92\xD7\x47\x79\x19\x3E\x30\x3A\x5D\x78\x33\x74\x06\xCC\xA8\xEB\x52\xA5\x19\x69\xDA\xA7\xD1\x48\x72\x1D\x09\x93\x47\x9F\xF1\xC6\xD3\x6C\x1F\xD7\x88\xE1\xB4\x4D\x25\x1F\x7D\x88\x1E\x0A\x52\xD4\xE8\xDC\x87\x58\x4E\x23\xF0\x67\x74\x8C\x3D\x70\xFE\x70\x94\xCD\xB9\xFB\xF5\x4F\x14\xCC\x19\x6D\x1F\x98\x0C\xD9\x3A\xBC\x28\x0C\xD5\xE7\x73\x66\xF6\xFF\x5C\x1F\x44\xFE\xDE\xF3\xDA\xEB\xB2\x24\x28\x0C\x12\xCD\x1C\xE6\x35\x9C\xBF\xEF\x63\xFC\x2F\xB8\x9D\x25\x4B\x4D\xA2\x03\x46\x79\x56\x8B\xC6\x57\x86\x28\xA7\x54\x53\xBB\x11\x71\x23\xB5\xDF\x7A\xB3\x2A\xE3\x0D\x96\xE9\xFB\xC1\x88\x42\x87\x8B\xB7\xF4\x73\xE1\xE3\x05\x10\xA4\xEB\xDD\x49\x32\xA4\xBD\x73\xE9\xD1\x01\x00\x7A\xFB\x71\xF4\xF2\x20\xA4\x5B\x19\x66\x63\x4D\x99\xBC\xF7\xDA\x1C\xAC\x76\xD2\x10\x44\xCA\xA7\x2D\xB1\x75\x28\x34\x63\xEB\xD9\xED\xD3\xA4\x37\x81\x30\x91\x00\xFD\x07\x86\x65\x16\x14\xD7\x00\xEB\x2E\x59\x83\x8B\x1F\xDE\xE9\xBE\xE4\x58\xD9\x6D\x47\x71\xA7\x11\x23\x5C\xC8\xE7\xD3\xEA\x19\x4B\x07\xDA\xC3\xE6\xB2\x0B\xF2\x08\x02\xBF\x48\x07\x31\x82\xDE\x17\x84\x36\x49\x2D\x3E\x5F\x68\x58\x6A\x72\x9C\x9A\xEB\x0A\x78\x16\xBC\x63\xD7\x18\xFC\x23\xB3\x6E\xF8\x94\x57\x61\xE3\x2C\x5E\x24\x72\xE4\x5F\x81\xCE\x81\x9C\x8D\x9D\x3D\x86\x7A\x43\x5B\x31\x12\x1C\xC2\xDB\x04\x5B\x5F\xC6\x63\xE8\x3A\x22\xEF\xE9\xB8\x44\xE7\xC5\x55\x87\xBC\x5A\x2A\x24\xD7\x2F\x08\x5D\x7B\xB8\x37\xD3\xD3\x14\x31\x58\x12\x7E\x5A\xE1\x8F\x61\x4F\xCD\x4C\x91\x72\xD1\x93\x07\x39\xDC\xEB\xFB\xC0\xD6\x1B\x52\xB7\xF7\x1F\x48\xE4\x1D\x5D\xCF\x9E\xCB\xC9\x3E\x77\xFD\xF4\x7D\xA6\xB9\xF9\x3C\xEC\xF1\x5E\x86\xDE\xAD\xC3\xCB\x92\xC9\x15\x58\xD3\x7B\x3A\xD8\xE1\x16\x4B\xF3\x11\xDE\x11\xB6\x62\x70\xA3\xED\x6C\x7F\xAD\xD1\x38\xB9\xFD\xA6\x75\x25\x31\xDD\xDB\x36\x5F\x9B\x12\x57\x34\x02\x14\x12\x35\xCE\xD9\x75\x33\xF1\x0A\x0B\x29\x55\x1C\xD5\x36\x43\x83\x5B\x38\x2B\x0D\x74\xA7\xB3\xBA\xCF\x29\xEA\x49\xD3\xE5\xEF\x23\x71\xD5\x8A\x38\xC2\x10\x6D\x36\xF4\x10\x2D\xA8\xB6\x4F\x6F\x09\xCC\xEF\x41\x95\x6C\x2E\x61\xAB\x37\xA5\xBC\x2D\xE0\x3B\x41\x51\xFB\x5D\xB2\x91\x1A\x88\x2D\x33\xC6\xDE\xA3\x56\x9C\x12\xE1\xEC\x42\x27\xA7\x38\xCF\xC6\x8D\xD9\x4F\x48\xCD\x5C\xC5\x4F\xA4\xCF\x72\x5D\x4D\x39\x1A\x3A\xB3\xEF\x15\xDD\x3D\xFA\x6C\x2E\x67\xFB\xBE\xFB\x18\x55\x83\x47\x64\xFE\x55\x7C\x18\x0A\xEB\x8E\xC1\x23\x09\x18\x23\x18\x32\x86\xE6\x6F\x68\x95\x8D\x3F\xAE\x56\xD9\xB8\x7C\x5F\x60\xA1\xC4\x9E\xD2\xB4\x3F\x04\xDE\xBA\x7F\x5B\x41\xA8\xC1\x9D\x37\xA3\x63\xA3\x7C\x78\x3D\xAB\xED\xD6\x1E\x4F\xF1\x6A\x19\xC1\x45\x18\xF6\x4F\x74\xB0\x7B\x67\x21\xC6\x79\xEE\xBF\x07\x13\xBE\x2C\x1F\x0B\x20\x79\x76\xE3\x54\x80\x3D\xD1\x3E\x90\x27\xB7\x69\x49\x29\x78\x92\xBA\x18\x3A\xFF\x76\x7D\x71\xF1\x1E\x50\xF9\x4D\x39\x09\x5F\xED\x41\x65\x0D\xE8\x14\x11\x7B\x11\x2F\x8F\x82\x06\x57\x23\xA7\x32\xAE\xCD\x9C\x60\x59\xBB\xA3\x47\x9F\xCA\x2E\x76\x8D\xA5\xC1\x28\xF1\x2B\xD0\xD1\x84\xD1\xC3\x30\xF9\x29\x70\x59\xF0\x1B\x45\x36\xFA\x93\x4A\x68\x1B\x7A\x78\xDD\xF1\xAB\xB2\x60\x72\x54\xD0\x10\x70\x88\xDD\xAB\x3B\x9E\x63\x2E\xCF\xD6\xED\x29\x69\x10\x95\xA3\xF8\x15\xAC\x24\xC4\x24\xE5\x17\x06\x76\x10\x7B\x26\xF8\x85\x9D\x9A\xDE\x0E\x3C\x0B\x2B\xB0\xA1\xE8\xA1\xBD\x6F\x73\x1E\x59\x16\xDD\xC8\x3B\xFA\xF3\x41\xA6\x7B\xF2\x63\x15\x13\x24\x8C\xAC\x10\x50\x60\x84\xAE\xB7\x4F\xFB\xF1\x49\x46\xEF\x11\x03\x71\x88\x81\xC5\x2E\x77\x5B\xA7\x5F\x55\x6B\xBD\x84\x11\x99\xD0\x85\x17\xEF\xCC\xCC\x06\x31\x6E\xC8\x29\x8B\xDF\x90\x08\x04\xBF\x6C\x2D\xA4\x54\x68\x25\x2C\x8A\x6D\x56\x95\xD2\x2B\xFC\x2A\x12\xC6\x43\xF1\x0D\x8F\xBE\xEE\xC8\x8F\x87\x1C\x49\x9A\xD2\x31\xCF\xA7\x03\x63\x26\x41\x88\x9D\xA5\xD0\xA4\x22\x14\xE3\xCD\x52\xC6\x7B\x1D\x82\xAC\xC6\x68\x62\xE7\x0D\x66\x2C\x48\x25\xF5\xA2\x22\x8F\x0B\xE8\x87\x05\x39\x61\x0E\xA2\x47\xC2\x12\xDA\x4A\x32\xB3\x43\xF1\x98\xAB\x95\x62\xD4\x27\xD1\xE6\x52\x8A\xB4\x8E\x92\x1D\x83\x75\x25\x51\x5C\x61\xEC\x15\xE3\x5C\x9B\xD9\xD9\xE5\xC0\xD6\x33\xDD\x99\xF0\x3C\x51\x2E\x9F\x31\x75\xE5\xF1\x6F\x59\x9A\x4A\xBE\x00\x97\x67\xFA\x18\x24\xE4\x85\xEF\x34\xD2\x54\x66\x9D\x1B\xFD\x83\x72\x42\x16\x68\x9E\xFB\x65\xA8\x73\xED\x7E\x99\x2D\x58\xC1\x68\x79\x5D\x9D\x66\x26\x43\x08\x46\xC2\x98\x76\x09\x2F\x38\x25\x3C\xFD\x59\xE9\xC2\xFE\x11\x49\x09\x87\xC1\x24\x4F\xD9\x59\x85\x2C\x3E\x02\x5F\x36\xA6\x67\x8B\x6F\xF2\x95\x59\x75\xA7\x6E\xE9\x6A\xFD\x72\x2F\xFF\x10\xB6\x47\xAD\xD7\xCE\x38\xBB\xB4\x62\xFB\x83\x55\xD2\xBC\xCA\xA3\x8E\x83\x11\x69\x66\x64\x6D\xA6\x49\xE3\xDD\x9C\xB6\xDA\x87\x47\xAD\x44\x56\xD4\x64\xCA\x47\x5B\xA1\x59\x85\x8C\x71\xF9\x38\xD1\x34\xF3\xCE\x2B\x10\xC1\x48\xCD\x1C\xC8\xAB\x39\xA1\x2E\xC7\xC5\x6E\x69\xFE\x4B\xE4\x66\x0A\x5D\xDC\xF6\xB5\x85\x7D\x25\x4E\x1A\xF9\x77\x3D\xC4\x6E\x09\xE7\x5C\xFE\xEA\x84\xC2\xA6\xE8\x25\x85\x6E\xEA\x8B\xB6\xB0\x63\x82\xB4\x13\xAA\xC0\x70\x64\x76\x69\x20\x4D\xB7\x22\xC0\x96\x3A\x95\x6E\x7F\xBB\xE7\x29\x06\xAC\x77\x04\x78\x0A\x3E\xB5\x1A\x00\xFB\x25\x76\xC9\x63\x99\xC2\x16\xFA\x5B\x60\x33\x7E\x1A\xC3\x6B\xF7\x38\xA6\x02\x5E\x2D\xFC\xEA\xEA\xEF\x1C\x76\x7B\x50\xE4\x17\xFD\x7A\xD6\xE6\x8E\x68\x19\x4F\xF3\xA8\x05\xEB\xBC\x3F\xB2\xDF\x79\x4E\x25\xFF\xBD\x29\xC3\xF4\x8B\x33\x3B\x05\xE2\x04\xF6\x9F\x93\x4C\x89\x21\x0F\x7E\x8A\xD7\x31\x7F\x53\x68\x29\x9A\xD6\x6E\x81\x62\xA1\x96\x42\x42\x75\xE5\x4B\xB8\xDD\xC6\x7C\xE9\x72\x76\x88\xF6\x37\xDA\xF5\x47\xDA\x8C\x0C\x75\x8E\xF4\x34\xE2\xD7\xBB\x86\xD4\x7A\x19\x72\x88\x40\x0B\xCD\x47\x06\x89\x41\x6C\xD6\x9E\x17\x97\x03\x32\xBC\x7C\xEF\x71\x73\x7E\x4D\x7B\x0A\xC8\x6A\x96\x3B\xF3\xA8\x8E\x3A\x12\x45\xEF\xCD\x0B\xAB\xF4\x9E\x7A\xC7\x5A\xC7\x19\x8E\x42\x7B\x26\x05\xFE\xAB\xF7\x32\x51\x57\xFE\xF9\xEB\x0B\x35\x64\x37\x33\xC8\xEB\x4B\x6B\x49\x7D\x38\x7E\xCF\x4D\x7C\x91\x29\x00\x0D\x00\x16\x95\x58\x6F\x52\x44\xB3\xAE\xF4\x25\xC9\x25\x9D\x0B\x13\xD4\xBB\x30\x32\x69\x64\x74\x2B\x53\xE4\x18\xC5\xE6\x35\x4D\x32\x0C\x24\x37\xAA\x07\xCB\x85\xD0\xC9\xFC\x6B\xF1\x32\xC8\xE2\x7C\x01\x20\xFE\x02\x93\x87\x0D\xB2\xAE\x08\x28\x12\x53\x11\x39\xB4\x2D\x3E\xF1\xB5\xE4\x92\x49\xAC\x80\xEB\xCF\x81\xDA\x4A\x15\x7A\xE7\x22\x14\xBE\xC1\x60\x8B\xE3\xDB\x6F\x62\xAC\x41\x60\x00\x5C\xEA\xE4\xAB\xC0\x78\xB9\xCC\x70\x9B\x5F\x4F\xF3\xD8\x6C\xD9\xA4\xF3\xD5\x11\xFF\x28\x1E\xD0\xA8\x84\xE2\xF9\x36\xCC\xBD\xA4\x03\x26\xA8\x74\x32\x44\x1A\xFD\xB7\x93\x8C\xDE\xA7\xFD\x6E\x18\x43\xEF\x50\xE1\x05\xDD\x92\x3B\x05\x79\x4D\xB6\xCF\xA5\x7A\xCE\xB7\xDD\x7B\x88\xF7\xE7\x90\x47\x78\x10\xD3\x2C\x33\xB5\xD1\x35\x2A\xF6\x70\x14\x1D\x14\xDF\xE8\x7A\xAA\x43\x3B\x61\xF4\xA5\x40\x72\x64\x1A\x21\xC1\x3F\xF3\x31\x0B\xAC\x4A\xE9\x75\xF2\xFB\xED\x3E\x6D\x79\x43\x08\x02\x11\x01\xEF\xF1\xDD\x46\x09\x45\x2F\xFC\x9D\x25\xA2\xA7\x94\xEF\x7D\x9D\x31\x7C\xEE\xD8\x29\x24\x0B\x50\xCE\x88\x02\x17\xE4\xBC\x6E\x76\x6D\x53\xD8\x4B\x9A\xAD\xF3\xF5\xBA\xD8\x50\x52\x50\x0D\x45\x8B\x1F\xFF\xE7\x5F\xED\x06\xC1\x84\x85\x10\xED\x1B\x33\x4C\x5A\x5C\x57\x9B\x41\x8E\xC6\x80\xEE\xC5\xA2\x58\xFC\x5C\x2B\xBE\xD0\xB5\x04\x67\xE3\x02\xA1\xBD\x02\x4B\x6C\x92\x85\x4B\x40\x62\x22\x4D\x5E\xC7\xB6\x93\xE7\x0B\x2B\xE0\x46\xE1\x01\x83\x9B\x96\x69\xD9\xD6\xC3\x1E\x3F\x42\x81\xD7\x8E\xBC\x0D\x8F\xF1\x43\x29\x97\x77\xFA\x03\xEA\xB4\x88\xFC\x50\xC9\xAA\x29\xA0\x58\xFE\xC0\x81\xEB\x58\xF1\x36\x96\x68\xEC\x1F\xA1\x25\xAA\xF4\x3D\x47\x74\x51\xE4\x10\x8A\x36\xD6\x5C\x64\xD4\xCC\xF2\xF7\x10\x70\xE1\x2D\x01\x62\x80\x40\xD9\x48\xB3\x5D\xA1\x06\x8F\x4B\x75\x9A\x93\xD9\x90\xBB\xA2\xD5\x95\xDE\xB8\x4A\x00\x24\x6A\x54\x17\x2F\xC0\x2C\x71\x21\x5A\xB5\xF3\x9F\x24\x41\x01\xBC\xF6\x24\x83\xDE\x2A\x7E\x15\xB5\x81\x78\x1D\xDD\x0F\xFB\xDA\xD3\x17\xA8\xC9\xFF\xF9\x52\x5D\xB6\x7F\xB8\x2D\x4C\xC7\xC9\x23\x49\xD7\x7E\x66\xDA\x0F\xB5\x06\x30\xB2\xAF\xC1\xA8\xEB\x26\xC1\x39\x82\xA2\x33\x06\x1D\x1D\x59\x63\x52\x95\x33\xE7\x81\xD8\x91\x97\xFD\xC5\xFC\xF3\xA6\x33\x99\x9E\x2E\x42\xE9\xF5\x84\x48\x70\x2E\x04\xD6\xBF\x75\x85\xC7\x16\x5D\xD2\x21\x44\x52\x05\x5B\xCC\xA8\x13\x4E\xF2\x89\x83\xC7\x8A\x49\x8D\xAD\x66\x28\x85\x2D\x5B\x50\x1A\x93\x7E\x3F\x4F\xB9\x85\x14\x9C\x6D\x83\x10\xDC\xD1\x4A\x7B\x39\x25\x06\x0D\xFD\x89\x06\xEF\xB7\xAE\x6D\x3A\x43\x44\xCE\x0F\x2F\xB4\x61\x46\xFB\x67\x2D\x10\x18\x7E\x39\x1A\xD9\x7A\x40\x85\x3D\x8E\x91\xF6\x76\x07\x3C\x89\x1D\x28\x68\x42\xAB\xCB\x3B\xBE\x4F\x66\x7C\x09\x1F\x03\xF6\x20\x7E\xDC\x7B\x39\x06\xD2\x5C\x4C\x9D\x99\x43\xB4\x79\xE1\x18\xDF\x1A\xF0\x30\x83\xD0\x14\xBD\x21\x5E\xCF\xD0\xEB\x95\x9C\x3A\x49\x5F\x38\x15\x12\x11\x44\xC5\x8D\x99\x4F\x20\x3C\xC3\xB7\x4B\x34\x57\xDC\x48\xBF\x1B\x3C\x1C\xEB\x30\x6C\x60\xFF\x36\x74\x33\x99\x45\x09\x8B\x9C\x28\x1E\x4A\x6B\x51\x56\x27\x31\xD8\x12\xB4\x8C\x5E\xF1\xE4\x93\x84\x0E\x46\x5F\xD2\xBF\xCA\x3A\xBD\xD1\x3D\xBB\x75\xC6\x0E\xB3\x29\x17\x9F\x6F\x05\x4B\xDD\x74\x48\xD5\xB7\xA7\x3A\x4B\x8B\xDA\x40\x3C\x92\x6B\xB2\xBB\x1F\x04\x90\x3A\x26\xF9\x35\xDE\xAC\xCB\x62\x0A\x93\xB7\x40\x34\xA8\x2C\xEA\x46\x05\x06\xB1\x2D\x9B\x4B\xF4\x93\x42\x23\xB1\x73\x19\x1F\x24\xDB\xD5\x9E\xAF\xDE\x65\xBD\x16\xBC\x90\x3B\x7A\x7B\x9D\x8F\x8C\xD7\x8F\x1F\x6B\x3E\x9D\x39\x3D\x35\x4D\x56\xBB\x1A\xB5\x66\x62\x92\x68\xAB\xDA\xBB\xA5\x01\x60\x18\x38\x2E\xCA\xF3\x88\xDF\xB5\xF7\x7D\x59\x37\x26\xC5\x7A\xD0\x7D\xE9\x58\x26\x05\x99\xD3\x5B\xE3\x30\x2F\x5A\x4E\xA7\x1E\x64\x6E\xF0\x8D\x4E\xB8\xA8\xE9\x30\xDB\x80\xF1\xFB\x3F\xF6\x71\x70\xAC\xB9\x0F\xAD\x80\x05\x3C\x79\xD8\xFB\x58\xCA\xF0\x6C\x0F\x40\xEE\x05\x6F\x79\x18\x7D\x80\x2F\xE8\x5C\x3F\x59\x8C\x82\x4A\x0B\x9A\x5D\xA8\xA7\xE2\x19\xF1\xAE\x36\x2D\x0B\x93\xC2\x3C\xA3\x54\x00\x99\x4A\x40\xA9\x2B\x5E\xCD\xBF\x70\x6D\x8B\x71\xF3\x64\x39\x5B\x6D\x8D\xAA\x05\xDD\x9C\xB7\x69\x50\x0B\x28\x54\x7D\xC3\x22\x25\x56\x21\x44\x6B\x08\xD2\xCB\x79\x87\x07\xA1\x69\x49\xD3\xB9\x03\x39\xE1\x04\x33\xCE\x5F\x34\x76\xCE\xCD\x6F\x4D\xCC\x14\x82\xCE\x94\xA5\x57\x9D\xE5\x34\x9E\x25\x6B\x68\x50\xEC\x74\x10\x47\xEE\x13\x20\x63\x50\xFD\x4C\xA0\x24\xAD\x0F\x14\x08\x8A\x2D\x94\x5D\x4A\x1A\xD3\xB3\x45\xE0\x9F\x7D\xE2\xBC\x2A\x2A\x5C\xF4\xA4\x1A\x21\xFE\x0E\xCD\x03\xDD\x6C\x4E\xF6\x87\xF1\xAC\xBB\x8D\x1E\x8C\xBC\xF2\x02\x80\x1D\xB2\xE2\x0A\x7D\x5E\xF6\x48\x2F\x52\xA7\xD1\x2A\xC7\x25\x24\x7E\x6D\xD4\x48\x24\xD1\x89\x94\x29\xA6\x7E\xAE\x0A\xA6\x1C\x60\xF2\x5B\xDE\x3D\xCB\xA4\x78\xF0\x4D\x2A\xA0\xC0\x0E\x67\x38\x32\xF4\x17\xC4\xFF\x42\x25'
        return pkt

#'hdr.ipv4.dst_addr', 0x57833D4C),
#'hdr.ipv4.protocol', 0x11),
#'hdr.ipv4.src_addr', 0xD0F61344),
#'hdr.path_t.pathBF', 0xCF6FF466),
#'meta.dstp', 0x2329),
#'meta.srcp', 0xC8A7),

    def pkt5(self):
        pkt = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\xD0\xF6\x13\x44\x57\x83\x3D\x4C\xC8\xA7\x23\x29\x00\x00\x00\x00\xCF\x6F\xF4\x66\x00\x00\x00\x00\x1A\x30\xDC\x34\x63\xDE\x65\xD3\x4E\x91\x13\xCC\x72\xE4\x6E\x2B\x24\x5E\xEB\xBD\x50\x88\x31\x42\x3C\x90\xD5\x1B\x0C\x45\x63\x7C\x3D\xCF\x93\x7D\x1D\x55\xF6\xE6\x76\xF4\x1B\x6E\x4F\x16\x4E\xD6\xE4\x83\xBE\x80\x2B\xDC\xDB\x31\xA6\x25\x86\x87\xE4\x59\x98\xD4\xB2\xC6\xBF\x4E\xE0\xDE\xC9\xF4\x06\xB6\xEE\xCC\xF1\x9C\xA8\x80\xA4\x58\x5D\x26\x61\x1C\x5C\xFE\x8A\x34\x5D\x63\x10\xFD\x07\x9F\x61\x34\x18\xC6\xBA\x5B\xB5\xE9\x3D\x87\x30\x7B\x44\xC5\x60\x39\x0E\x80\x37\xA3\xDA\x8F\x11\xB0\xC8\x23\x08\x29\x5A\xC5\x3A\xBA\xEF\x1A\x28\x49\xCD\x62\x3C\xCE\x0D\x35\xA9\xE1\xBB\xA6\x50\xC2\x42\x4C\xEE\x39\x17\xF6\x84\xF5\xFF\x9A\xC1\x5A\xEE\x90\xA6\x60\xAD\x02\xBD\x4F\x57\x3B\xF6\x36\x48\x0E\xF8\x78\xF2\x17\x6B\xD9\x0D\x9A\xEC\x49\xC3\xA7\x2A\xF0\x1E\x98\x32\xD8\x8D\x44\x61\x6C\x35\x04\x05\x79\x31\xA1\x62\x64\x28\x02\x14\xE7\x9B\x7D\x8F\x76\x68\x5D\x85\xC1\xE3\x29\x9B\x37\x63\x75\x29\x77\xBE\xCE\x87\xBD\x11\xEE\x6F\x63\xBA\x91\xC5\x90\x31\x64\x7B\x53\x90\x15\x1D\x2B\x48\xB8\x58\x66\x03\xCD\xBB\x55\xFC\x2B\x07\x72\xB3\x38\x69\x76\x47\x4E\xF2\x3B\x2F\x8E\x63\xB0\x9C\x4F\xAB\x09\xA9\xDB\x6D\xFF\xF6\xAC\x65\x3E\xCD\x7D\x1F\x0F\x1F\x50\x8B\x9A\xC8\x12\x9A\x08\x7A\x09\xCD\xD6\x67\xD4\xA4\xE8\xD3\xCD\xF4\xB9\x16\xCE\xFA\x93\x77\x93\xDA\xCA\xA5\xC8\x04\x0B\x1E\x0C\x49\x28\xF8\x61\xBC\xBF\x2B\x31\xF3\xC0\x27\xB7\x77\x3F\x28\xDB\xE8\x71\xB2\xEE\x7A\x3D\x3B\x51\xBB\xB5\x89\x23\x95\xFB\x70\x4F\x1D\x83\x02\x50\x90\x7E\x6E\x0B\xFB\x6B\x48\x61\x0D\x3F\xD2\x1C\x60\x8A\x43\x76\x5F\x26\x1A\xBB\x2C\x1F\x5B\xB9\x11\x18\x73\x9A\x44\xFC\xFA\x50\x9E\x53\x90\xD3\x2C\x3F\x90\xD6\xC3\xFA\x24\xE2\x7B\xC0\x35\xDF\x69\x7D\x7B\xD2\x08\x83\xFE\xA8\xED\x96\x2A\x3F\x7C\xF2\x04\x0A\xB3\x0B\x38\x1B\x3A\xFE\xBB\xBE\x44\xC9\x66\x06\x1E\x0E\x8D\x13\x93\xD1\x09\x0B\x4E\xBF\x43\xF6\xB1\x54\xFF\x67\xEA\x08\xDD\x56\x2F\x45\x6D\x1C\xFA\xDF\x26\x44\x6E\xD5\x0F\xD9\x56\xF0\x7F\x51\xAC\x42\x4F\xFC\x81\x3B\xEF\x8D\xFB\x57\xF6\xC4\x98\xCA\xBD\xFD\x15\x24\x74\x34\xB9\x02\xCF\x19\xB9\xF1\x3B\x9C\xAC\x27\x04\x79\x8E\x8F\x94\x84\x34\xDC\x37\x51\xC3\xC2\xDF\x0B\x92\x9E\xF1\xC7\x39\xCE\xD2\x3A\x96\x10\x06\xC9\xCE\x6A\x92\x34\x7D\x93\x11\xD9\xD7\xE5\x02\x29\x61\xD9\xA9\xBA\xD4\x95\x2F\x52\xDE\xD7\x7B\x7E\x3A\x6E\x3B\xF0\xBA\x7B\xF2\x38\x32\xCF\xFD\x59\xD1\x14\x1F\x20\x7F\x13\x4C\xAC\x70\x6C\xC0\xFB\xC3\xCB\x17\x9C\x93\xD3\x17\xF8\x84\x88\x56\xDA\x26\xF4\x82\x5F\x7F\x99\x0F\x1D\x2C\x2E\x51\xFF\x63\xAC\xEB\xC7\x23\x03\x7D\xAC\x00\xB1\x9D\x94\x4E\x6B\xCB\x18\xC6\xC8\x7B\xF3\x10\x17\x1D\x3A\xCE\x55\xC9\x91\xA2\x6B\xB3\xEC\x32\x5F\xCD\x15\xB0\xD9\x53\xD5\x23\x30\x1A\x6C\x70\xC7\x98\xAB\xDC\xA0\x4C\x9D\xA2\x68\xAF\xCF\x5C\x6B\x12\xAA\x97\xB3\xC4\x30\x4E\x18\xBF\x58\xD6\xFE\xBE\x6A\xC3\xAC\x24\xD1\x29\x1D\x6B\x34\x73\x8C\xF7\xA4\x0D\x6A\x28\xEC\xBF\xDE\x4C\x21\x1F\x0D\xA6\x7A\xF5\x27\xD3\x54\x25\xBC\xB6\x4D\xC4\xDE\xBF\x6E\x03\xD0\x6A\x4A\x42\x84\x2F\xB1\x9A\x59\xF2\x9E\x68\x92\x30\x28\x05\x24\x2D\xAE\x50\xC5\x05\x75\x57\xFA\xE5\x30\x3D\xB4\x6F\xF8\xB2\x7F\x54\x53\x07\xBC\xCD\xF2\x10\x7A\xC3\xD6\x10\x0A\x34\x0B\x85\x2B\x7F\x45\x93\x1C\x27\x9F\x15\x7D\x73\xDA\x66\xB9\x7E\x03\x47\x2C\x78\xD1\xC9\x7F\xDC\xC4\x19\xFC\x7C\xDF\x1E\x4E\x5E\xFC\x5A\x23\xA6\x3E\x2F\xEC\x75\xE8\x69\x50\xDB\x1F\x95\xFF\xC3\x52\x0C\xC3\xA8\xF1\x64\x4F\x8B\x31\x49\xC0\x13\x3A\x3C\x10\x30\x6F\x7E\xFD\x8C\x9D\x0A\x51\xA0\x87\x5F\xB5\x15\xF7\x28\x2B\x63\x7C\xBF\xD8\x89\x1B\xCE\x6F\x53\xDE\x5D\x99\x08\x9F\xE4\xF2\x9F\x11\xD6\x84\x44\x22\x6D\xEA\xE5\x54\xC2\x23\x32\xD5\x22\x36\x58\x2E\x60\xAA\x0F\xF2\xDB\xE7\xEA\xD6\xB5\x92\xAD\xBD\xFD\xB3\x94\x4A\x6F\xFA\x40\xE0\x72\x34\xA1\x3C\xEE\x53\x88\xE4\x2D\x07\x2B\x4E\xFD\x15\x6E\x69\x12\x3B\xC9\x6C\x59\xCE\x5D\xD2\xCC\xFC\xB8\x14\x08\xC6\xDB\x8E\x7B\xE3\x2D\xA2\xBD\xA9\xCE\x98\x5E\x26\x89\x3D\xF5\x91\xBA\x9B\xC6\x4B\x33\x16\xCF\x28\x4C\x63\x3D\xEB\x56\x0F\xC6\xA5\xD6\xDF\xD1\x92\x5B\x3E\xCF\x8D\xF9\x40\x2A\x5C\x82\x0F\x52\xB4\x8E\xCB\x0D\x9B\x3C\x24\x5D\xF7\x5F\x3D\xBE\x84\xEB\x07\x45\x85\x70\x69\x7C\xC6\xBB\xA2\x2A\xE5\x3D\xB1\xEB\xE3\xE6\x6D\x7A\x6A\xD9\xDB\x2D\x3D\xF7\x1A\xB2\x00\xFA\x5C\x2D\x69\x76\x79\x29\x60\x44\xE8\x7C\xDB\x9B\x39\xD0\x75\x95\x4F\x79\xC3\xC7\xDF\xA5\x7A\x4F\xC1\x6E\xAC\xED\x28\xB0\xC9\x64\x46\xDA\xF9\xE7\x0C\x23\x74\x8E\xBF\xA2\x32\x41\x2E\x19\x43\x4C\x2D\x64\xA4\x6B\x8B\x44\xF3\x98\x0E\x2E\xC8\x35\xFA\x91\x4D\x35\xD7\x7C\x5E\x1F\x95\xB0\x40\x3F\x0D\x37\xCC\x77\xF9\x86\xC6\x10\xA7\xE7\x2F\x22\x25\x7E\x3C\xDC\x60\xBE\x0E\x53\x39\xF1\xDC\x6A\x8A\x4D\x91\xC5\x26\xD9\xB3\x4B\xFD\x7A\xF4\xC8\x37\x50\x80\x51\x34\x9D\x32\xE8\x2D\xA3\x0D\xAE\xFF\xA8\x3E\xBF\xAB\x65\x89\xA2\x2B\x91\x30\x4A\x62\xE6\x99\x14\x07\x59\xD9\xD4\xC3\xD4\x9A\xDD\x2F\xEB\x8C\x8C\x25\xCE\xA7\x36\xE2\x36\xBB\x5C\xCF\x97\xFC\xA6\x2E\xE3\x48\x84\x94\x55\x7E\x5B\x27\x01\x0F\x71\x48\x51\xEE\xA3\x29\x6B\xE1\x5F\xF5\xC6\x53\xEB\xA9\x41\x17\x3E\xD2\xE9\x1B\x3A\x7D\xEF\x7F\xB1\x8C\x8A\x89\xB6\xD8\xEC\x24\xE5\x0C\xAE\x31\x61\x36\x0C\x50\xC5\x2C\x21\xA4\xFA\x38\x06\xC2\xAB\xB4\x61\x59\xFA\x09\xFE\xFC\xAD\x99\x70\x23\xA8\xC0\x65\x83\x32\xD9\xC1\x01\x5B\xDF\xD6\xE1\x9E\x0B\x46\x3A\x2D\x04\x4F\x56\x77\x86\x45\x2C\x41\x1E\xD0\x99\xCA\xCC\x41\x55\x9A\x42\xC0\xB1\x5F\x92\xB3\x19\xF7\xAA\x34\x9B\x15\xE6\xA0\x3D\xAB\x95\x55\xD1\x85\xE6\x42\xA4\xE2\x8E\xFB\xEE\x42\xA5\xDE\x95\x82\x14\x5C\x92\x85\x8A\xA1\x56\xD9\x66\x49\x18\x4F\x74\xA1\xC0\xD8\x2B\x0A\x0A\xCE\x46\x69\x29\x56\x56\xCD\xA0\x49\x77\x28\x5A\xD8\xDD\x1C\x44\x3E\xC0\xEC\xCF\x82\x2A\x71\x93\x6C\x58\x1F\x7A\x1B\xDA\x78\xD3\xE4\xC5\x65\xD1\x17\x78\xAF\xF2\x58\x76\xF2\xAB\x39\xC3\xBF\x6D\x8A\xCC\x15\x29\xF3\xB2\xFB\x23\x6A\x47\xF3\x6B\x52\x51\xCB\x69\xE6\xEC\x25\xE2\xE8\xB7\x1F\x30\xDC\x9C\x56\xE9\xBB\x53\x99\x1B\x70\x02\x3D\x48\xFF\x86\xF1\xBF\xF9\x64\x23\x11\x18\xBF\xBA\x0D\x08\xC8\xC7\xB5\x2B\xF7\x89\x48\xA3\xF3\x86\x0D\xA2\x5F\xC5\xB7\xE1\xA3\x8F\x87\x83\xE2\x68\xDE\xB5\xD5\xCE\x41\x57\x54\x38\x23\xDB\xB2\xFA\x7E\x61\x59\x94\x6D\x4D\x30\x5C\x5F\xB8\xA8\x82\xEB\x65\xB3\xFF\xAE\x0A\x1F\x80\xA3\xEF\x9F\xD1\x9F\x4D\x67\xE6\xC4\x0F\x81\x3F\xF6\x26\xEE\xD3\x8F\x7B\x1F\xF5\xC2\x0F\x3C\x54\x85\x0A\xEF\x5A\x0B\x12\xFD\xE2\xCE\x84\x07\x37\x40\x54\x6E\xF0\x51\xB2\x91\x38\x81\xDC\x2F\x0B\x73\xC6\x75\xBD\xAD\x23\xAC\x5F\x33\x8C\x26\x90\x79\xB6\x1F\x47\x45\x05\xDA\xC0\xB9\x4F\xAA\x23\x65\x4F\x9C\xCB\x7E\xFD\x50\x0C\x1E\x86\xC5\xBE\xBE\x81\x0E\x0A\x30\x30\xD6\x8E\xE8\x5B\xD1\x4D\xF4\x4A\x93\xD7\x58\x52\x57\xC1\xF7\x9C\xB8\x68\x5C\x73\x75\xF5\x5E\x4A\xC3\xE7\x0B\xF8\xCB\x41\x27\x19\x41\xB3\xE8\x42\x10\x18\x8C\x02\xC5\x11\xA7\x69\x37\xDC\xE9\x48\x97\xA8\x31\xC8\x6A\x2F\x31\xA3\xC8\xE0\x6A\x94\xF0\x34\xAD\x54\xF2\x38\x84\x0C\x48\x0F\x04\x27\xE3\x9B\xC6\x8D\x30\x0E\x44\x63\xAC\xF7\xCF\x2F\x96\xD7\xC9\xFC\xB8\x9B\x92\x82\xA2\xF0\xF8\xE3\xDA\x4A\xE0\x6C\x31\xEB\x5F\x46\x4F\xCE\x6C\x4D\x32\x11\x5A\x76\x92\xFB\x3F\x6D\xA5\x53\x3F\xDD\x1A\xAB\xE4\xCC\x5C\x7C\x97\xBB\xC2\x84\x06\x49\x45\xB2\x29\xDB\xFD\x6F\x96\x87\x75\xB3\xD7\x91\xA1\x4D\xDA\x57\xF8\x24\xD5\x1A\xF3\x93\xA1\x5A\x72\x35\xFF\x3A\xE1\xBD\x20\x16\x62\xE9\x4A\x6A\x2D\x77\xCF\xBD\x18\x6E\xF6\xDD\x0C\xC9\x02\x7A\xA6\x25\xBD\x48\x4D\x87\xF6\xAF\xF1\xA9\x2D\x59\x96\x06\x23\xA8\x50\x8A\x87\xDC\x43\x49\x5A\x6B\x7F\xB4\xAB\x97\x54\x3F\xB0\x3F\xDA\xAA\x63\x14\x53\x63\x5C\x1D\x6B\xD2\x2A\xE7\x98\xC6\x54\x0D\x25\x8B\x30\x2F\xB5\x66\xD1\xFF\x3D\x9C\x2C\xDC\x93\xAE\x50\x5F\x01\x88\x6E\x52\x27\x92\x25\x1B\xB0\x89\x61\x5C\x72\x92\xD9\xF9\x74\x39\xF0\x9B\xC5\x41\x5A\x9A\x89\x70\xDC\xF1\x1B\x17\x8B\x2F\x55\x80\xFB\x30\x2A\x13\xF9\xB6\x6E\x73\x74\xB3\xD0\xE6\xB5\x15\x75\xAC\x35\xEB\xEC\x09\x29\xFB\x68\xB9\xF1\x00\x0C\x29\x8D\x18\x08\x08\xB0\x43\xE3\xE3\x7B\x9F\x51\xC8\x2D\x11\x71\x42\x1A\x15\x04\x48\x3A\xC7\x52\x66\x96\xCD\x52\x62\x06\x54\xF5\xA4\xD3\x4C\xB7\xA8\xA9\xF7\x99\xF6\xD3\xB0\x01\x42\xF0\x15\x18\x2B\x67\x9C\x35\x27\x40\x2C\xC3\x7B\x8C\x69\x1B\x69\x9D\xCB\xCD\xE2\xDE\x16\x75\x2D\x41\x33\x83\xFC\x18\x6B\x62\xA1\x0F\xB1\x5C\x0C\x8D\xFE\xD0\x91\xB9\x0A\x87\x63\x9B\x09\x6B\x59\xB8\xA6\x8C\x28\xED\x61\x90\x1A\x8B\x8B\x7C\xE1\xC2\x4A\xD7\x06\xCB\xCB\xBD\x2E\x10\x44\x7B\x0C\xE5\xE7\xE8\xAA\xD3\xE3\x09\x34\x68\x05\xF9\x46\x7D\xCB\x18\x95\x51\x05\x01\x79\xC7\xAE\x77\xB8\x31\xAF\xB8\xD0\x71\xF6\x42\xFC\x61\x72\x84\x7A\x49\x42\x9A\xB6\x4C\xB1\x89\x36\xF1\x84\xDE\x93\xFC\x1D\x9B\xD4\xC5\xDA\x17\x76\xF4\x94\x43\x75\x7A\xDD\xAC\x90\xB0\x46\x91\x4C\x46\xB2\x45\x32\xD2\xD6\x29\xF4\xF5\x5F\x7A\xED\xB7\xD4\x04\xDA\x83\x23\x49\xDB\xF8\x7A\xEF\x43\xB6\xAD\xD9\xC0\x73\xC9\xB3\xDE\x07\x66\xCE\xFF\xC5\xB2\x4F\xF0\xC1\xDF\xDE\xF5\xAA\xFB\xC9\xD9\x06\x52\xB9\x29\xB6\x78\x66\x39\xFF\xE0\x71\xEB\x51\xC5\xD9\x8F\x68\xF0\x0D\xC8\xF8\x98\x24\x97\x60\x8F\xBC\x47\xD8\x04\xEF\x11\x70\x0F\x34\x07\x16\xFF\xF9\x70\x02\x80\x38\x7A\xE9\x89\xBA\xCB\x1E\x6A\x51\xD6\x22\xF9\x64\xFC\xF5\x6A\x67\x79\x41\xA9\xF5\xB2\x2C\x38\x75\xEA\x82\xAF\xE8\x3D\xEF\x67\x88\x6F\x68\xB3\xCA\xF2\x6F\x82\x4F\xA4\xE4\xAB\x76\x48\x91\x78\x57\x8D\x5A\x30\x9D\x30\x51\x6D\x0B\x8A\xA7\xD5\x78\x32\x60\xF1\x45\xFF\xA5\xF2\x1A\x3C\x60\xE0\x18\xA6\x11\xB6\xE3\xF8\x2D\xE8\x13\xFA\xED\x60\xAB\xBD\x3F\x52\x94\x79\x60\xEF\x19\xD3\x8F\x5A\x06\x47\x98\xDB\xEC\x08\xAD\x70\xDA\xD0\x65\x46\x6F\x98\x76\x2C\xB7\xBB\x47\x96\x26\x9A\x02\xAB\x29\xA7\x99\xEC\x2A\x6D\x50\x6F\xA0\x9C\xF5\x4F\x6E\x13\x1C\xF9\x3B\x63\x69\xE4\x8D\x51\x6D\x2F\x57\xBB\x85\xE6\x09\x95\x60\x12\x32\xC9\x95\x3B\xE2\x5B\xF9\x3C\x35\x2F\x10\x43\xBB\x5D\x52\x65\xA0\x03\x52\xB9\xB1\x44\xC6\x51\xAB\xED\x7E\x51\x72\x3E\x5C\x76\xEE\xEE\x98\xC9\xDB\x35\x10\xC4\x0A\x0A\xD5\x63\x4F\x61\x58\x5A\x5E\x82\x27\xB3\x7B\xBD\xFC\x6A\x0B\x7D\x51\x40\x31\x55\x0E\xCF\x65\x39\x0D\x3C\x8C\x6A\x62\x07\x81\x61\xCD\x20\xDA\xCE\xAD\xD5\x58\x81\xCA\x0F\xBE\x03\x7C\x64\x40\x49\x28\xB3\x01\xA1\x62\xAE\x4A\xC0\xD5\x9F\x1E\x09\xE5\xAB\x38\xB2\x08\x17\x43\xA7\x16\xFF\x4C\xD2\x21\x00\x97\xCE\xDD\xD0\xF9\x61\x69\x4A\x67\x42\xC8\xEF\x6E\x83\x8E\xC9\x13\x36\x91\xB6\x07\x5A\x53\x5A\x2B\xCB\xCD\x45\xFD\x14\xC8\xD5\x91'
        return pkt
                

#'hdr.ipv4.dst_addr', 0xB0BD4743),
#'hdr.ipv4.protocol', 0x11),
#'hdr.ipv4.src_addr', 0x8E5A4773),
#'hdr.path_t.pathBF', 0x1987A2B0),
#'meta.dstp', 0x2329),
#'meta.srcp', 0x8A75),
    def pkt6(self):
        pkt = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x8E\x5A\x47\x73\xB0\xBD\x47\x43\x8A\x75\x23\x29\x00\x00\x00\x00\x19\x87\xA2\xB0\x00\x00\x00\x00\x9D\x8C\x6D\x69\xD5\xE5\xE6\x08\x18\xF2\xEE\x93\xB8\xF3\xEB\x13\x8E\xA0\xC9\x78\x6D\xF7\x82\x43\x1E\xE0\x63\x1D\xB0\x59\x56\x00\xFC\x6D\x2F\xBD\x12\xE9\x77\x38\x73\x74\xA5\x79\xA0\xDF\x63\x3B\xB1\xED\x13\xA6\xFD\x60\xEA\x80\xA2\x39\x8E\xD1\x6E\x01\x43\xE8\x7F\xB8\x86\x4C\x0C\xC7\x93\xD1\xDF\x56\xA2\x44\xB7\x26\x13\x08\xEE\x09\x9A\x1B\x45\x0E\x15\x08\x52\xF1\xC7\x22\xC6\x6E\x87\x66\x04\x42\x6E\xD5\x6E\x5E\x7C\x64\x8B\x99\x92\x95\xD1\xE9\xF6\x96\x75\xDD\x3C\x62\xA2\x3B\x5E\x60\xE3\xD2\x0B\xF5\x93\x14\x49\xF5\x2E\x49\xDC\x97\x36\xC0\x75\x62\x57\x4B\x62\xAB\xA7\x3D\xC9\xF4\xF7\x1C\x99\x1E\x8F\x7F\x67\x42\xC1\xB8\x9F\x82\xBC\xDE\xEF\x27\x89\x88\x8C\xE4\xB9\x06\x7C\x79\xEB\x1F\x54\x02\xAC\xE0\x7A\xEA\x82\xE2\x6C\xF0\x95\xE4\x80\x8D\x8F\x33\x7D\xA3\x76\x8F\x08\x3F\x9B\x86\x73\x10\x01\x6A\x44\x8D\x9F\xC7\xB8\xEB\x14\x2E\xDC\x10\x89\xA7\xC6\x8B\x9E\x23\xA4\x83\x97\x6C\xA6\xC8\x2C\xB6\x0B\xB9\x6D\x92\xAD\x92\xC1\xB1\xD7\xAD\x9F\x80\x4A\x28\xB6\x77\x25\xC1\x65\x7E\x9B\xA2\x78\x25\xA9\xC9\x7B\xAE\xB2\xA4\xF5\x1F\x3A\x8A\x2E\x9A\xE8\x7D\x05\x63\x55\x56\x76\xF4\x47\x7B\xEA\x90\xEE\x22\xB2\xD2\x01\xA1\x1F\x10\x1A\x95\x7B\xFB\x15\xFA\x8E\x2B\xE1\xC7\x47\x92\x64\x50\x79\xCD\xE7\x45\x7F\x95\xC7\x77\x63\xB7\xAC\x6F\x82\xC4\xD8\x70\x85\x1D\x0F\x88\x3D\x0D\xA4\x6B\x65\x60\x03\x00\x30\x62\x24\x3E\x11\x47\x1E\x80\x3D\x73\xE2\x45\xE5\x9A\xBB\x24\x6B\x46\x82\x81\x78\x3C\x67\xF9\x42\x8F\xFA\x8D\xC0\x09\x01\x1E\xFB\xE4\xF4\x76\xE6\x36\xB8\x60\x5F\x46\x97\x2D\xA5\x73\x1E\x60\xE9\x28\xD2\xC0\xB1\x1A\xB0\x3A\x56\x86\xFE\x8B\x67\xDD\x39\xD8\xDD\x16\x4B\x04\x33\xC0\xA7\x2A\x1C\x7C\xDA\x3D\x8D\x0F\xF4\xC7\xEA\x57\x1C\x69\xC3\x45\x50\x0C\x4D\xEA\x63\x37\xFF\x63\x3A\x87\x5B\x2C\x3E\x6F\xFF\x97\xDF\x45\xD6\xD8\x0F\x82\x96\xF0\xB1\x8A\x3D\xC3\x0C\xCB\xC6\xD8\x0D\x5A\x9D\x88\x5D\xD0\x27\xEE\xCD\xF5\x62\x01\x6A\xEB\xEF\xEF\x49\x9D\xA9\xD7\x9F\x83\x03\x75\xB7\x07\x7A\x40\x02\x40\xC1\x42\x78\x0C\x07\xD0\x09\x0C\xF5\xF5\x12\x77\xB8\xCC\x86\xAE\x5E\x8D\xF8\x42\x4B\xB1\x3D\x3F\x2D\x33\x9E\xBC\x1C\xFB\x50\x15\xBF\x67\xB4\xCC\xF3\xAC\xBD\x4F\x67\x4B\x9A\xC4\xEC\x20\xB1\x1D\x81\x6B\x72\x19\x9E\xAC\xCA\x4F\x3C\xCB\x72\xAA\x65\x80\x3F\x04\x75\x03\xEF\xB4\x39\xA8\x7F\x57\xEB\x6D\xF1\x37\x86\x96\x7F\x7F\xB0\xDD\x3F\x76\x4D\x35\x68\xA3\xC6\xAA\xF4\x2B\x52\xC5\x56\x21\x9E\x5F\xEC\x0E\x44\x08\x5C\xEC\x8C\xE7\x79\x9E\xC9\x29\x6F\x81\x52\x3C\xC2\xDF\x6A\x4F\x47\x54\xD3\x3E\x3C\x44\x19\xC2\x8D\x59\xCC\x53\x2B\x7B\x18\xD4\x74\xB9\x54\xC1\x31\x40\x95\xC4\x89\x3A\x41\xB7\xE8\x32\xF3\x88\x75\x08\x78\x10\x56\xF6\x31\x9F\x5D\x3D\x49\x63\x5A\xB8\xD8\xA6\x72\xB7\x8D\x71\x84\xC1\x13\xCC\x84\x97\x9E\xAD\x67\x21\x8A\xC5\x3E\xA8\x06\xF3\xE7\x91\x63\x05\x0E\x8B\x3B\x9F\x7B\x2B\xED\xC5\x9D\x2A\x69\xD7\x6F\x0C\xD6\x64\x6A\x49\xE4\x34\x04\xE9\x2D\xB8\x7E\x7C\x69\x29\x9B\xA0\x6E\xB4\xF8\x50\x6F\x9C\x4C\xF2\x84\xEC\x61\x78\xF3\xF3\x4E\x7A\x1A\x11\x47\xDE\xA2\xD0\xE1\x6A\x24\xC6\x14\xE2\xD8\xF5\x2F\xD4\x67\xC9\xED\x67\xCD\x40\x7F\xCB\x76\x77\x15\xAC\xFF\x00\xF6\x80\x1C\xCE\x7F\x2D\x6C\x1C\x19\x37\xBD\x82\x19\x91\x5E\xDF\xE2\x76\xEF\x83\x27\x75\x50\x84\x0A\x3E\x2F\x1C\x70\xA6\x3A\xA0\x20\xF9\xC1\x5D\x21\xAD\x97\xDE\x57\xD3\x38\x63\x49\x97\xF2\x3A\x41\x7E\x11\x74\x62\xE5\xDD\x1C\xD0\xED\xAE\x06\x2B\x8C\xA0\x6D\xF0\x07\xCE\xE7\x39\xFA\xDE\xA7\x83\x9B\x27\xF0\xA7\x60\xA0\x1A\xC8\xA2\x81\x84\xFB\xFD\x67\x1B\xCD\xAF\xFE\x6C\x93\x00\x96\xBB\x38\x1B\x4E\x61\x31\x54\x37\x53\xDE\x64\x84\xE9\xE5\xB5\xE7\xFF\x69\x09\xF1\x9A\x8B\xED\x1C\x70\x23\x8B\x81\x9A\x56\xFC\x35\xD3\x00\x9C\x5B\xA4\x7E\x3F\x91\xFF\x2C\x64\x0E\x0C\x29\x71\x66\x6A\x1D\x0A\x99\x8E\x8B\x09\x53\x29\x40\x93\xE6\xE7\x29\x34\x0C\x05\xAD\x42\x65\xAB\x3B\x33\x9B\xCF\xEA\x48\xCD\xD0\xB1\x31\x1E\x37\xD1\x53\x60\xC7\x8D\x30\x47\x8F\x94\x85\x38\xF2\x56\xB0\x94\xBC\x01\x55\xD9\xEE\x0A\xFB\x20\xCB\xB5\x71\x82\x83\xA8\xF0\xCB\x6A\xDB\x44\x2B\x83\x5D\x52\x39\x38\xEB\x6F\xBC\xD0\xF3\x97\x5A\x44\xCA\x0C\xD1\x85\xD8\x85\xF4\x40\xFC\x32\xFE\x73\xBC\xB9\xDD\xD1\x6C\x45\xE8\xBB\xB0\xC4\x2A\xF2\x6F\x48\x28\xED\xDD\x5B\xA2\xED\x75\x7B\xA6\x1B\x11\x81\x65\x73\xBB\x70\xF9\x78\x74\x21\xB4\xEE\x21\x50\x26\xB4\xC0\x76\xA0\x40\x4C\x76\xD1\x47\xBD\xEA\xBD\xA0\x1B\x4C\xA8\xEF\x17\x25\x77\xC8\xD1\xB9\x0F\xA4\xE1\xD6\xE7\x80\x54\x8D\x7B\x58\x5F\x83\x63\x52\xC0\xC8\xD2\x89\x1E\x17\xFC\xF9\x98\xAF\x27\x3E\x47\x10\x94\x37\x7A\x90\x84\xAB\xCB\x1F\x04\xBF\x32\xE9\xB5\x51\xB2\x91\x9E\x15\xE5\x62\xE4\xF9\xC8\x99\x7F\x68\x59\x22\x15\x16\xD8\x4E\x61\x00\xBF\x95\x16\x38\xC0\x8B\x88\x4C\x92\x88\x10\xE1\x04\x0D\xED\xF0\x8A\xE4\x78\x18\x7B\x93\xF8\x3B\x3F\xD0\xCA\x8E\x07\xF9\x45\x5C\x87\xAD\x9C\xFB\x5E\xDF\x22\x75\xF0\x4F\x58\x50\xBC\x03\x55\xE7\xC0\xDA\x88\x2F\xB4\x70\x3A\xFC\xCA\x85\x86\x79\x5D\x6D\xFB\x88\x25\x43\x3E\x19\x53\xF8\x7C\xCC\x24\x93\x06\x80\x83\xC2\xE3\xE6\xBA\xAC\x96\x7F\xE8\x94\x3F\x96\x44\xF9\xBC\x10\x12\x40\xA2\x2D\x09\x3E\x08\x7A\x59\x22\x65\x1C\x57\x60\x54\x52\xA3\xA7\xEE\xE6\x91\x1B\x58\xB5\x03\x2B\xDB\x86\xBE\xC5\x26\x66\xD2\x0E\x79\x68\x28\xD3\xEF\xB6\x8B\x0F\xE9\xE5\x23\x00\xE2\x09\xF2\x03\x24\x7F\x75\x1F\xB4\x36\x61\xDD\x1D\xE0\xB5\xAE\xBD\x34\x3B\x5B\x27\xEC\x36\xA8\xA8\x24\x54\x10\x64\x19\x57\xBB\xA0\x75\x58\xA0\x6C\x24\xE1\x4D\x19\xB6\x82\x67\x06\x8A\x92\x58\x83\x37\x8F\xF3\x43\xF5\x3D\x59\x0A\x12\x08\xCD\x96\x86\x6C\x4D\xD8\xA4\x92\xC1\xF0\xC1\xDD\x78\xCF\x9B\xD4\x2A\x60\xE2\xAA\x0D\xE5\x61\x29\x70\xE4\x60\xC1\xDA\x96\xC3\xAE\xE0\x5F\x0C\x55\x94\xB9\x9C\xFD\xFD\x4F\x58\xF6\xD5\xAA\xB7\x20\x22\xCA\x71\x8A\xA5\xB8\xA0\x6F\x75\x87\x03\x9E\x66\xA1\x6B\x35\x26\x5E\x38\x1E\x78\xBF\x1C\x32\xF6\x64\x6C\x58\x0B\x85\x26\x88\xF2\xC4\x0E\xD9\xF2\xF4\x70\x77\xFB\x4B\x8B\xC4\xBE\xDC\x80\x72\x6A\x99\x54\x93\xF8\xAF\x7C\x06\xE8\x33\x97\xEA\x85\x05\x99\xE0\x0F\x89\x43\x19\x19\xF6\x17\x6D\x6F\xA6\x55\x01\x69\xBC\xDB\x9B\x43\xCB\xB0\xC8\xE1\xE9\xAC\xF1\x7A\x1C\xCE\xBA\x6E\xAE\x25\xDE\x7E\x0E\x99\x55\x30\x9E\x59\x40\x25\x36\xDA\xD0\x33\x08\xAD\x7F\xD0\x04\x16\x29\xE1\x40\xE4\xFE\x71\x6E\xD4\x96\x71\x5B\x17\xEF\x9B\x12\x20\xF2\xDA\x17\x96\x98\x23\x54\xD0\xB4\x21\x61\xB7\x4A\x99\x28\x84\xF3\xBC\x31\x43\xFD\x7C\x13\xC6\x3D\xE6\x25\x84\xB3\x0A\xE6\x0B\xDF\x98\x8C\x5C\x77\xB7\xA5\xFA\xD7\xE8\x0E\xF8\x40\x8F\x5F\x9F\x18\x21\x2F\x3C\x65\xC9\xEF\x77\x46\xD2\x91\x37\x76\x8A\x68\xE7\x41\xE9\x31\x18\xBC\x10\xEB\x03\x69\x54\x5E\x17\x79\xC0\x03\xA4\xAC\x1F\x6B\x00\x1C\x2A\xA9\x9B\x8B\xB2\xF1\x43\xA4\x5A\x6B\x44\x99\xED\xED\x1A\xEC\x3E\x3C\x4C\xD6\x16\x1C\xB3\x3C\x18\xA1\x81\x8E\x18\x9A\x32\xA0\xF2\x3D\x80\x8C\xB4\x34\x9F\x51\xCE\x91\xDD\xC3\x92\x2D\x0B\xF6\xB7\x0B\xB3\x18\x82\xC1\x94\x1E\x21\x6E\x7C\x20\x6B\x12\x30\x91\x36\xBE\x6F\x05\x5B\x6B\xFF\x66\x4A\x37\x9D\xE8\x02\xCA\xDB\xEA\x71\x0C\x5D\x15\x40\x64\x75\x1C\x49\xD4\xB5\xB5\x6B\xDD\xCD\xE9\x2C\x3E\xDE\xF9\xAB\xA2\x98\x4D\x02\x3A\xAE\x0E\x5E\x11\x43\xD6\xD4\xAA\x79\x93\xDB\x72\x59\x52\x84\xCF\xAC\x31\x58\x4B\x8C\x3E\xA9\xB4\xCA\x2B\xC1\x7B\xDB\x40\xBE\x97\xFF\x46\x27\x10\x08\xFB\x06\x11\xB5\x3A\xCE\x1C\x5D\xD2\x1B\x9D\x7F\x4F\x12\x67\xF5\xBD\xA0\xA8\x2B\x6E\x8D\x33\x7D\xC1\x75\xC3\x13\xA9\x37\x7C\x9F\x9D\x24\x8C\x51\x05\x4D\x26\x17\x2B\xAD\x04\x20\x95\x8E\xA2\x3C\x37\x5A\xA8\x66\x3A\xF3\xFB\xAF\x78\xAD\xD4\xC9\xDF\x92\xA1\xB4\x28\xC4\xD2\x13\xB0\xF7\x78\x66\x7D\xD4\xB0\xA4\x89\xA5\x20\x14\x98\x5B\x54\x89\xCF\xC2\x4A\x69\x9E\xE4\x97\x8C\xD4\x54\x96\x42\x37\x8C\x16\x09\xA9\xA9\xD0\xEE\xC8\x9E\xCE\x53\x6D\xB1\xCF\x68\x86\xCF\x7A\x0C\xE2\xB7\xEB\xAE\x2A\x07\xAE\xED\x1F\x97\x4A\x04\x8E\xD8\xBF\x56\x47\x66\x4B\x1F\xC9\xED\x34\x9C\xB2\x25\xC1\x82\x02\x9D\xCE\x6F\x59\x30\x51\x56\x57\xE9\x32\xA3\x71\x4F\x19\x39\xCE\xBE\x0A\x5D\x6C\x17\x0A\xF5\x39\xC6\x6C\x9C\xBC\x14\x10\x03\xDA\xB5\x34\xE7\x39\x21\x9E\x68\x21\x33\xE5\xE1\x99\x45\x47\x35\xC6\xC8\x32\x50\x47\x75\x97\x2A\x54\x3C\xF3\x30\x80\x06\xAF\x8B\x3D\xCD\x5D\xAD\x1C\x74\xDF\x0F\x30\xAA\x8E\x81\x1A\xD7\xEF\x81\x37\x5E\x3B\x27\xCE\x89\x25\x24\x65\x9C\x12\xC5\xA7\x6A\xAC\x2F\x67\x9D\xC7\xAB\x96\x7E\x9B\x34\x46\xA5\x49\x46\x4D\x7F\xB9\x95\x90\x9D\x3C\x5B\xE8\x2D\x67\xB9\xDA\xB3\xA7\x68\x7A\xAC\xF3\x98\x75\xA4\x01\x4D\xCB\x7F\x29\x2F\xE7\x39\x62\xD5\xEF\x8A\xDC\x17\x21\xF5\xEB\x58\x10\xB1\xC5\xB3\x5E\x44\x76\x22\x6B\xC8\xC3\xC6\x8E\xA0\x94\xA2\x82\xB4\x53\x30\xE6\x64\x1F\x9C\xAF\x6B\x96\x3C\x60\xAC\x66\xD5\xBA\x18\xC5\x6D\xAD\xA0\x55\x63\xFF\xF9\x28\x28\x20\x2F\x6A\xA1\xA9\xA0\x53\xFF\xDF\x57\x61\x1A\x81\x42\xC7\x16\x31\x2D\x46\xEF\xAF\x80\x30\xC0\x96\x32\x46\x83\x54\xDB\x50\xDE\x10\x3A\x2D\x03\x91\x69\x24\x3A\x21\x92\xCB\x91\x81\x1B\xCC\x66\xAE\x6F\x47\x1F\x0D\xA0\xF4\x3A\x21\x77\x8F\x4A\x94\xC6\xDC\xC7\x6D\x21\xE1\x2A\xE9\x12\x51\xED\x12\xCC\x69\x42\x25\x41\x44\x97\x4C\x0E\x1B\xBE\xB8\x8D\x59\x96\x57\x83\x1D\xAB\x5B\xC3\x6F\xD0\x5D\x3F\xD5\x5F\x93\xF3\xFF\x65\x0B\x23\x7D\x0C\x98\x02\x91\x72\x8B\x96\xDC\xE8\x3B\xE7\x10\x97\x21\xD5\xCD\x50\xDE\x5B\x92\xE3\x3C\xB6\x02\x78\xD2\x56\x50\x48\x2E\x56\xD7\x67\xAC\xE1\x2A\xB7\xE9\x80\x34\x81\x39\x72\xD8\x48\xD8\x78\xA9\xE1\xCB\x30\x1B\x73\xEA\x54\xEA\x7A\x71\x4A\xD4\x58\xD6\xE9\xCD\x3E\x3B\xBB\x8C\xAA\xF5\x2A\xEF\x5F\xBE\xBA\x86\x9D\x0F\x43\xD7\x46\x22\x7E\xB2\x28\x80\x8B\x3A\x12\xDD\xEB\x20\x07\x75\x1E\x8B\x80\xD9\x0B\xAA\x5E\xBF\xEB\x27\xFC\xF3\x4B\x31\x57\x27\xC9\x63\x4A\x04\x3F\x9A\xC9\xE7\xAB\xE8\x8E\xB7\x03\x4D\x3F\x12\x98\xA8\x07\x42\xB0\xA6\x17\xAE\x13\x33\x04\x9B\x2D\xFE\x83\xB8\x7D\x11\x2F\xFB\xCA\x3D\xAB\x7D\x6E\x18\xC8\xDE\x52\x02\x00\xF5\x23\xD9\x05\x4B\x06\x0C\x65\x1D\xEE\x76\xAF\xA2\x3D\x0D\x5C\x82\xCA\x9D\xF9\x58\xFA\xDA\xAF\x16\x25\xFB\x99\x39\xC6\x06\x87\x54\x3B\x5B\x17\x83\x85\xF6\xB4\x39\x16\x4F\xA2\xB5\x83\xA0\x13\xC0\xAC\xC9\xD0\x72\xB4\xDC\xBC\x5D\x83\x37\xE9\x4B\x93\x38\x18\xB5\x1A\x97\xA4\xDE\x14\xC3\xCD\x8E\xCE\x4C\xE5\xD5\x2D\x18\x7C\xA8\x2D\x41\x32\x8B\x05\xF4\x7C\xC9\x74\x20\xD1\x53\x43\xEC\x51\x8B\x9F\x2E\x35\x13\x71\xF2\x76\xC7\x5B\x63\xB4\x1C\xBE\x3D\xA5\xEE\x0A\xBE\x7A\x10\xEC\x48\x77\x40\xC7\x00\xCB\x86\xC5\x86\x53\x50\x10\x3A\x7D\x94\x7F\x7E\xF2\x96\x62\xC3\xFD\x7C\x7D\x1A\x23\x66\x7F\xFA\x3F\x41\x7F\x7D\xF6\xB9\xDE\x5E\xE7\x7F\x62\xC3\x40\x18\x32\x90\x38\x65\x54\xEF\x11\xD0\x75\x03\x4E\xCC\xC6\xF2\x3E\xC8\x73\x7F\x9E\x9C\x2C\x78\x21\x32\xEA\x77\x45\xAB\xD7\x7D\xAD\x3E\x4F\xE4\x5A\x4C\x79\x0F\x46\xD5\x51\xEE\xA0\x86\xDE\xFF\xAC\xC8\x95\x4B\xDE\x36\xEA\x70\x8D\xC7\xE4\x88\x72\xC0\x0C\xFF\x00\xDA\xC9\x7F\xD7\xE8\x01\x01\xBB\x95\xC6\x76\x5C\xF7\x36\xA8\x58\x40\x5F\x0D\x13\x8C\x7D\x7E\x12\x95\x16\x68\x34\x03\xCD\xD3\x67\x61\x2B\x1A\x30\xAA\x59\x6D\x6A\x1F\x9F\x1C\xA4\x52\x21\xC5\x19\xAB\x92\xA4\x04\xEA\xBA\xA1\xA6\xD8\x76\xFB\x5D\xD9\x21\x17\x5F\xAD\xF0\xA9\x14\xCD\x73\x6D\xD8\x52\x4B\x27\x3B\xA7\x57\x36\xEA\x6F\xAB\x0C\x2F\x83\xD2\xBD\x4B\x5C\xF6\xB3\x39\xF5\x2B\xCA\x8D\x5B\xF7\x90\x7F\x75\x0E\x58\x7F\xC0\x66\x6C\x5B\xD1\x8E\xA6\x3B\xDA\x2E\xD3\xB1\x6E\x68\x81\x52\xFD\x99\xFC\xC2\x22\x13\xD8\x74\x00\xA9\xB1\x58\x1B\x6A\x91\xF3\xFD\xD4\x02\x15\x8A\x34\x2B\x0F\x74\xA5\xAD\x05\x84\x54\xDB\x0A\xCF\x25\x40\xCF\x13\x72\x9E\x29\xB6\xDA\x0D\xF9\x4F\x3B\x4A\x86\x6A\xA2\x4D\x86\x6B\x09\x89\x3A\x58\xBD\xBD\xC4\xDE\xAF\xFA\x4E\xB9\x2C\x52\x84\xD3\x0C\x37\x79\xD3\xC2\x3B\x8C\xD9\xED\xB9\x57\xA9\xF6\x60\x76\x6B\x17\xA0\x9F\xDF\xBB\x49\x21\x61\x18\x3E\xFE\x9A\xB3\xD7\xB2\x2F\x65\xAD\x27\xD5\xEA\xAF\xEF\x47\xA0\xA8\xD9\x8A\x8B\x50\xCC\xB7\x47\x53\x77\x05\x42\x12\x10\x93\x64\x71\x66\x89\x79\xF6\x19\x1D\xD9\x65\xB6\xD9\xFB\x7F\x03\x25\x75\xFB\xE8\xE0\xBC\x90\x2B\xA6\x97\x0E\x05\x41\x9D\x85\xD3\x9D\xEE\xE3\xC4\xAD\x9B\xAE\xFC\xDF\xBA\xFF\x8C\x6B\x98\x0E\xFD\xB2\x3A\xAB\x9F\xF2\xCD\x33\x79\x17\x79\xF4\xB8\xB4\xEE\xB5\x8A\xC6\x6A\x80\x0F\x4A\xBA\x3D\x38\x0B\x0A\x94\x8A\x4B\x53\xBD\xA8\xAE\xEE\x46\x5A\x64\xD2\x5D\x90\x24\x8A\xF1\x0A\x18\x3A\xD7\xDA\xCA\x69\x9E\x9F\xE8\xA5\x6D\x38\xDA\x89\x54\xC7\x65\xBE\xC7\xC5\xAC\xB1\x5C\x40\x6B\x75\x9A\x53\x61\x5A\x5F\xDC\x85\x72\xCD\xD2\xC4\xF3\x7C\x55\xC6\xBA\x6C\x17\x29\x54\x13\x63\x4D\xC5\x8B\x91\xE2\x22\xF0\xE3\xFC\xC8\x54\x7D\x76\x1B\x68\xB1\xF1\xBA\x20\xCD\xBD\xBD\x90\x3B\xE1\xB9\x5F\xFC\xB9\x55\x2A\x04\x12\xCD\xEA\xBA\x6F\x17\xB0\x78\xAD\x47\x6C\x12\x3D\x42\x32\xA0\xEB\x19\x6A\x21\x54\x9D\xAB\x09\x7D\x5F\x41\x08\xCD\xE8\x9E\xC9\x7A\xC4\x76\x0E\xD4\x7E\x1F\xC5\x9D\x1C\x20\xDE\xBB\x20\x54\x40\xD8\x37\x32\xA4\xC3\x8A\x35\x84\x12\x11\xB1\xB5\x46\xB5\xE1\x9F\x84\xAA\x1F\x49\xA7\x80\x7C\x11\xE6\x4E\xA5\x75\x84\xB2\xBD\x72\xFF\xF4\x97\xA5\xC1\x6C\xE3\xE6\x95\x44\xFE\x7D\xBE\x55\x26\xA7\xF8\xC4\xA6\xD1\x48\x07\x43\x3D\x77\xA9\xF9\x38\x3D\xEE\xA1\x7A\xD7\xA8\x30\x79\x69\x55\x28\x3A\xEA\x2B\x11\x3F\xA7\xBA\x07\xBA\x4F\x67\xA1\x80\x9D\x3E\xDF\x2E\x8C\xA2\x2E\xEA\x58\x07\xD4\x2D\x27\x20\xC8\x6E\x1F\x08\x95\x3D\xFB\x65\xF3\xE3\xFF\xB9\xD0\x27\x54\x97\x91\xF4\x27\xBA\xD5\x74\x86\xF5\x3C\xAC\xC5\x01\xAB\xE2\x95\xDD\x07\x2B\x0A\xD2\xB6\xA9\x08\x79\xFE\x92\x4F\x9D\x22\x5A\x5F\x3A\x61\x9E\x46\xAB\xE5\x35\x2B\x2E\xE9\x72\x9D\xC0\x03\x8F\x93\xA3\x45\x9D\x38\x06\xD3\x2B\x19\x53\xA6\x4D\x33\x82\xE8\xB6\x22\x18\xEE\x47\xEA\x53\xC5\xA3\x7C\x48\x57\xEF\x6F\xA0\xD9\x61\xD7\x9B\x5C\x02\x18\xA5\x1E\x75\x90\x02\xCE\x8F\x1D\x1C\xC6\x75\xEA\x08\x01\xF5\xAE\x60\x93\x10\x8F\xA3\x94\x15\x98\x07\x28\xC9\xD6\x19\x61\xF3\x6C\x2B\xB7\x1C\x95\x97\xB8\x7F\x9A\x97\x5A\x39\x66\x88\xD6\x23\xB8\x7A\x0B\x8D\x7E\x4D\x3B\x27\x82\xFD\x61\xAC\x24\x2A\x67\xF9\xD5\x7D\xC8\xD7\x60\x2B\xA7\x35\x78\x88\xDC\x6E\x78\x03\x33\xCF\xF3\x25\x67\x17\x43\x23\x4E\x26\x78\xED\x4C\xD3\x22\x4B\x7E\x64\xE9\xD1\x92\x3C\x8E\xD8\xE3\x37\x34\xE5\x1D\xF9\x17\xF6\x28\x42\x2D\xE9\xAA\xAA\x17\x50\xB7\x6D\x14\xE7\x5F\x01\x7F\x4B\x1F\x05\xAA\x65\x65\x67\x49\xBC\x45\x51\x58\xA6\xE4\xC5\x4F\x24\x26\x10\x3F\x5D\xAE\xE4\xA4\x28\xC4\x0B\x1C\x2C\x51\x09\x2C\xD1\x10\x53\x82\x11\x2A\x32\x02\x37\x9B\x2A\x3C\xE0\x54\xD7\xC1\x00\xE9\xF7\x0B\xBD\x93\x74\xBE\x04\x4A\x14\x75\xBC\x1D\xB0\x25\x74\x2D\x2E\xE1\xF7\x25\x84\x87\x30\x31\x8D\xD0\xE4\x66\xB2\x7E\xE0\x12\x34\x64\x96\x18\x2B\x52\x50\x57\x7D\x89\x31\x98\xBC\x43\xB0\xE9\x01\xAD\x8B\x38\xB4\xDA\x8E\xE4\x57\x5A\xFF\x73\x13\xAD\xCE\xAE\xD8\xF0\xF7\xD8\x40\x22\x9D\x3A\x1B\x61\xE9\x1C\xE2\x63\x53\x84\x50\x70\xAF\x2B\x34\x54\xEC\x70\xDA\x65\x13\x45\x74\x4E\xBC\x18\xEB\x9F\x85\x3E\xAE\x88\x8F\x15\x49\x28\x8E\x94\x9D\x43\x6A\xAF\x55\xD9\xE4\xDA\x37\x43\x0B\x4B\xEA\xA0\x00\x46\x98\x52\x73\xB7\xFA\xAA\x00\x8D\x20\x01\x61\x70\x2D\x0F\xCA\x10\x1A\xE4\x5F\xAA\x81\xC0\xAE\x2B\xF9\xA5\x9C\x09\xA1\xEF\xCF\x6B\xCA\x3C\x3C\xBD\xA1\xBF\x1C\x53\xBD\xAB\x6F\x63\xD7\xE4\x3E\xA1\x32\xD6\x74\xC8\x34\x9F\x56\x80\x36\x90\xFE\xF1\x23\xAD\x5F\xAC\xCB\xB8\xE9\x5E\x98\x11\xEF\x76\x69\xD3\xA3\x93\xBE\x6C\xB8\xC8\x3E\xE9\x66\x6C\xAA\xA3\x32\xC2\x44\xD2\xED\xAA\xA0\xBE\x32\x04\x3D\x0A\x30\xAE\xD7\x84\x7C\xFD\x42\x68\xAD\x54\x85\x2C\x4A\x8C\xE7\xF6\xDA\x5B\xBB\x22\x0C\x3B\x28\x37\x6A\x9E\xE5\x04\xF5\x48\xC7\xF8\x41\xB9\xF2\xE0\xF7\x8D\x47\x10\x0F\x01\x77\x2D\x8D\x21\xDA\x0E\xEB\x8D\xB1\x67\x57\x03\x16\xD6\x53\xE9\x6F\x59\x13\xAC\x56\x85\xB9\xDD\x41\xF0\xC3\xD5\xC7\xF5\xB6\x41\xE5\xA1\x50\xAA\x71\x67\x87\x50\xC2\x29\x63\x05\xA6\x3A\x83\xF6\x00\xDC\x6E\xD0\xCA\x03\x47\x8E\xB0\x7C\x71\x09\x99\x1E\x7A\x57\x23\x7E\xAC\x57\x51\x40\x45\xD0\xF4\xE5\x36\x85\x4F\x8C\x50\x81\x09\x57\x42\x56\xB0\x3E\xC0\x94\x88\x85\xC7\x60\xF4\x0E\xEE\xDE\x1E\x8C\xD1\x5A\x59\x83\x38\xE0\xC7\x71\x0C\x29\x4A\x6E\x4A\xCD\xEB\x2A\xB8\x44\x5C\x90\x5B\x97\xF1\x07\x7C\xB1\xD3\x1D\x34\x6E\x69\x52\x88\xFF\x22\x1A\x36\x3D\x5F\xF6\x87\xAA\x35\x30\x59\x31\x8C\x88\x89\x41\x2C\x21\x89\x41\xCD\x4F\x23\x51\xB7\x18\x36\xE5\xC9\xC3\x94\xB2\x1A\x84\xBA\xE4\x48\xA0\xC7\x56\x48\x3E\xC4\x8A\x90\x68\xDB\xB8\x01\x78\x6B\x3B\xE1\x21\x86\xAA\xF6\x3F\xE0\x14\x60\xCD\xAA\xBD\xF8\xFE\xDD\x12\x59\x80\xB0\x20\xC8\xAA\x79\x14\x96\xE3\x7C\x3C\xB5\xEE\x29\xEB\xE8\xD6\x2B\x40\xA9\xAD\xCC\x16\xDE\x7A\x64\xF3\x04\xC8\x46\xB9\xD6\xF3\xC7\xEA\xA4\x80\x96\xF4\xFF\xBD\xD4\x29\x81\xDA\x37\xF4\x74\x01\x9D\xE1\x2C\x75\xCD\xF1\x0B\xEB\xB8\x63\x49\xE9\x5C\xAE\x48\x19\x34\x56\xDE\xAB\xCE\x5F\xAA\xBD\x54\x76\x60\x19\xAC\x86\xDE\xFF\x63\xA4\xF5\x02\x18\x94\x25\x29\xCA\x30\xCC\xA3\x9A\x69\xEF\xF8\x1B\x92\x0D\x46\x2D\x4A\x39\x0A\xB8\xF8\xD6\xFC\x16\x30\x58\x2D\x15\x04\x40\x27\x38\x19\x1F\x5A\x4F\x0D\x3D\x29\x89\x90\x1F\x4F\x58\x3A\xC5\x2E\x05\x12\x28\x71\x0F\x07\xB2\xD2\x72\x2D\xAE\xE8\x0E\xF0\x5B\x28\xDB\x66\xC2\x1A\x90\xC3\x70\xF2\xAF\x27\x44\x86\x3E\x45\xFA\x4D\x63\x9A\xF4\xAA\xDB\x09\xB1\xF6\xB5\x60\xBB\x1E\xFA\x57\x1B\x6F\x95\xD7\x87\x2B\x0C\xE3\x6C\x71\x4D\xB8\xDA\xA3\xF2\xF8\x3F\x40\xB1\x5C\xF3\x62\x12\x01\x76\xAA\xC8\x0E\x25\x18\x46\x9C\xDF\xD2\x32\x8F\x28\x2D\x09\xC1\x5B\x9E\x6A\x5B\xEF\x40\xDB\x93\x8F\xF2\xE7\x0D\x41\x9F\xB5\xF8\x57\x8E\x1C\x2E\xD3\x94\x0F\x1F\x43\x7D\x24\xF3\x5A\x9D\x96\xEC\xC8\x1F\x85\x39\x89\x14\x56\xF6\x5C\x13\x2A\xBD\xD4\x98\xB0\xA0\xC7\x93\x7A\xFC\xF6\x43\xC1\x4C\x30\x6D\x91\x3F\x88\x1A\xBD\x38\x41\x2C\x8A\x66\xBC\x7F\x64\x26\xF8\xF8\xBD\xAE\xB5\xD9\x60\xB8\xFE\x70\xE6\xFF\x15\x0E\x34\x1C\x94\x0A\x2F\x69\xB1\x58\x2D\xC6\xFF\x10\x9A\xEB\xEF\x41\x91\x1C\xA5\xE8\xED\x04\x59\xCA\xB9\x39\x50\x5B\x6A\x7D\x20\x94\x88\xEC\x2B\x85\x95\x7D\xBB\x27\x65\xE7\x6C\xDA\xF0\x6C\xCB\x2F\x91\x20\xAD\x32\xB1\x68\xBB\xD1\x0D\x6E\x9D\x6F\xBB\x14\xF4\xEE\xA0\x76\xAC\x17\xEC\xE1\x3C\xDB\x9D\xD3\x88\x1D\x39\xD1\x28\xD4\x93\x4A\xDA\x84\xAE\x50\x92\x83\x23\x93\xF7\x9D\xA8\xCB\xA9\x92\xF8\x97\x9F\x37\x3A\x47\x9C\xEA\x10\x5E\x60\xD7\xB6\xF0\xB7\xCA\x6B\x2D\xBB\xC4\xDD\x52\x50\x6E\xD4\x9E\xE7\x7B\x56\x2A\xAC\x19\x6B\x98\x33\x1F\x5C\x90\xEC\xC9\x68\x78\x12\xF8\x9C\x48\xC2\x89\x72\x26\x73\xCD\x66\x5D\x37\xCE\x91\x5E\x2D\xD4\x69\xFF\xF0\xA2\x9D\x0F\x38\x6D\xD1\xDC\x63\x62\x5F\x2D\x0B\xC3\xAB\xFE\x9B\x2D\xC3\xB1\xD7\x03\xDF\x3A\x66\x9F\xC1\x4A\x0E\x9D\xC1\x08\x3F\x41\x1A\x5F\x64\xD2\x87\xBB\x11\x8F\x4A\x99\xF3\xB1\x03\x3A\x6F\x9D\x65\xD2\xB8\x14\xA5\x7C\xD2\x72\x25\xB7\xE5\xFC\x10\x39\x50\xF5\xEB\x4F\xF3\xCF\x5B\x8B\x39\xA7\x55\xE3\x9C\xBD\x64\x38\x2E\x46\x88\xE8\x4F\x88\x0A\x72\x4A\xED\xC5\x26\x6B\x6B\x22\x40\xFA\x7A\xC5\x49\x8A\x39\x10\xE1\x1F\xFD\x43\xD9\x78\xCD\xAD\x15\x49\x29\xD2\x89\xF9\x86\xCC\x35\x91\xF4\xAD\xF0\xA2\x65\x35\x98\x54\x04\xBD\xEE\x64\x1D\xA1\x06\xDA\x04\xD0\xB3\x72\xDF\x79\x08\xDF\x8B\x5B\x6C\x8C\xBC\x50\x33\x19\x6A\x4A\x7B\x8E\xB8\xE4\xC2\x05\xE1\x51\xA9\xA6\x0E\x35\x56\xD8\x3A\x85\xC8\xE3\x86\x7F\x3C\x3F\x9B\x16\xB8\x55\xFD\x1B\x73\x3B\x31\xF5\x47\x4C\xBA\x89\xA0\xC6\xC8\xC2\x45\xBB\xB8\x51\x34\xD9\x70\x80\xEC\xAB\x2B\x4A\x59\x7A\x07\xB0\x1E\xAF\x85\xEA\xC2\xDE\x36\xAC\x99\xCF\xDE\x43\xB4\x9B\xF0\xCA\x76\xF4\x5A\xDB\xF7\x44\xB1\x94\x82\x50\xCB\x20\xF9\xE4\x71\xB3\x1D\xC3\xD0\xBA\x99\x07\xA6\xC4\x44\x4E\x65\xF4\x34\xAD\x90\xAC\x24\xAD\x41\x74\x61\xA3\xF3\xBD\x19\x97\x3E\x2F\xE5\x36\x25\xED\x3E\xC6\x1D\x62\x71\x2B\x6B\x2E\xF2\xA3\x90\x52\x9F\x94\x33\xE8\x3D\xBF\xFD\x57\x3B\x01\x37\x70\x42\x17\xAE\x5D\xB5\x3C\x9B\x42\x09\xE5\xCB\xE4\x74\x74\x13\xE4\xAF\x35\x99\x26\x95\x64\x04\x85\xB7\x21\xF6\x3B\x7D\xBC\x17\x87\x9D\x00\x81\x6F\x23\xDB\x12\xCA\x69\xF9\xB5\xF9\xFB\x7A\x7A\x4B\xFC\x99\x2F\x52\x6C\x84\xC9\x26\xAB\x9E\x36\x72\x3D\x2A\xE7\x6F\x1E\xB8\x1C\x20\x01\xD1\x5B\xD2\xAF\x8F\x7C\xF1\x35\x11\x38\x4F\x8A\x3D\x5C\xE8\x5D\xFA\xFA\x1B\x1C\xBA\x16\xC7\x7A\x7F\xD7\x07\x84\x3F\x1D\xD2\x54\x3A\x73\x08\xF5\xA9\x19\xB5\x37\xDA\x0E\x15\x86\xDA\xDA\xF1\x6E\x8C\xD5\x2F\x92\x48\xDD\x1C\xA7\xB8\x6C\xB0\x19\x69\xF9\x1F\xC4\x89\x21\x0C\x9D\x0E\xB0\x08\x66\x18\xE5\x66\x06\xBB\xE1\xF9\x2B\x2D\x90\x83\xA6\x78\x92\x09\xE7\x3B\xE4\xDD\xCE\x6A\x9E\x5F\x3D\x8A\xD6\x16\xBA\xA2\x38\xA4\x5C\x2D\xDE\x08\xC3\xD2\xF6\xCD\x58\x8C\x83\x87\x9A\xCB\xA8\x5B\x6F\x0A\xF6\xE5\xC3\x3C\x94\x4D\x1C\xDD\x7D\xA7\xFA\xDE\xC8\x88\xBC\x62\x72\x1E\xAB\x9E\xBB\x49\x89\xE2\x93\x9D\x5D\xE2\x51\xB9\x2C\xFC\xBE\x79\xFF\xB1\x5E\xB4\x01\x0C\x66\x3D\xAD\x08\x83\x87\x59\xF7\x24\x31\x7E\x0B\x35\x8A\xBD\x3D\x04\x6D\x92\xC5\x91\x3C\x08\xD7\xE9\x0D\x1D\xBF\x7F\xE2\x7D\xD6\xAC\xEE\x0E\x14\xA8\x56\xD0\xB0\x39\xC1\xD4\xE5\x1E\x56\xDB\xFA\xE8\x82\xCD\x8E\x77\x6A\x17\xA5\x05\x3C\x8F\xBD\x87\x85\xD5\xE5\x5E\x17\x29\xBC\xA5\xDD\xE6\x14\x6D\x5D\x3F\x11\x2A\x6A\x7C\xF2\x00\x83\xC0\x0B\xCC\xC7\x3B\xCB\x51\xCB\x89\xC8\x29\x30\xE8\xE7\x65\x99\x33\x75\xE5\x48\xCF\x94\x69\x86\x11\x97\x1E\x42\x0C\x84\xAE\x11\xA1\xA3\x6B\x1F\x3C\xF1\xCF\x36\xEB\x40\x94\x95\x57\x98\x2C\xDE\x21\x32\xFA\x61\xC5\x03\xE6\x60\x1C\x5D\xFB\x83\x29\x0F\x2E\xCD\x97\xF4\x28\x04\x81\x0F\xC8\x01\xE6\x80\x10\x3D\x60\x50\x3E\xEF\xE8\x4A\x6C\xCA\x03\xD1\x92\xD7\x5C\xD4\x16\xC0\x9C\xC9\x54\x00\xC4\xD6\x9D\xDD\x36\xBA\x5B\xA5\x9E\xD5\x6E\xD2\x11\x9F\x1A\x30\x4F\xE1\x51\x3E\xB7\xA3\x52\x6F\x95\x72\xDD\xB8\xA1\x82\x68\x53\x83\xE2\xFF\xD5\xAF\x9C\x6C\x98\xA9\xCF\x76\xFD\x1B\x3E\xAF\x8B\xDA\x0C\xD7\xEF\x06\x07\x62\xB8\x82\xB4\xAC\xC5\x28\x56\xD7\xB8\x31\x66\x0E\x6E\x4C\xFA\xBD\x19\x97\xB6\xE5\x1B\x40\x08\x0E\xCC\x36\xF2\xAB\x75\x89\x8B\x96\x25\x86\x89\x51\xE8\xFF\xCC\x65\x24\xB2\x3E\x90\xC9\x41\xD3\x44\x67\x05\x73\x15\x78\xCA\xFD\x7A\x9B\xD4\xDB\x27\xC4\x5C\x74\x6B\xAF\x7F\x86\xD2\x15\x54\x2E\x82\x91\xF6\xE6\x22\x03\xA5\x9A\xAC\x90\x4C\xE9\x0B\x9A\xDF\x21\xAF\x38\x99\xB1\x38\x56\x43\x59\xF8\x50\x98\x51\x0B\xB0\x38\xCA\xEB\xC5\x7D\xA0\xA8\x2B\x1C\x38\x06\x44\x4C\x39\xA0\x2B\xA7\x10\xF0\xEE\xDA\x1F\x83\xD2\x30\x51\xF4\x0B\xC8\xF7\x26\x91\xD5\xBC\xBD\xE8\xE7\xF1\x32\xF3\x2D\xA0\xD2\x96\x02\x94\x26\xA9\x7D\x36\x9E\x27\x85\x62\x4E\x5C\xD4\x8A\x79\x3A\x14\x45\x4B\x9E\xB3\x28\x4C\x1E\x7A\x97\x7C\xDB\x90\x67\x2F\xC9\xDB\x48\xDF\x81\x91\xCE\x48\x3C\x4A\xDD\x2B\x42\xAF\xAE\x35\x93\xEF\x17\x7E\x3D\xED\xAB\x93\xF4\x4F\xDD\x14\xDF\x0B\xBA\x06\xFD\xF9\x1C\xFE\xBE\x31\x00\x89\xF4\x06\xEA\x54\x1D\xEB\x6F\x40\x9B\x73\x3B\x7A\x40\x2A\xB1\x98\xE5\x6F\xA7\x5A\xB0\x47\xC5\xD0\xAB\x49\x03\xD5\x6D\xEA\xC7\x1D\x94\x77\x48\x9F\x89\x2C\xFE\x60\xA4\xB0\xC5\xCA\xAB\xC7\x08\x93\x70\x12\x5A\x18\x2B\xB0\x27\xC1\x8C\x3C\x77\xA4\x70\x5F\x79\xE2\x30\xFE\x2A\xBE\xF2\xDA\x77\x52\xFE\x65\x47\xB0\x76\x33\xFA\x9B\x0C\xD3\x31\x63\xF1\x21\x19\xFB\x19\x81\xF3\x1E\xAB\x66\x7F\x7A\x46\x5E\x4D\x28\x18\x4B\xD6\x9A\x37\x2C\x34\x60\xCE\x15\xB5\x08\x24\xEF\x75\x92\x54\xE9\xD0\xDE\x9A\x93\xD4\x96\xB5\x05\x9A\x7D\x13\xCB\x18\xEA\x76\x95\x40\x1E\x98\x59\x42\x1E\xFC\xAE\x27\xD7\xF9\xAA\x3A\x55\x5A\x38\x28\x95\xB7\x3E\x6D\xAE\xF9\xA4\xC1\xF7\x03\x4A\xB1\x56\x1E\x9E\x7F\x98\xB5\xD2\x16\x44\x3B\x48\x68\x2C\xA4\x58\x16\xF2\xC7\xC4\xE5\x71\x4C\x23\xF4\x82\x05\xE9\xBD\x4F\x46\x1E\x6B\xD4\x84\xFD\x36\xBE\xC4\x55\x81\xC6\xA1\x0D\x22\x11\x1A\xA0\x52\x2B\x18\x44\x64\xBF\x8E\x0C\x5A\xB3\x9B\x74\x40\xD4\x2B\x12\xA0\xAE\x49\x90\x22\x52\xEF\x27\x93\xD8\xCB\x84\x50\x2B\x06\x02\x9A\x6A\xD0\x1E\x7F\xDC\x3F\xD0\xDD\x2C\xB1\x52\xEC\x21\x2B\x09\x18\xA0\xFF\x1B\x6B\x67\xBE\x36\xE1\xA3\x7A\x1C\x4F\x56\x80\xAC\xB0\x54\xBF\xD2\x7F\x57\x18\x4B\x02\xBF\xA2\xA0\xD3\x0B\xA7\xA8\xB2\xF7\x82\x18\x21\x9C\xB1\xA2\x25\x35\x5D\x40\xCA\x94\x3D\xA6\xF3\xCA\x88\x25\x23\xBA\xA0\xA9\xF9\x7A\xF3\xE8\x6E\x59\x12\x55\x69\xA5\xE6\x45\x2F\x5B\x5C\xB6\xAA\x77\x1C\x7E\x60\x2A\xBE\x20\x99\xD1\xE9\x61\x01\xBF\xF0\xF2\xA0\x33\x6B\xA7\xCE\x24\xBF\xE4\x39\xF2\x74\xD2\x3D\x3B\xCF\xBF\x61\x75\x9D\xE6\xB3\xFA\x9A\xFE\xA6\x0A\xD8\xAB\x39\x83\x60\x75\x55\xFF\x8C\x86\x0C\xC8\x92\xBC\x85\x7D\xCC\xCE\xF9\xF7\x74\x0F\x05\x86\x23\x78\xB7\x82\xAA\x84\x50\xE6\x01\xBE\x3C\x58\x1A\x20\x8A\x98\x48\xB5\x68\xDF\x6D\x90\xC4\xAF\x71\x3A\x60\x44\xB2\x03\x9F\x96\x74\xFE\x23\x2A\x60\xAC\xB2\x5E\x23\x79\x2C\x20\xC6\x8D\x84\x99\x90\x82\x91\xF7\x22\xD9\xDD\x70\xD1\xF2\xEA\x8C\x39\x8F\x76\x74\x9F\xD3\x12\x1D\x58\xA6\x3D\x0A\x23\x6E\xF8\xBC\x8E\x6C\x39\x22\x29\x56\xEF\xDB\xD7\x8B\x0B\x0A\x7D\xAD\xBB\x9B\x24\xB9\xAF\x56\x76\x3F\x4E\x60\xD2\xD0\xFB\x8B\x52\x34\x2A\x4E\x03\x00\xC3\x2D\x04\x74\xF6\x64\xD2\x60\x2D\x36\x42\x05\x0C\xD5\x70\x17\x6E\x1A\xC6\x5B\x5C\x69\xB6\x20\x71\x0F\x85\x36\xF0\x28\xBD\x85\x7E\xA8\x77\xD5\x67\xDB\x84\x06\xCC\x04\x57\xCA\x69\x3E\x53\x77\xFD\x30\xC9\x4E\x72\xCD\x00\x94\x92\xE0\xA1\xD0\x70\xFD\x68\xD1\x23\x6A\x64\x2C\x07\x79\xE2\xDF\x65\x05\x2D\x48\xE3\x8B\x1F\x7E\x39\x6E\xDE\xCC\x58\xA1\xD2\x51\x00\x75\xF7\x92\x0C\x9D\x33\x2D\xAB\xBE\x5C\x71\x23\x9D\x70\x92\xE0\x2D\x23\xB8\x70\x2A\x1E\x6A\x26\x86\x46\x27\xFD\x43\x09\xA8\x5E\x7B\x5D\xFF\x15\x68\x65\xA1\xBE\xD4\x9B\x36\x07\x6E\x98\x91\x19\xB4\x6A\x82\xB0\x16\x95\x93\x23\x1E\xDB\xB1\x12\xBD\x69\x78\x61\xB1\x89\x56\x36\xF6\x63\xD9\x5B\xC5\x37\xFB\x49\x7F\xF1\x3A\x3F\xF7\x6B\xAF\xE5\x38\x4F\x05\x09\xE8\x9A\x1E\xD7\x36\x7E\xF0\x82\xA8\xB8\x26\x50\x5A\x08\x21\x3A\xF9\xE5\x2A\x81\x10\x4A\x8F\x34\x1B\xF3\x46\x7A\xFF\xCD\x9C\x7C\x8B\x19\xA3\xC2\x28\xAC\x76\xC8\x5D\x56\xD2\x40\x56\x89\x51\x0E\xFF\x0E\x22\xC7\x4F\x3C\xE6\xC6\x73\x42\xB4\x47\x1D\x94\xEE\x34\x84\x04\x5C\xF7\x47\x3E\x4D\x63\x14\x7E\x5E\x6C\x42\x5E\x7B\xEE\xEA\xBA\xF6\x91\xAF\x54\x48\x88\x74\x09\xF1\x11\x50\xBD\x99\x6E\x40\xF1\x1E\xCA\x4B\x48\xA3\x5E\x56\xCF\xC2\x69\x6D\x87\x81\xF6\x5A\x5E\x37\xCE\x77\x2F\x5E\x6A\xB7\x0D\x54\x28\xA1\x24\x41\xE9\x5C\x0E\x1A\xFA\xC3\x01\x99\x09\x33\xB4\x15\x4F\x7C\xB6\x71\xEC\x25\x08\xAB\x90\xB3\x8D\xE6\x90\x34\xC6\x36\x32\x9B\xEF\x45\x46\xED\x3F\xF6\xF0\x4C\x55\x22\x31\x37\xCC\xF1\x41\xBF\xC8\x7B\x88\x7D\x57\x81\xE1\xDE\xC0\x15\xD8\x79\x83\x61\xB8\x15\x7C\x07\xE2\x10\x86\x48\xB5\xE7\x91\x7D\x9D\xEB\xA4\xE3\xD7\xD3\x0A\xDE\xC6\x48\x49\x00\x6F\xB7\x47\xDF\x1B\xE1\x93\xFE\x6E\x8E\x71\x0A\xC8\x0F\x57\x39\x89\x54\xBF\x01\xAD\x25\x06\xE6\xAF\xE0\x59\x24\x57\x1F\xBA\xB2\x31\xEC\x95\xE9\x8D\xCA\xF0\x66\x99\xFD\x02\x61\x73\xEB\x90\x3F\x6F\x6D\x80\xF3\x2E\xB6\xE9\x9A\x68\x7A\x33\x3B\x1A\xC2\x20\x4D\xBB\x25\x92\x3C\xB9\x07\x17\xDE\x5E\xB8\x7D\x87\x96\x2A\xAA\x55\x92\xD8\x03\x4D\xBE\x57\x7F\xBF\x04\x11\x6C\xE0\xB0\xED\x8B\xD1\x4B\x61\xC2\x85\x3C\xE6\x98\xC0\x26\x37\xED\x2C\x59\xFE\x85\xCF\xD0\xF7\xE2\x03\xA6\x07\x98\x4C\x65\x70\x75\x46\x7C\x3A\xD4\x8B\x27\xDF\x13\x32\x12\x9E\x15\xE9\x06\x61\x8C\xED\x9E\xC4\xBE\x58\x1C\xB7\x1D\x61\x6D\x91\x1D\x25\xD6\x0C\xDD\x4C\x3C\xD0\x00\x20\x6E\x41\x36\x5B\xFE\x4C\x8A\xAC\x16\x7A\x12\xEB\xFA\xB3\x82\xC8\x9C\x26\x6C\x85\x9C\x33\x8E\x09\xC2\x3F\xDD\x80\xCA\x9B\x9C\x49\xA1\x49\xB1\x5C\x1E\x4C\x02\x7C\x51\xC5\xCC\x31\x8B\x9F\x96\xF4\x7D\x1D\x0A\x5F\xDC\xF7\x00\x92\x9C\x95\x01\x02\x5F\xF2\xFA\x93\x6A\x5F\x49\x34\x79\xFD\x8F\xBC\x3E\x91\x53\x7C\xF2\x20\x00\xF8\x8A\xCF\x3A\x53\x07\x93\x61\x68\x1A\x9F\x2C\x41\x56\xAC\x26\x43\x20\x80\x3A\xBB\xC5\xC1\xAA\x1E\x38\x0F\x21\x10\x99\x6F\x04\x6A\x16\xE2\xD6\xA9\xC8\x04\xDD\x48\xA0\x40\x8C\x79\x72\x94\xC2\xD4\x5A\xE7\x5E\x05\x4B\xDA\xD4\x9F\x28\x78\x89\xF1\xA2\x40\xC9\x57\x99\x7B\x04\xF2\x5B\x76\xAF\x58\xD6\x29\x0C\x5C\x90\xAC\xC3\xF5\x19\x14\x12\x95\x0A\x46\x84\x3F\xDA\x2A\xE1\x23\xE0\xDE\xEB\x59\x27\xD2\x1A\x6A\xF6\x4C\x40\xC4\x43\x5D\x6D\xB2\x24\x44\xF3\xF5\x92\x9D\x49\x52\x23\xE1\x2E\x87\xC3\x70\x87\xFE\x15\xD5\xF2\x75\x89\xCB\xBE\x53\x3F\xD7\xB2\xD4\xE8\xA4\xA3\x49\x5B\xC7\x10\x28\xFA\x37\x08\x0E\x2E\x94\x66\x3C\x71\x77\x6B\x7E\x72\x75\xBE\x3A\xD0\x49\xD4\xE7\x30\xFD\xB7\xD3\xF1\x58\x2C\x13\x19\x8F\x1C\xC7\x26\x60\x28\x01\x9A\xBC\xDD\x23\x7B\x2C\xAE\xBB\x82\xC0\xFC\xF6\x68\x42\xF6\xCA\x3E\x83\xF6\x7B\x6B\x17\x3D\x2E\x21\x45\xF6\x64\xF4\x23\x27\x11\x02\x55\x47\x00\x5D\x8C\x6C\xC1\x91\x8E\x69\xEB\xB9\xB1\x59\xC9\xFE\x1D\xE9\xC9\x6A\xF5\x05\xE6\x75\x39\xFE\xB3\x33\x0C\x23\xFF\xCF\xAD\x34\xB9\xF2\xD6\xE9\x99\x2F\x13\xD5\xA7\xFA\x98\x5C\xEE\x29\x17\x01\x9E\x15\xC3\x49\x31\x3C\xD6\x2D\xCF\xF4\x24\x88\x94\xF1\xDA\x85\x90\x4D\xE7\xE8\x7F\x1A\x74\x23\x3B\x46\x38\x84\xE9\x55\x00\x8D\x8B\xF7\xBA\xD3\xC3\xA2\xDF\x2F\xBB\x72\xA0\x62\x7F\x7C\x9C\xD4\xBA\xFE\xC7\xD8\x4E\xF9\x55\x15\x49\x9A\x46\x4E\x2B\x5B\x66\xF0\xE2\xEC\x9A\x72\x7B\xA2\xC1\xF7\x9A\x60\xFD\x56\x45\xB8\xBA\xDF\x28\xF6\xCC\xC4\x91\x12\x23\x52\xD9\xB3\x0E\xCA\x7A\x8C\xAB\x0F\x95\x8B\x9C\x98\x52\x15\x29\xB2\x6A\x90\x67\x0E\x56\x9B\xF6\xE7\xD6\x01\x97\x45\x87\x67\x75\xAA\x38\xED\x03\xC4\x33\x88\xC1\x00\xB7\xD0\xFD\x79\xCD\x2B\x7D\xB6\x41\x3C\x44\xA5\x55\x38\xC5\x6C\xBC\x16\xD8\x12\xDB\xFD\x38\x5B\xD4\x0E\x07\x31\xCD\x89\x95\x6D\xA3\x77\x3B\x49\xBE\xEB\x64\x34\x57\x06\xBE\x2C\x51\xBC\x65\xB6\x50\xBC\x6F\x3D\x95\xA0\x8E\x7B\x9A\xC1\x16\x57\x45\xE4\x3E\x64\xC6\xDB\x6D\xD4\x99\xA1\x95\x6E\x15\xD0\x5B\x6B\x94\x65\xAC\x8B\x23\xD7\x3F\xB8\xDA\x59\xFA\x24\x6F\x55\x72\x0F\x50\xEE\x41\xF1\xFA\x14\x1E\xFE\xB3\xB1\x1E\xAF\x23\x67\xCF\xAF\xB5\xB0\x21\x3C\x5F\x07\x84\x0C\xD1\x0A\xD9\x62\x4D\x96\xD6\xC0\xC8\x8B\xF4\x8C\xBB\x39\x1A\x61\x81\xF8\x63\x61\xE1\x30\x6D\x17\xB3\xBB\xAE\x1D\x80\xE7\xF0\xC1\x70\x31\xA6\x07\x6A\x4E\xD3\x2E\x16\x58\x49\x7D\x8F\x7B\xC2\xAF\xE4\x0B\xEC\xA3\x0F\x04\x0D\x9F\xC0\x65\xCE\xB0\x2C\x57\xE4\x04\x7F\x2D\x41\xA6\x07\x90\x2C\x51\x87\x36\x0C\xBA\xEF\x03\xC5\x5B\x00\xDD\xA7\x73\x1F\x6A\x93\x02\xBC\x00\x54\xC3\x7D\x04\xCC\xC0\xEB\xB4\x37\xBF\xBF\x9D\xC8\xC0\x7F\xA4\xCF\xFC\x31\x65\xFD\xDC\xD2\x59\xFD\x2B\xA4\xCB\xE1\x4B\xD6\x7E\x3A\x8D\x0E\xF5\xD2\xF2\xE3\x52\x4B\xEA\x58\x9D\x80\x00\x98\x09\xAA\x6E\x78\xD7\xB0\x4B\x04\x08\x2D\x0A\xAE\xAD\x4B\x73\x55\x93\x4F\x57\x94\x41\xA5\xD2\xC3\x15\x84\xF3\xF2\xE9\x17\x31\xDB\xA2\x48\x7E\x62\x7B\x76\xD3\x45\xB2\x53\x32\x9E\x71\x84\x92\x6E\x88\x13\x68\xBA\x46\x92\x5F\x95\xFB\x3A\xBA\x72\x3D\x2E\x70\xE9\xDD\xE0\x01\x5E\xEB\x81\x3F\x90\xC1\xB6\x2E\x44\x3F\x6B\x71\xB7\x66\x98\x52\xB7\xA2\xA4\xB4\xCA\x84\x3B\x40\xCB\x89\xC8\x27\x6E\x52\x6D\x98\xBC\x22\x4A\xC4\xA6\x83\x0B\x9E\x6A\xB9\x53\xCE\x75\x42\x7B\xF6\x71\x31\xEA\xE2\xD3\x89\x5A\xCB\x55\xEF\x0F\x0C\x19\x84\x92\x2C\x54\x49\xF2\xBF\x69\xC9\xC2\x35\xED\x15\x79\x96\x28\x67\xA3\x0E\xCB\x98\xE3\xEC\x39\x30\x2F\x5E\x80\xF9\xE4\xEE\xAB\xE9\x9F\x3D\x9F\x05\x01\x1B\xAD\xED\x24\x8A\xCD\x91\x92\x7B\x2A\x2B\xA1\x42\x8E\x99\x2D\xDF\x3F\xD8\xEC\x0B\x1C\x7F\x9A\x3E\xA4\x3E\x3A\x23\x73\xB4\x7F\xE6\x0F\xF2\x35\x23\xB9\x78\xA1\x67\x3F\xA5\xA1\x99\x44\x2C\x63\x2C\x8C\x2C\xB6\x49\x4C\x21\x23\x38\x2C\x5A\xDB\x91\x51\x96\xEA\xA5\xF6\xC1\x8A\xA9\xB4\x2A\xEA\x19\x63\x41\xC3\xF7\xBA\x06\x1A\xAE\x42\xA1\xEF\xB8\x13\x9C\xF9\xE1\x84\x76\x21\xB4\x04\x8F\x3E\x00\x40\xA0\xFA\x26\x79\x6C\x4C\x23\x5A\x73\x83\x41\x86\xAC\x4C\xE9\x34\xB0\xE5\x13\x99\xB3\x87\x72\x02\x82\xAA\xAD\xE3\x9A\xFB\xF5\x8C\xEC\xB9\xCF\xAA\x19\x04\x26\x0F\x5C\x09\x4A\x12\x97\x01\x14\xD5\x8F\xEB\x76\xD0\xFC\xBE\xE5\xC8\x66\xEB\xF7\x5C\xA0\x39\x4A\xF3\xAC\xC0\x65\x44\xA2\xE8\x6D\x2B\x64\x9C\xC5\xB5\x0D\x7E\x43\x54\x63\x81\x0C\x8F\x60\x32\x74\x2E\x33\x5E\x89\x1B\xBC\x58\xD5\xE1\xB1\x6D\xF5\x7B\xC8\xE8\x27\xEB\xB3\x5E\x61\x7A\xC4\xAE\xFD\x08\xE4\x91\x03\x64\xB3\xE9\x11\x5F\x93\xED\xA7\xB8\xA2\x52\x05\xE8\x14\x51\x6B\x05\x8E\xBD\x0E\x22\x8E\x66\x0F\xFC\x6A\xF9\x38\x0C\xDF\x23\x46\x9D\xA5\x11\x69\xA8\xAC\x88\x2C\x55\xFA\x1E\xFB\x97\x51\x58\x58\xAF\xBE\xB7\x39\x96\x30\xC6\x30\x42\xD9\x31\x83\xF0\x4E\x13\x42\xB1\xAC\xD6\xD9\x71\x52\x1B\xE8\xDB\xD6\xE3\xA0\x4B\xA1\x1C\xC8\xD2\xB3\x6C\x09\xA1\xAC\x75\xD6\xB0\x9D\x2D\xEF\x27\xB7\x0D\x7D\x35\x29\xF7\x84\x9F\xA6\xFD\x63\xCF\xE7\xB0\x09\x4F\xA6\x56\x1E\x47\xAA\x46\xB7\xED\x6F\x2C\xB2\x24\x76\x71\xC7\x4D\xDC\x63\x5D\x2B\x24\x79\x28\x36\xD7\x5A\x40\xF7\x6F\xA7\x7D\xDD\xDC\xFC\x1F\x96\x8D\xB2\xC0\xC1\xC9\xDF\x42\x6A\xFA\x08\x1E\x25\xA1\xE5\x04\xC5\x35\x48\x00\xB8\x42\x57\x44\x76\xB9\xDE\x09\xEB\xF4\xCB\x85\x56\xF7\x85\xCF\xF9\xB3\x41\x98\x76\x5A\x66\xC4\xDC\x94\x25\x8A\xC4\x19\x7A\x29\x41\x85\x77\x2D\xD0\x77\x4A\x0C\x31\x0E\x68\x8C\x09\x22\xB4\x09\x14\x03\x41\xC0\xE8\x4E\xC3\x9F\x40\x04\x6A\xA9\xBD\x28\xAB\xEE\xD2\xDD\x10\x83\xCC\xB5\xE4\x35\x4E\x79\xDD\x9A\xDA\x4E\x96\x2C\x5C\xC1\xED\x2E\x53\xF6\x01\x04\x5F\xE0\xDD\x2C\x3A\xF9\xE1\xA4\x66\xA4\xCB\x41\x79\x26\x04\x58\x8E\x54\x4A\xB3\xFF\x17\x7D\xBB\x4A\x1C\xAB\x15\xFE\xB7\xFE\xFE\x86\xC6\x79\xE7\xD0\x31\x01\x38\x80\xAE\xA3\xB3\x14\xA9\x19\x5D\x5C\x71\xA8\x32\x40\x80\x71\x15\x5D\x4B\x6F\x35\xC7\xC5\xE1\x3E\x28\x8E\x44\x96\x3A\x9F'
        return pkt

#'hdr.ipv4.dst_addr', 0xB0BD4743),
#'hdr.ipv4.protocol', 0x11),
#'hdr.ipv4.src_addr', 0x8E5A4773),
#'hdr.path_t.pathBF', 0x12345678),
#'meta.dstp', 0x2329),
#'meta.srcp', 0x8A75),
    def pkt6dirty(self):
        pkt = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x8E\x5A\x47\x73\xB0\xBD\x47\x43\x8A\x75\x23\x29\x00\x00\x00\x00\x12\x34\x56\x78\x00\x00\x00\x00\x9D\x8C\x6D\x69\xD5\xE5\xE6\x08\x18\xF2\xEE\x93\xB8\xF3\xEB\x13\x8E\xA0\xC9\x78\x6D\xF7\x82\x43\x1E\xE0\x63\x1D\xB0\x59\x56\x00\xFC\x6D\x2F\xBD\x12\xE9\x77\x38\x73\x74\xA5\x79\xA0\xDF\x63\x3B\xB1\xED\x13\xA6\xFD\x60\xEA\x80\xA2\x39\x8E\xD1\x6E\x01\x43\xE8\x7F\xB8\x86\x4C\x0C\xC7\x93\xD1\xDF\x56\xA2\x44\xB7\x26\x13\x08\xEE\x09\x9A\x1B\x45\x0E\x15\x08\x52\xF1\xC7\x22\xC6\x6E\x87\x66\x04\x42\x6E\xD5\x6E\x5E\x7C\x64\x8B\x99\x92\x95\xD1\xE9\xF6\x96\x75\xDD\x3C\x62\xA2\x3B\x5E\x60\xE3\xD2\x0B\xF5\x93\x14\x49\xF5\x2E\x49\xDC\x97\x36\xC0\x75\x62\x57\x4B\x62\xAB\xA7\x3D\xC9\xF4\xF7\x1C\x99\x1E\x8F\x7F\x67\x42\xC1\xB8\x9F\x82\xBC\xDE\xEF\x27\x89\x88\x8C\xE4\xB9\x06\x7C\x79\xEB\x1F\x54\x02\xAC\xE0\x7A\xEA\x82\xE2\x6C\xF0\x95\xE4\x80\x8D\x8F\x33\x7D\xA3\x76\x8F\x08\x3F\x9B\x86\x73\x10\x01\x6A\x44\x8D\x9F\xC7\xB8\xEB\x14\x2E\xDC\x10\x89\xA7\xC6\x8B\x9E\x23\xA4\x83\x97\x6C\xA6\xC8\x2C\xB6\x0B\xB9\x6D\x92\xAD\x92\xC1\xB1\xD7\xAD\x9F\x80\x4A\x28\xB6\x77\x25\xC1\x65\x7E\x9B\xA2\x78\x25\xA9\xC9\x7B\xAE\xB2\xA4\xF5\x1F\x3A\x8A\x2E\x9A\xE8\x7D\x05\x63\x55\x56\x76\xF4\x47\x7B\xEA\x90\xEE\x22\xB2\xD2\x01\xA1\x1F\x10\x1A\x95\x7B\xFB\x15\xFA\x8E\x2B\xE1\xC7\x47\x92\x64\x50\x79\xCD\xE7\x45\x7F\x95\xC7\x77\x63\xB7\xAC\x6F\x82\xC4\xD8\x70\x85\x1D\x0F\x88\x3D\x0D\xA4\x6B\x65\x60\x03\x00\x30\x62\x24\x3E\x11\x47\x1E\x80\x3D\x73\xE2\x45\xE5\x9A\xBB\x24\x6B\x46\x82\x81\x78\x3C\x67\xF9\x42\x8F\xFA\x8D\xC0\x09\x01\x1E\xFB\xE4\xF4\x76\xE6\x36\xB8\x60\x5F\x46\x97\x2D\xA5\x73\x1E\x60\xE9\x28\xD2\xC0\xB1\x1A\xB0\x3A\x56\x86\xFE\x8B\x67\xDD\x39\xD8\xDD\x16\x4B\x04\x33\xC0\xA7\x2A\x1C\x7C\xDA\x3D\x8D\x0F\xF4\xC7\xEA\x57\x1C\x69\xC3\x45\x50\x0C\x4D\xEA\x63\x37\xFF\x63\x3A\x87\x5B\x2C\x3E\x6F\xFF\x97\xDF\x45\xD6\xD8\x0F\x82\x96\xF0\xB1\x8A\x3D\xC3\x0C\xCB\xC6\xD8\x0D\x5A\x9D\x88\x5D\xD0\x27\xEE\xCD\xF5\x62\x01\x6A\xEB\xEF\xEF\x49\x9D\xA9\xD7\x9F\x83\x03\x75\xB7\x07\x7A\x40\x02\x40\xC1\x42\x78\x0C\x07\xD0\x09\x0C\xF5\xF5\x12\x77\xB8\xCC\x86\xAE\x5E\x8D\xF8\x42\x4B\xB1\x3D\x3F\x2D\x33\x9E\xBC\x1C\xFB\x50\x15\xBF\x67\xB4\xCC\xF3\xAC\xBD\x4F\x67\x4B\x9A\xC4\xEC\x20\xB1\x1D\x81\x6B\x72\x19\x9E\xAC\xCA\x4F\x3C\xCB\x72\xAA\x65\x80\x3F\x04\x75\x03\xEF\xB4\x39\xA8\x7F\x57\xEB\x6D\xF1\x37\x86\x96\x7F\x7F\xB0\xDD\x3F\x76\x4D\x35\x68\xA3\xC6\xAA\xF4\x2B\x52\xC5\x56\x21\x9E\x5F\xEC\x0E\x44\x08\x5C\xEC\x8C\xE7\x79\x9E\xC9\x29\x6F\x81\x52\x3C\xC2\xDF\x6A\x4F\x47\x54\xD3\x3E\x3C\x44\x19\xC2\x8D\x59\xCC\x53\x2B\x7B\x18\xD4\x74\xB9\x54\xC1\x31\x40\x95\xC4\x89\x3A\x41\xB7\xE8\x32\xF3\x88\x75\x08\x78\x10\x56\xF6\x31\x9F\x5D\x3D\x49\x63\x5A\xB8\xD8\xA6\x72\xB7\x8D\x71\x84\xC1\x13\xCC\x84\x97\x9E\xAD\x67\x21\x8A\xC5\x3E\xA8\x06\xF3\xE7\x91\x63\x05\x0E\x8B\x3B\x9F\x7B\x2B\xED\xC5\x9D\x2A\x69\xD7\x6F\x0C\xD6\x64\x6A\x49\xE4\x34\x04\xE9\x2D\xB8\x7E\x7C\x69\x29\x9B\xA0\x6E\xB4\xF8\x50\x6F\x9C\x4C\xF2\x84\xEC\x61\x78\xF3\xF3\x4E\x7A\x1A\x11\x47\xDE\xA2\xD0\xE1\x6A\x24\xC6\x14\xE2\xD8\xF5\x2F\xD4\x67\xC9\xED\x67\xCD\x40\x7F\xCB\x76\x77\x15\xAC\xFF\x00\xF6\x80\x1C\xCE\x7F\x2D\x6C\x1C\x19\x37\xBD\x82\x19\x91\x5E\xDF\xE2\x76\xEF\x83\x27\x75\x50\x84\x0A\x3E\x2F\x1C\x70\xA6\x3A\xA0\x20\xF9\xC1\x5D\x21\xAD\x97\xDE\x57\xD3\x38\x63\x49\x97\xF2\x3A\x41\x7E\x11\x74\x62\xE5\xDD\x1C\xD0\xED\xAE\x06\x2B\x8C\xA0\x6D\xF0\x07\xCE\xE7\x39\xFA\xDE\xA7\x83\x9B\x27\xF0\xA7\x60\xA0\x1A\xC8\xA2\x81\x84\xFB\xFD\x67\x1B\xCD\xAF\xFE\x6C\x93\x00\x96\xBB\x38\x1B\x4E\x61\x31\x54\x37\x53\xDE\x64\x84\xE9\xE5\xB5\xE7\xFF\x69\x09\xF1\x9A\x8B\xED\x1C\x70\x23\x8B\x81\x9A\x56\xFC\x35\xD3\x00\x9C\x5B\xA4\x7E\x3F\x91\xFF\x2C\x64\x0E\x0C\x29\x71\x66\x6A\x1D\x0A\x99\x8E\x8B\x09\x53\x29\x40\x93\xE6\xE7\x29\x34\x0C\x05\xAD\x42\x65\xAB\x3B\x33\x9B\xCF\xEA\x48\xCD\xD0\xB1\x31\x1E\x37\xD1\x53\x60\xC7\x8D\x30\x47\x8F\x94\x85\x38\xF2\x56\xB0\x94\xBC\x01\x55\xD9\xEE\x0A\xFB\x20\xCB\xB5\x71\x82\x83\xA8\xF0\xCB\x6A\xDB\x44\x2B\x83\x5D\x52\x39\x38\xEB\x6F\xBC\xD0\xF3\x97\x5A\x44\xCA\x0C\xD1\x85\xD8\x85\xF4\x40\xFC\x32\xFE\x73\xBC\xB9\xDD\xD1\x6C\x45\xE8\xBB\xB0\xC4\x2A\xF2\x6F\x48\x28\xED\xDD\x5B\xA2\xED\x75\x7B\xA6\x1B\x11\x81\x65\x73\xBB\x70\xF9\x78\x74\x21\xB4\xEE\x21\x50\x26\xB4\xC0\x76\xA0\x40\x4C\x76\xD1\x47\xBD\xEA\xBD\xA0\x1B\x4C\xA8\xEF\x17\x25\x77\xC8\xD1\xB9\x0F\xA4\xE1\xD6\xE7\x80\x54\x8D\x7B\x58\x5F\x83\x63\x52\xC0\xC8\xD2\x89\x1E\x17\xFC\xF9\x98\xAF\x27\x3E\x47\x10\x94\x37\x7A\x90\x84\xAB\xCB\x1F\x04\xBF\x32\xE9\xB5\x51\xB2\x91\x9E\x15\xE5\x62\xE4\xF9\xC8\x99\x7F\x68\x59\x22\x15\x16\xD8\x4E\x61\x00\xBF\x95\x16\x38\xC0\x8B\x88\x4C\x92\x88\x10\xE1\x04\x0D\xED\xF0\x8A\xE4\x78\x18\x7B\x93\xF8\x3B\x3F\xD0\xCA\x8E\x07\xF9\x45\x5C\x87\xAD\x9C\xFB\x5E\xDF\x22\x75\xF0\x4F\x58\x50\xBC\x03\x55\xE7\xC0\xDA\x88\x2F\xB4\x70\x3A\xFC\xCA\x85\x86\x79\x5D\x6D\xFB\x88\x25\x43\x3E\x19\x53\xF8\x7C\xCC\x24\x93\x06\x80\x83\xC2\xE3\xE6\xBA\xAC\x96\x7F\xE8\x94\x3F\x96\x44\xF9\xBC\x10\x12\x40\xA2\x2D\x09\x3E\x08\x7A\x59\x22\x65\x1C\x57\x60\x54\x52\xA3\xA7\xEE\xE6\x91\x1B\x58\xB5\x03\x2B\xDB\x86\xBE\xC5\x26\x66\xD2\x0E\x79\x68\x28\xD3\xEF\xB6\x8B\x0F\xE9\xE5\x23\x00\xE2\x09\xF2\x03\x24\x7F\x75\x1F\xB4\x36\x61\xDD\x1D\xE0\xB5\xAE\xBD\x34\x3B\x5B\x27\xEC\x36\xA8\xA8\x24\x54\x10\x64\x19\x57\xBB\xA0\x75\x58\xA0\x6C\x24\xE1\x4D\x19\xB6\x82\x67\x06\x8A\x92\x58\x83\x37\x8F\xF3\x43\xF5\x3D\x59\x0A\x12\x08\xCD\x96\x86\x6C\x4D\xD8\xA4\x92\xC1\xF0\xC1\xDD\x78\xCF\x9B\xD4\x2A\x60\xE2\xAA\x0D\xE5\x61\x29\x70\xE4\x60\xC1\xDA\x96\xC3\xAE\xE0\x5F\x0C\x55\x94\xB9\x9C\xFD\xFD\x4F\x58\xF6\xD5\xAA\xB7\x20\x22\xCA\x71\x8A\xA5\xB8\xA0\x6F\x75\x87\x03\x9E\x66\xA1\x6B\x35\x26\x5E\x38\x1E\x78\xBF\x1C\x32\xF6\x64\x6C\x58\x0B\x85\x26\x88\xF2\xC4\x0E\xD9\xF2\xF4\x70\x77\xFB\x4B\x8B\xC4\xBE\xDC\x80\x72\x6A\x99\x54\x93\xF8\xAF\x7C\x06\xE8\x33\x97\xEA\x85\x05\x99\xE0\x0F\x89\x43\x19\x19\xF6\x17\x6D\x6F\xA6\x55\x01\x69\xBC\xDB\x9B\x43\xCB\xB0\xC8\xE1\xE9\xAC\xF1\x7A\x1C\xCE\xBA\x6E\xAE\x25\xDE\x7E\x0E\x99\x55\x30\x9E\x59\x40\x25\x36\xDA\xD0\x33\x08\xAD\x7F\xD0\x04\x16\x29\xE1\x40\xE4\xFE\x71\x6E\xD4\x96\x71\x5B\x17\xEF\x9B\x12\x20\xF2\xDA\x17\x96\x98\x23\x54\xD0\xB4\x21\x61\xB7\x4A\x99\x28\x84\xF3\xBC\x31\x43\xFD\x7C\x13\xC6\x3D\xE6\x25\x84\xB3\x0A\xE6\x0B\xDF\x98\x8C\x5C\x77\xB7\xA5\xFA\xD7\xE8\x0E\xF8\x40\x8F\x5F\x9F\x18\x21\x2F\x3C\x65\xC9\xEF\x77\x46\xD2\x91\x37\x76\x8A\x68\xE7\x41\xE9\x31\x18\xBC\x10\xEB\x03\x69\x54\x5E\x17\x79\xC0\x03\xA4\xAC\x1F\x6B\x00\x1C\x2A\xA9\x9B\x8B\xB2\xF1\x43\xA4\x5A\x6B\x44\x99\xED\xED\x1A\xEC\x3E\x3C\x4C\xD6\x16\x1C\xB3\x3C\x18\xA1\x81\x8E\x18\x9A\x32\xA0\xF2\x3D\x80\x8C\xB4\x34\x9F\x51\xCE\x91\xDD\xC3\x92\x2D\x0B\xF6\xB7\x0B\xB3\x18\x82\xC1\x94\x1E\x21\x6E\x7C\x20\x6B\x12\x30\x91\x36\xBE\x6F\x05\x5B\x6B\xFF\x66\x4A\x37\x9D\xE8\x02\xCA\xDB\xEA\x71\x0C\x5D\x15\x40\x64\x75\x1C\x49\xD4\xB5\xB5\x6B\xDD\xCD\xE9\x2C\x3E\xDE\xF9\xAB\xA2\x98\x4D\x02\x3A\xAE\x0E\x5E\x11\x43\xD6\xD4\xAA\x79\x93\xDB\x72\x59\x52\x84\xCF\xAC\x31\x58\x4B\x8C\x3E\xA9\xB4\xCA\x2B\xC1\x7B\xDB\x40\xBE\x97\xFF\x46\x27\x10\x08\xFB\x06\x11\xB5\x3A\xCE\x1C\x5D\xD2\x1B\x9D\x7F\x4F\x12\x67\xF5\xBD\xA0\xA8\x2B\x6E\x8D\x33\x7D\xC1\x75\xC3\x13\xA9\x37\x7C\x9F\x9D\x24\x8C\x51\x05\x4D\x26\x17\x2B\xAD\x04\x20\x95\x8E\xA2\x3C\x37\x5A\xA8\x66\x3A\xF3\xFB\xAF\x78\xAD\xD4\xC9\xDF\x92\xA1\xB4\x28\xC4\xD2\x13\xB0\xF7\x78\x66\x7D\xD4\xB0\xA4\x89\xA5\x20\x14\x98\x5B\x54\x89\xCF\xC2\x4A\x69\x9E\xE4\x97\x8C\xD4\x54\x96\x42\x37\x8C\x16\x09\xA9\xA9\xD0\xEE\xC8\x9E\xCE\x53\x6D\xB1\xCF\x68\x86\xCF\x7A\x0C\xE2\xB7\xEB\xAE\x2A\x07\xAE\xED\x1F\x97\x4A\x04\x8E\xD8\xBF\x56\x47\x66\x4B\x1F\xC9\xED\x34\x9C\xB2\x25\xC1\x82\x02\x9D\xCE\x6F\x59\x30\x51\x56\x57\xE9\x32\xA3\x71\x4F\x19\x39\xCE\xBE\x0A\x5D\x6C\x17\x0A\xF5\x39\xC6\x6C\x9C\xBC\x14\x10\x03\xDA\xB5\x34\xE7\x39\x21\x9E\x68\x21\x33\xE5\xE1\x99\x45\x47\x35\xC6\xC8\x32\x50\x47\x75\x97\x2A\x54\x3C\xF3\x30\x80\x06\xAF\x8B\x3D\xCD\x5D\xAD\x1C\x74\xDF\x0F\x30\xAA\x8E\x81\x1A\xD7\xEF\x81\x37\x5E\x3B\x27\xCE\x89\x25\x24\x65\x9C\x12\xC5\xA7\x6A\xAC\x2F\x67\x9D\xC7\xAB\x96\x7E\x9B\x34\x46\xA5\x49\x46\x4D\x7F\xB9\x95\x90\x9D\x3C\x5B\xE8\x2D\x67\xB9\xDA\xB3\xA7\x68\x7A\xAC\xF3\x98\x75\xA4\x01\x4D\xCB\x7F\x29\x2F\xE7\x39\x62\xD5\xEF\x8A\xDC\x17\x21\xF5\xEB\x58\x10\xB1\xC5\xB3\x5E\x44\x76\x22\x6B\xC8\xC3\xC6\x8E\xA0\x94\xA2\x82\xB4\x53\x30\xE6\x64\x1F\x9C\xAF\x6B\x96\x3C\x60\xAC\x66\xD5\xBA\x18\xC5\x6D\xAD\xA0\x55\x63\xFF\xF9\x28\x28\x20\x2F\x6A\xA1\xA9\xA0\x53\xFF\xDF\x57\x61\x1A\x81\x42\xC7\x16\x31\x2D\x46\xEF\xAF\x80\x30\xC0\x96\x32\x46\x83\x54\xDB\x50\xDE\x10\x3A\x2D\x03\x91\x69\x24\x3A\x21\x92\xCB\x91\x81\x1B\xCC\x66\xAE\x6F\x47\x1F\x0D\xA0\xF4\x3A\x21\x77\x8F\x4A\x94\xC6\xDC\xC7\x6D\x21\xE1\x2A\xE9\x12\x51\xED\x12\xCC\x69\x42\x25\x41\x44\x97\x4C\x0E\x1B\xBE\xB8\x8D\x59\x96\x57\x83\x1D\xAB\x5B\xC3\x6F\xD0\x5D\x3F\xD5\x5F\x93\xF3\xFF\x65\x0B\x23\x7D\x0C\x98\x02\x91\x72\x8B\x96\xDC\xE8\x3B\xE7\x10\x97\x21\xD5\xCD\x50\xDE\x5B\x92\xE3\x3C\xB6\x02\x78\xD2\x56\x50\x48\x2E\x56\xD7\x67\xAC\xE1\x2A\xB7\xE9\x80\x34\x81\x39\x72\xD8\x48\xD8\x78\xA9\xE1\xCB\x30\x1B\x73\xEA\x54\xEA\x7A\x71\x4A\xD4\x58\xD6\xE9\xCD\x3E\x3B\xBB\x8C\xAA\xF5\x2A\xEF\x5F\xBE\xBA\x86\x9D\x0F\x43\xD7\x46\x22\x7E\xB2\x28\x80\x8B\x3A\x12\xDD\xEB\x20\x07\x75\x1E\x8B\x80\xD9\x0B\xAA\x5E\xBF\xEB\x27\xFC\xF3\x4B\x31\x57\x27\xC9\x63\x4A\x04\x3F\x9A\xC9\xE7\xAB\xE8\x8E\xB7\x03\x4D\x3F\x12\x98\xA8\x07\x42\xB0\xA6\x17\xAE\x13\x33\x04\x9B\x2D\xFE\x83\xB8\x7D\x11\x2F\xFB\xCA\x3D\xAB\x7D\x6E\x18\xC8\xDE\x52\x02\x00\xF5\x23\xD9\x05\x4B\x06\x0C\x65\x1D\xEE\x76\xAF\xA2\x3D\x0D\x5C\x82\xCA\x9D\xF9\x58\xFA\xDA\xAF\x16\x25\xFB\x99\x39\xC6\x06\x87\x54\x3B\x5B\x17\x83\x85\xF6\xB4\x39\x16\x4F\xA2\xB5\x83\xA0\x13\xC0\xAC\xC9\xD0\x72\xB4\xDC\xBC\x5D\x83\x37\xE9\x4B\x93\x38\x18\xB5\x1A\x97\xA4\xDE\x14\xC3\xCD\x8E\xCE\x4C\xE5\xD5\x2D\x18\x7C\xA8\x2D\x41\x32\x8B\x05\xF4\x7C\xC9\x74\x20\xD1\x53\x43\xEC\x51\x8B\x9F\x2E\x35\x13\x71\xF2\x76\xC7\x5B\x63\xB4\x1C\xBE\x3D\xA5\xEE\x0A\xBE\x7A\x10\xEC\x48\x77\x40\xC7\x00\xCB\x86\xC5\x86\x53\x50\x10\x3A\x7D\x94\x7F\x7E\xF2\x96\x62\xC3\xFD\x7C\x7D\x1A\x23\x66\x7F\xFA\x3F\x41\x7F\x7D\xF6\xB9\xDE\x5E\xE7\x7F\x62\xC3\x40\x18\x32\x90\x38\x65\x54\xEF\x11\xD0\x75\x03\x4E\xCC\xC6\xF2\x3E\xC8\x73\x7F\x9E\x9C\x2C\x78\x21\x32\xEA\x77\x45\xAB\xD7\x7D\xAD\x3E\x4F\xE4\x5A\x4C\x79\x0F\x46\xD5\x51\xEE\xA0\x86\xDE\xFF\xAC\xC8\x95\x4B\xDE\x36\xEA\x70\x8D\xC7\xE4\x88\x72\xC0\x0C\xFF\x00\xDA\xC9\x7F\xD7\xE8\x01\x01\xBB\x95\xC6\x76\x5C\xF7\x36\xA8\x58\x40\x5F\x0D\x13\x8C\x7D\x7E\x12\x95\x16\x68\x34\x03\xCD\xD3\x67\x61\x2B\x1A\x30\xAA\x59\x6D\x6A\x1F\x9F\x1C\xA4\x52\x21\xC5\x19\xAB\x92\xA4\x04\xEA\xBA\xA1\xA6\xD8\x76\xFB\x5D\xD9\x21\x17\x5F\xAD\xF0\xA9\x14\xCD\x73\x6D\xD8\x52\x4B\x27\x3B\xA7\x57\x36\xEA\x6F\xAB\x0C\x2F\x83\xD2\xBD\x4B\x5C\xF6\xB3\x39\xF5\x2B\xCA\x8D\x5B\xF7\x90\x7F\x75\x0E\x58\x7F\xC0\x66\x6C\x5B\xD1\x8E\xA6\x3B\xDA\x2E\xD3\xB1\x6E\x68\x81\x52\xFD\x99\xFC\xC2\x22\x13\xD8\x74\x00\xA9\xB1\x58\x1B\x6A\x91\xF3\xFD\xD4\x02\x15\x8A\x34\x2B\x0F\x74\xA5\xAD\x05\x84\x54\xDB\x0A\xCF\x25\x40\xCF\x13\x72\x9E\x29\xB6\xDA\x0D\xF9\x4F\x3B\x4A\x86\x6A\xA2\x4D\x86\x6B\x09\x89\x3A\x58\xBD\xBD\xC4\xDE\xAF\xFA\x4E\xB9\x2C\x52\x84\xD3\x0C\x37\x79\xD3\xC2\x3B\x8C\xD9\xED\xB9\x57\xA9\xF6\x60\x76\x6B\x17\xA0\x9F\xDF\xBB\x49\x21\x61\x18\x3E\xFE\x9A\xB3\xD7\xB2\x2F\x65\xAD\x27\xD5\xEA\xAF\xEF\x47\xA0\xA8\xD9\x8A\x8B\x50\xCC\xB7\x47\x53\x77\x05\x42\x12\x10\x93\x64\x71\x66\x89\x79\xF6\x19\x1D\xD9\x65\xB6\xD9\xFB\x7F\x03\x25\x75\xFB\xE8\xE0\xBC\x90\x2B\xA6\x97\x0E\x05\x41\x9D\x85\xD3\x9D\xEE\xE3\xC4\xAD\x9B\xAE\xFC\xDF\xBA\xFF\x8C\x6B\x98\x0E\xFD\xB2\x3A\xAB\x9F\xF2\xCD\x33\x79\x17\x79\xF4\xB8\xB4\xEE\xB5\x8A\xC6\x6A\x80\x0F\x4A\xBA\x3D\x38\x0B\x0A\x94\x8A\x4B\x53\xBD\xA8\xAE\xEE\x46\x5A\x64\xD2\x5D\x90\x24\x8A\xF1\x0A\x18\x3A\xD7\xDA\xCA\x69\x9E\x9F\xE8\xA5\x6D\x38\xDA\x89\x54\xC7\x65\xBE\xC7\xC5\xAC\xB1\x5C\x40\x6B\x75\x9A\x53\x61\x5A\x5F\xDC\x85\x72\xCD\xD2\xC4\xF3\x7C\x55\xC6\xBA\x6C\x17\x29\x54\x13\x63\x4D\xC5\x8B\x91\xE2\x22\xF0\xE3\xFC\xC8\x54\x7D\x76\x1B\x68\xB1\xF1\xBA\x20\xCD\xBD\xBD\x90\x3B\xE1\xB9\x5F\xFC\xB9\x55\x2A\x04\x12\xCD\xEA\xBA\x6F\x17\xB0\x78\xAD\x47\x6C\x12\x3D\x42\x32\xA0\xEB\x19\x6A\x21\x54\x9D\xAB\x09\x7D\x5F\x41\x08\xCD\xE8\x9E\xC9\x7A\xC4\x76\x0E\xD4\x7E\x1F\xC5\x9D\x1C\x20\xDE\xBB\x20\x54\x40\xD8\x37\x32\xA4\xC3\x8A\x35\x84\x12\x11\xB1\xB5\x46\xB5\xE1\x9F\x84\xAA\x1F\x49\xA7\x80\x7C\x11\xE6\x4E\xA5\x75\x84\xB2\xBD\x72\xFF\xF4\x97\xA5\xC1\x6C\xE3\xE6\x95\x44\xFE\x7D\xBE\x55\x26\xA7\xF8\xC4\xA6\xD1\x48\x07\x43\x3D\x77\xA9\xF9\x38\x3D\xEE\xA1\x7A\xD7\xA8\x30\x79\x69\x55\x28\x3A\xEA\x2B\x11\x3F\xA7\xBA\x07\xBA\x4F\x67\xA1\x80\x9D\x3E\xDF\x2E\x8C\xA2\x2E\xEA\x58\x07\xD4\x2D\x27\x20\xC8\x6E\x1F\x08\x95\x3D\xFB\x65\xF3\xE3\xFF\xB9\xD0\x27\x54\x97\x91\xF4\x27\xBA\xD5\x74\x86\xF5\x3C\xAC\xC5\x01\xAB\xE2\x95\xDD\x07\x2B\x0A\xD2\xB6\xA9\x08\x79\xFE\x92\x4F\x9D\x22\x5A\x5F\x3A\x61\x9E\x46\xAB\xE5\x35\x2B\x2E\xE9\x72\x9D\xC0\x03\x8F\x93\xA3\x45\x9D\x38\x06\xD3\x2B\x19\x53\xA6\x4D\x33\x82\xE8\xB6\x22\x18\xEE\x47\xEA\x53\xC5\xA3\x7C\x48\x57\xEF\x6F\xA0\xD9\x61\xD7\x9B\x5C\x02\x18\xA5\x1E\x75\x90\x02\xCE\x8F\x1D\x1C\xC6\x75\xEA\x08\x01\xF5\xAE\x60\x93\x10\x8F\xA3\x94\x15\x98\x07\x28\xC9\xD6\x19\x61\xF3\x6C\x2B\xB7\x1C\x95\x97\xB8\x7F\x9A\x97\x5A\x39\x66\x88\xD6\x23\xB8\x7A\x0B\x8D\x7E\x4D\x3B\x27\x82\xFD\x61\xAC\x24\x2A\x67\xF9\xD5\x7D\xC8\xD7\x60\x2B\xA7\x35\x78\x88\xDC\x6E\x78\x03\x33\xCF\xF3\x25\x67\x17\x43\x23\x4E\x26\x78\xED\x4C\xD3\x22\x4B\x7E\x64\xE9\xD1\x92\x3C\x8E\xD8\xE3\x37\x34\xE5\x1D\xF9\x17\xF6\x28\x42\x2D\xE9\xAA\xAA\x17\x50\xB7\x6D\x14\xE7\x5F\x01\x7F\x4B\x1F\x05\xAA\x65\x65\x67\x49\xBC\x45\x51\x58\xA6\xE4\xC5\x4F\x24\x26\x10\x3F\x5D\xAE\xE4\xA4\x28\xC4\x0B\x1C\x2C\x51\x09\x2C\xD1\x10\x53\x82\x11\x2A\x32\x02\x37\x9B\x2A\x3C\xE0\x54\xD7\xC1\x00\xE9\xF7\x0B\xBD\x93\x74\xBE\x04\x4A\x14\x75\xBC\x1D\xB0\x25\x74\x2D\x2E\xE1\xF7\x25\x84\x87\x30\x31\x8D\xD0\xE4\x66\xB2\x7E\xE0\x12\x34\x64\x96\x18\x2B\x52\x50\x57\x7D\x89\x31\x98\xBC\x43\xB0\xE9\x01\xAD\x8B\x38\xB4\xDA\x8E\xE4\x57\x5A\xFF\x73\x13\xAD\xCE\xAE\xD8\xF0\xF7\xD8\x40\x22\x9D\x3A\x1B\x61\xE9\x1C\xE2\x63\x53\x84\x50\x70\xAF\x2B\x34\x54\xEC\x70\xDA\x65\x13\x45\x74\x4E\xBC\x18\xEB\x9F\x85\x3E\xAE\x88\x8F\x15\x49\x28\x8E\x94\x9D\x43\x6A\xAF\x55\xD9\xE4\xDA\x37\x43\x0B\x4B\xEA\xA0\x00\x46\x98\x52\x73\xB7\xFA\xAA\x00\x8D\x20\x01\x61\x70\x2D\x0F\xCA\x10\x1A\xE4\x5F\xAA\x81\xC0\xAE\x2B\xF9\xA5\x9C\x09\xA1\xEF\xCF\x6B\xCA\x3C\x3C\xBD\xA1\xBF\x1C\x53\xBD\xAB\x6F\x63\xD7\xE4\x3E\xA1\x32\xD6\x74\xC8\x34\x9F\x56\x80\x36\x90\xFE\xF1\x23\xAD\x5F\xAC\xCB\xB8\xE9\x5E\x98\x11\xEF\x76\x69\xD3\xA3\x93\xBE\x6C\xB8\xC8\x3E\xE9\x66\x6C\xAA\xA3\x32\xC2\x44\xD2\xED\xAA\xA0\xBE\x32\x04\x3D\x0A\x30\xAE\xD7\x84\x7C\xFD\x42\x68\xAD\x54\x85\x2C\x4A\x8C\xE7\xF6\xDA\x5B\xBB\x22\x0C\x3B\x28\x37\x6A\x9E\xE5\x04\xF5\x48\xC7\xF8\x41\xB9\xF2\xE0\xF7\x8D\x47\x10\x0F\x01\x77\x2D\x8D\x21\xDA\x0E\xEB\x8D\xB1\x67\x57\x03\x16\xD6\x53\xE9\x6F\x59\x13\xAC\x56\x85\xB9\xDD\x41\xF0\xC3\xD5\xC7\xF5\xB6\x41\xE5\xA1\x50\xAA\x71\x67\x87\x50\xC2\x29\x63\x05\xA6\x3A\x83\xF6\x00\xDC\x6E\xD0\xCA\x03\x47\x8E\xB0\x7C\x71\x09\x99\x1E\x7A\x57\x23\x7E\xAC\x57\x51\x40\x45\xD0\xF4\xE5\x36\x85\x4F\x8C\x50\x81\x09\x57\x42\x56\xB0\x3E\xC0\x94\x88\x85\xC7\x60\xF4\x0E\xEE\xDE\x1E\x8C\xD1\x5A\x59\x83\x38\xE0\xC7\x71\x0C\x29\x4A\x6E\x4A\xCD\xEB\x2A\xB8\x44\x5C\x90\x5B\x97\xF1\x07\x7C\xB1\xD3\x1D\x34\x6E\x69\x52\x88\xFF\x22\x1A\x36\x3D\x5F\xF6\x87\xAA\x35\x30\x59\x31\x8C\x88\x89\x41\x2C\x21\x89\x41\xCD\x4F\x23\x51\xB7\x18\x36\xE5\xC9\xC3\x94\xB2\x1A\x84\xBA\xE4\x48\xA0\xC7\x56\x48\x3E\xC4\x8A\x90\x68\xDB\xB8\x01\x78\x6B\x3B\xE1\x21\x86\xAA\xF6\x3F\xE0\x14\x60\xCD\xAA\xBD\xF8\xFE\xDD\x12\x59\x80\xB0\x20\xC8\xAA\x79\x14\x96\xE3\x7C\x3C\xB5\xEE\x29\xEB\xE8\xD6\x2B\x40\xA9\xAD\xCC\x16\xDE\x7A\x64\xF3\x04\xC8\x46\xB9\xD6\xF3\xC7\xEA\xA4\x80\x96\xF4\xFF\xBD\xD4\x29\x81\xDA\x37\xF4\x74\x01\x9D\xE1\x2C\x75\xCD\xF1\x0B\xEB\xB8\x63\x49\xE9\x5C\xAE\x48\x19\x34\x56\xDE\xAB\xCE\x5F\xAA\xBD\x54\x76\x60\x19\xAC\x86\xDE\xFF\x63\xA4\xF5\x02\x18\x94\x25\x29\xCA\x30\xCC\xA3\x9A\x69\xEF\xF8\x1B\x92\x0D\x46\x2D\x4A\x39\x0A\xB8\xF8\xD6\xFC\x16\x30\x58\x2D\x15\x04\x40\x27\x38\x19\x1F\x5A\x4F\x0D\x3D\x29\x89\x90\x1F\x4F\x58\x3A\xC5\x2E\x05\x12\x28\x71\x0F\x07\xB2\xD2\x72\x2D\xAE\xE8\x0E\xF0\x5B\x28\xDB\x66\xC2\x1A\x90\xC3\x70\xF2\xAF\x27\x44\x86\x3E\x45\xFA\x4D\x63\x9A\xF4\xAA\xDB\x09\xB1\xF6\xB5\x60\xBB\x1E\xFA\x57\x1B\x6F\x95\xD7\x87\x2B\x0C\xE3\x6C\x71\x4D\xB8\xDA\xA3\xF2\xF8\x3F\x40\xB1\x5C\xF3\x62\x12\x01\x76\xAA\xC8\x0E\x25\x18\x46\x9C\xDF\xD2\x32\x8F\x28\x2D\x09\xC1\x5B\x9E\x6A\x5B\xEF\x40\xDB\x93\x8F\xF2\xE7\x0D\x41\x9F\xB5\xF8\x57\x8E\x1C\x2E\xD3\x94\x0F\x1F\x43\x7D\x24\xF3\x5A\x9D\x96\xEC\xC8\x1F\x85\x39\x89\x14\x56\xF6\x5C\x13\x2A\xBD\xD4\x98\xB0\xA0\xC7\x93\x7A\xFC\xF6\x43\xC1\x4C\x30\x6D\x91\x3F\x88\x1A\xBD\x38\x41\x2C\x8A\x66\xBC\x7F\x64\x26\xF8\xF8\xBD\xAE\xB5\xD9\x60\xB8\xFE\x70\xE6\xFF\x15\x0E\x34\x1C\x94\x0A\x2F\x69\xB1\x58\x2D\xC6\xFF\x10\x9A\xEB\xEF\x41\x91\x1C\xA5\xE8\xED\x04\x59\xCA\xB9\x39\x50\x5B\x6A\x7D\x20\x94\x88\xEC\x2B\x85\x95\x7D\xBB\x27\x65\xE7\x6C\xDA\xF0\x6C\xCB\x2F\x91\x20\xAD\x32\xB1\x68\xBB\xD1\x0D\x6E\x9D\x6F\xBB\x14\xF4\xEE\xA0\x76\xAC\x17\xEC\xE1\x3C\xDB\x9D\xD3\x88\x1D\x39\xD1\x28\xD4\x93\x4A\xDA\x84\xAE\x50\x92\x83\x23\x93\xF7\x9D\xA8\xCB\xA9\x92\xF8\x97\x9F\x37\x3A\x47\x9C\xEA\x10\x5E\x60\xD7\xB6\xF0\xB7\xCA\x6B\x2D\xBB\xC4\xDD\x52\x50\x6E\xD4\x9E\xE7\x7B\x56\x2A\xAC\x19\x6B\x98\x33\x1F\x5C\x90\xEC\xC9\x68\x78\x12\xF8\x9C\x48\xC2\x89\x72\x26\x73\xCD\x66\x5D\x37\xCE\x91\x5E\x2D\xD4\x69\xFF\xF0\xA2\x9D\x0F\x38\x6D\xD1\xDC\x63\x62\x5F\x2D\x0B\xC3\xAB\xFE\x9B\x2D\xC3\xB1\xD7\x03\xDF\x3A\x66\x9F\xC1\x4A\x0E\x9D\xC1\x08\x3F\x41\x1A\x5F\x64\xD2\x87\xBB\x11\x8F\x4A\x99\xF3\xB1\x03\x3A\x6F\x9D\x65\xD2\xB8\x14\xA5\x7C\xD2\x72\x25\xB7\xE5\xFC\x10\x39\x50\xF5\xEB\x4F\xF3\xCF\x5B\x8B\x39\xA7\x55\xE3\x9C\xBD\x64\x38\x2E\x46\x88\xE8\x4F\x88\x0A\x72\x4A\xED\xC5\x26\x6B\x6B\x22\x40\xFA\x7A\xC5\x49\x8A\x39\x10\xE1\x1F\xFD\x43\xD9\x78\xCD\xAD\x15\x49\x29\xD2\x89\xF9\x86\xCC\x35\x91\xF4\xAD\xF0\xA2\x65\x35\x98\x54\x04\xBD\xEE\x64\x1D\xA1\x06\xDA\x04\xD0\xB3\x72\xDF\x79\x08\xDF\x8B\x5B\x6C\x8C\xBC\x50\x33\x19\x6A\x4A\x7B\x8E\xB8\xE4\xC2\x05\xE1\x51\xA9\xA6\x0E\x35\x56\xD8\x3A\x85\xC8\xE3\x86\x7F\x3C\x3F\x9B\x16\xB8\x55\xFD\x1B\x73\x3B\x31\xF5\x47\x4C\xBA\x89\xA0\xC6\xC8\xC2\x45\xBB\xB8\x51\x34\xD9\x70\x80\xEC\xAB\x2B\x4A\x59\x7A\x07\xB0\x1E\xAF\x85\xEA\xC2\xDE\x36\xAC\x99\xCF\xDE\x43\xB4\x9B\xF0\xCA\x76\xF4\x5A\xDB\xF7\x44\xB1\x94\x82\x50\xCB\x20\xF9\xE4\x71\xB3\x1D\xC3\xD0\xBA\x99\x07\xA6\xC4\x44\x4E\x65\xF4\x34\xAD\x90\xAC\x24\xAD\x41\x74\x61\xA3\xF3\xBD\x19\x97\x3E\x2F\xE5\x36\x25\xED\x3E\xC6\x1D\x62\x71\x2B\x6B\x2E\xF2\xA3\x90\x52\x9F\x94\x33\xE8\x3D\xBF\xFD\x57\x3B\x01\x37\x70\x42\x17\xAE\x5D\xB5\x3C\x9B\x42\x09\xE5\xCB\xE4\x74\x74\x13\xE4\xAF\x35\x99\x26\x95\x64\x04\x85\xB7\x21\xF6\x3B\x7D\xBC\x17\x87\x9D\x00\x81\x6F\x23\xDB\x12\xCA\x69\xF9\xB5\xF9\xFB\x7A\x7A\x4B\xFC\x99\x2F\x52\x6C\x84\xC9\x26\xAB\x9E\x36\x72\x3D\x2A\xE7\x6F\x1E\xB8\x1C\x20\x01\xD1\x5B\xD2\xAF\x8F\x7C\xF1\x35\x11\x38\x4F\x8A\x3D\x5C\xE8\x5D\xFA\xFA\x1B\x1C\xBA\x16\xC7\x7A\x7F\xD7\x07\x84\x3F\x1D\xD2\x54\x3A\x73\x08\xF5\xA9\x19\xB5\x37\xDA\x0E\x15\x86\xDA\xDA\xF1\x6E\x8C\xD5\x2F\x92\x48\xDD\x1C\xA7\xB8\x6C\xB0\x19\x69\xF9\x1F\xC4\x89\x21\x0C\x9D\x0E\xB0\x08\x66\x18\xE5\x66\x06\xBB\xE1\xF9\x2B\x2D\x90\x83\xA6\x78\x92\x09\xE7\x3B\xE4\xDD\xCE\x6A\x9E\x5F\x3D\x8A\xD6\x16\xBA\xA2\x38\xA4\x5C\x2D\xDE\x08\xC3\xD2\xF6\xCD\x58\x8C\x83\x87\x9A\xCB\xA8\x5B\x6F\x0A\xF6\xE5\xC3\x3C\x94\x4D\x1C\xDD\x7D\xA7\xFA\xDE\xC8\x88\xBC\x62\x72\x1E\xAB\x9E\xBB\x49\x89\xE2\x93\x9D\x5D\xE2\x51\xB9\x2C\xFC\xBE\x79\xFF\xB1\x5E\xB4\x01\x0C\x66\x3D\xAD\x08\x83\x87\x59\xF7\x24\x31\x7E\x0B\x35\x8A\xBD\x3D\x04\x6D\x92\xC5\x91\x3C\x08\xD7\xE9\x0D\x1D\xBF\x7F\xE2\x7D\xD6\xAC\xEE\x0E\x14\xA8\x56\xD0\xB0\x39\xC1\xD4\xE5\x1E\x56\xDB\xFA\xE8\x82\xCD\x8E\x77\x6A\x17\xA5\x05\x3C\x8F\xBD\x87\x85\xD5\xE5\x5E\x17\x29\xBC\xA5\xDD\xE6\x14\x6D\x5D\x3F\x11\x2A\x6A\x7C\xF2\x00\x83\xC0\x0B\xCC\xC7\x3B\xCB\x51\xCB\x89\xC8\x29\x30\xE8\xE7\x65\x99\x33\x75\xE5\x48\xCF\x94\x69\x86\x11\x97\x1E\x42\x0C\x84\xAE\x11\xA1\xA3\x6B\x1F\x3C\xF1\xCF\x36\xEB\x40\x94\x95\x57\x98\x2C\xDE\x21\x32\xFA\x61\xC5\x03\xE6\x60\x1C\x5D\xFB\x83\x29\x0F\x2E\xCD\x97\xF4\x28\x04\x81\x0F\xC8\x01\xE6\x80\x10\x3D\x60\x50\x3E\xEF\xE8\x4A\x6C\xCA\x03\xD1\x92\xD7\x5C\xD4\x16\xC0\x9C\xC9\x54\x00\xC4\xD6\x9D\xDD\x36\xBA\x5B\xA5\x9E\xD5\x6E\xD2\x11\x9F\x1A\x30\x4F\xE1\x51\x3E\xB7\xA3\x52\x6F\x95\x72\xDD\xB8\xA1\x82\x68\x53\x83\xE2\xFF\xD5\xAF\x9C\x6C\x98\xA9\xCF\x76\xFD\x1B\x3E\xAF\x8B\xDA\x0C\xD7\xEF\x06\x07\x62\xB8\x82\xB4\xAC\xC5\x28\x56\xD7\xB8\x31\x66\x0E\x6E\x4C\xFA\xBD\x19\x97\xB6\xE5\x1B\x40\x08\x0E\xCC\x36\xF2\xAB\x75\x89\x8B\x96\x25\x86\x89\x51\xE8\xFF\xCC\x65\x24\xB2\x3E\x90\xC9\x41\xD3\x44\x67\x05\x73\x15\x78\xCA\xFD\x7A\x9B\xD4\xDB\x27\xC4\x5C\x74\x6B\xAF\x7F\x86\xD2\x15\x54\x2E\x82\x91\xF6\xE6\x22\x03\xA5\x9A\xAC\x90\x4C\xE9\x0B\x9A\xDF\x21\xAF\x38\x99\xB1\x38\x56\x43\x59\xF8\x50\x98\x51\x0B\xB0\x38\xCA\xEB\xC5\x7D\xA0\xA8\x2B\x1C\x38\x06\x44\x4C\x39\xA0\x2B\xA7\x10\xF0\xEE\xDA\x1F\x83\xD2\x30\x51\xF4\x0B\xC8\xF7\x26\x91\xD5\xBC\xBD\xE8\xE7\xF1\x32\xF3\x2D\xA0\xD2\x96\x02\x94\x26\xA9\x7D\x36\x9E\x27\x85\x62\x4E\x5C\xD4\x8A\x79\x3A\x14\x45\x4B\x9E\xB3\x28\x4C\x1E\x7A\x97\x7C\xDB\x90\x67\x2F\xC9\xDB\x48\xDF\x81\x91\xCE\x48\x3C\x4A\xDD\x2B\x42\xAF\xAE\x35\x93\xEF\x17\x7E\x3D\xED\xAB\x93\xF4\x4F\xDD\x14\xDF\x0B\xBA\x06\xFD\xF9\x1C\xFE\xBE\x31\x00\x89\xF4\x06\xEA\x54\x1D\xEB\x6F\x40\x9B\x73\x3B\x7A\x40\x2A\xB1\x98\xE5\x6F\xA7\x5A\xB0\x47\xC5\xD0\xAB\x49\x03\xD5\x6D\xEA\xC7\x1D\x94\x77\x48\x9F\x89\x2C\xFE\x60\xA4\xB0\xC5\xCA\xAB\xC7\x08\x93\x70\x12\x5A\x18\x2B\xB0\x27\xC1\x8C\x3C\x77\xA4\x70\x5F\x79\xE2\x30\xFE\x2A\xBE\xF2\xDA\x77\x52\xFE\x65\x47\xB0\x76\x33\xFA\x9B\x0C\xD3\x31\x63\xF1\x21\x19\xFB\x19\x81\xF3\x1E\xAB\x66\x7F\x7A\x46\x5E\x4D\x28\x18\x4B\xD6\x9A\x37\x2C\x34\x60\xCE\x15\xB5\x08\x24\xEF\x75\x92\x54\xE9\xD0\xDE\x9A\x93\xD4\x96\xB5\x05\x9A\x7D\x13\xCB\x18\xEA\x76\x95\x40\x1E\x98\x59\x42\x1E\xFC\xAE\x27\xD7\xF9\xAA\x3A\x55\x5A\x38\x28\x95\xB7\x3E\x6D\xAE\xF9\xA4\xC1\xF7\x03\x4A\xB1\x56\x1E\x9E\x7F\x98\xB5\xD2\x16\x44\x3B\x48\x68\x2C\xA4\x58\x16\xF2\xC7\xC4\xE5\x71\x4C\x23\xF4\x82\x05\xE9\xBD\x4F\x46\x1E\x6B\xD4\x84\xFD\x36\xBE\xC4\x55\x81\xC6\xA1\x0D\x22\x11\x1A\xA0\x52\x2B\x18\x44\x64\xBF\x8E\x0C\x5A\xB3\x9B\x74\x40\xD4\x2B\x12\xA0\xAE\x49\x90\x22\x52\xEF\x27\x93\xD8\xCB\x84\x50\x2B\x06\x02\x9A\x6A\xD0\x1E\x7F\xDC\x3F\xD0\xDD\x2C\xB1\x52\xEC\x21\x2B\x09\x18\xA0\xFF\x1B\x6B\x67\xBE\x36\xE1\xA3\x7A\x1C\x4F\x56\x80\xAC\xB0\x54\xBF\xD2\x7F\x57\x18\x4B\x02\xBF\xA2\xA0\xD3\x0B\xA7\xA8\xB2\xF7\x82\x18\x21\x9C\xB1\xA2\x25\x35\x5D\x40\xCA\x94\x3D\xA6\xF3\xCA\x88\x25\x23\xBA\xA0\xA9\xF9\x7A\xF3\xE8\x6E\x59\x12\x55\x69\xA5\xE6\x45\x2F\x5B\x5C\xB6\xAA\x77\x1C\x7E\x60\x2A\xBE\x20\x99\xD1\xE9\x61\x01\xBF\xF0\xF2\xA0\x33\x6B\xA7\xCE\x24\xBF\xE4\x39\xF2\x74\xD2\x3D\x3B\xCF\xBF\x61\x75\x9D\xE6\xB3\xFA\x9A\xFE\xA6\x0A\xD8\xAB\x39\x83\x60\x75\x55\xFF\x8C\x86\x0C\xC8\x92\xBC\x85\x7D\xCC\xCE\xF9\xF7\x74\x0F\x05\x86\x23\x78\xB7\x82\xAA\x84\x50\xE6\x01\xBE\x3C\x58\x1A\x20\x8A\x98\x48\xB5\x68\xDF\x6D\x90\xC4\xAF\x71\x3A\x60\x44\xB2\x03\x9F\x96\x74\xFE\x23\x2A\x60\xAC\xB2\x5E\x23\x79\x2C\x20\xC6\x8D\x84\x99\x90\x82\x91\xF7\x22\xD9\xDD\x70\xD1\xF2\xEA\x8C\x39\x8F\x76\x74\x9F\xD3\x12\x1D\x58\xA6\x3D\x0A\x23\x6E\xF8\xBC\x8E\x6C\x39\x22\x29\x56\xEF\xDB\xD7\x8B\x0B\x0A\x7D\xAD\xBB\x9B\x24\xB9\xAF\x56\x76\x3F\x4E\x60\xD2\xD0\xFB\x8B\x52\x34\x2A\x4E\x03\x00\xC3\x2D\x04\x74\xF6\x64\xD2\x60\x2D\x36\x42\x05\x0C\xD5\x70\x17\x6E\x1A\xC6\x5B\x5C\x69\xB6\x20\x71\x0F\x85\x36\xF0\x28\xBD\x85\x7E\xA8\x77\xD5\x67\xDB\x84\x06\xCC\x04\x57\xCA\x69\x3E\x53\x77\xFD\x30\xC9\x4E\x72\xCD\x00\x94\x92\xE0\xA1\xD0\x70\xFD\x68\xD1\x23\x6A\x64\x2C\x07\x79\xE2\xDF\x65\x05\x2D\x48\xE3\x8B\x1F\x7E\x39\x6E\xDE\xCC\x58\xA1\xD2\x51\x00\x75\xF7\x92\x0C\x9D\x33\x2D\xAB\xBE\x5C\x71\x23\x9D\x70\x92\xE0\x2D\x23\xB8\x70\x2A\x1E\x6A\x26\x86\x46\x27\xFD\x43\x09\xA8\x5E\x7B\x5D\xFF\x15\x68\x65\xA1\xBE\xD4\x9B\x36\x07\x6E\x98\x91\x19\xB4\x6A\x82\xB0\x16\x95\x93\x23\x1E\xDB\xB1\x12\xBD\x69\x78\x61\xB1\x89\x56\x36\xF6\x63\xD9\x5B\xC5\x37\xFB\x49\x7F\xF1\x3A\x3F\xF7\x6B\xAF\xE5\x38\x4F\x05\x09\xE8\x9A\x1E\xD7\x36\x7E\xF0\x82\xA8\xB8\x26\x50\x5A\x08\x21\x3A\xF9\xE5\x2A\x81\x10\x4A\x8F\x34\x1B\xF3\x46\x7A\xFF\xCD\x9C\x7C\x8B\x19\xA3\xC2\x28\xAC\x76\xC8\x5D\x56\xD2\x40\x56\x89\x51\x0E\xFF\x0E\x22\xC7\x4F\x3C\xE6\xC6\x73\x42\xB4\x47\x1D\x94\xEE\x34\x84\x04\x5C\xF7\x47\x3E\x4D\x63\x14\x7E\x5E\x6C\x42\x5E\x7B\xEE\xEA\xBA\xF6\x91\xAF\x54\x48\x88\x74\x09\xF1\x11\x50\xBD\x99\x6E\x40\xF1\x1E\xCA\x4B\x48\xA3\x5E\x56\xCF\xC2\x69\x6D\x87\x81\xF6\x5A\x5E\x37\xCE\x77\x2F\x5E\x6A\xB7\x0D\x54\x28\xA1\x24\x41\xE9\x5C\x0E\x1A\xFA\xC3\x01\x99\x09\x33\xB4\x15\x4F\x7C\xB6\x71\xEC\x25\x08\xAB\x90\xB3\x8D\xE6\x90\x34\xC6\x36\x32\x9B\xEF\x45\x46\xED\x3F\xF6\xF0\x4C\x55\x22\x31\x37\xCC\xF1\x41\xBF\xC8\x7B\x88\x7D\x57\x81\xE1\xDE\xC0\x15\xD8\x79\x83\x61\xB8\x15\x7C\x07\xE2\x10\x86\x48\xB5\xE7\x91\x7D\x9D\xEB\xA4\xE3\xD7\xD3\x0A\xDE\xC6\x48\x49\x00\x6F\xB7\x47\xDF\x1B\xE1\x93\xFE\x6E\x8E\x71\x0A\xC8\x0F\x57\x39\x89\x54\xBF\x01\xAD\x25\x06\xE6\xAF\xE0\x59\x24\x57\x1F\xBA\xB2\x31\xEC\x95\xE9\x8D\xCA\xF0\x66\x99\xFD\x02\x61\x73\xEB\x90\x3F\x6F\x6D\x80\xF3\x2E\xB6\xE9\x9A\x68\x7A\x33\x3B\x1A\xC2\x20\x4D\xBB\x25\x92\x3C\xB9\x07\x17\xDE\x5E\xB8\x7D\x87\x96\x2A\xAA\x55\x92\xD8\x03\x4D\xBE\x57\x7F\xBF\x04\x11\x6C\xE0\xB0\xED\x8B\xD1\x4B\x61\xC2\x85\x3C\xE6\x98\xC0\x26\x37\xED\x2C\x59\xFE\x85\xCF\xD0\xF7\xE2\x03\xA6\x07\x98\x4C\x65\x70\x75\x46\x7C\x3A\xD4\x8B\x27\xDF\x13\x32\x12\x9E\x15\xE9\x06\x61\x8C\xED\x9E\xC4\xBE\x58\x1C\xB7\x1D\x61\x6D\x91\x1D\x25\xD6\x0C\xDD\x4C\x3C\xD0\x00\x20\x6E\x41\x36\x5B\xFE\x4C\x8A\xAC\x16\x7A\x12\xEB\xFA\xB3\x82\xC8\x9C\x26\x6C\x85\x9C\x33\x8E\x09\xC2\x3F\xDD\x80\xCA\x9B\x9C\x49\xA1\x49\xB1\x5C\x1E\x4C\x02\x7C\x51\xC5\xCC\x31\x8B\x9F\x96\xF4\x7D\x1D\x0A\x5F\xDC\xF7\x00\x92\x9C\x95\x01\x02\x5F\xF2\xFA\x93\x6A\x5F\x49\x34\x79\xFD\x8F\xBC\x3E\x91\x53\x7C\xF2\x20\x00\xF8\x8A\xCF\x3A\x53\x07\x93\x61\x68\x1A\x9F\x2C\x41\x56\xAC\x26\x43\x20\x80\x3A\xBB\xC5\xC1\xAA\x1E\x38\x0F\x21\x10\x99\x6F\x04\x6A\x16\xE2\xD6\xA9\xC8\x04\xDD\x48\xA0\x40\x8C\x79\x72\x94\xC2\xD4\x5A\xE7\x5E\x05\x4B\xDA\xD4\x9F\x28\x78\x89\xF1\xA2\x40\xC9\x57\x99\x7B\x04\xF2\x5B\x76\xAF\x58\xD6\x29\x0C\x5C\x90\xAC\xC3\xF5\x19\x14\x12\x95\x0A\x46\x84\x3F\xDA\x2A\xE1\x23\xE0\xDE\xEB\x59\x27\xD2\x1A\x6A\xF6\x4C\x40\xC4\x43\x5D\x6D\xB2\x24\x44\xF3\xF5\x92\x9D\x49\x52\x23\xE1\x2E\x87\xC3\x70\x87\xFE\x15\xD5\xF2\x75\x89\xCB\xBE\x53\x3F\xD7\xB2\xD4\xE8\xA4\xA3\x49\x5B\xC7\x10\x28\xFA\x37\x08\x0E\x2E\x94\x66\x3C\x71\x77\x6B\x7E\x72\x75\xBE\x3A\xD0\x49\xD4\xE7\x30\xFD\xB7\xD3\xF1\x58\x2C\x13\x19\x8F\x1C\xC7\x26\x60\x28\x01\x9A\xBC\xDD\x23\x7B\x2C\xAE\xBB\x82\xC0\xFC\xF6\x68\x42\xF6\xCA\x3E\x83\xF6\x7B\x6B\x17\x3D\x2E\x21\x45\xF6\x64\xF4\x23\x27\x11\x02\x55\x47\x00\x5D\x8C\x6C\xC1\x91\x8E\x69\xEB\xB9\xB1\x59\xC9\xFE\x1D\xE9\xC9\x6A\xF5\x05\xE6\x75\x39\xFE\xB3\x33\x0C\x23\xFF\xCF\xAD\x34\xB9\xF2\xD6\xE9\x99\x2F\x13\xD5\xA7\xFA\x98\x5C\xEE\x29\x17\x01\x9E\x15\xC3\x49\x31\x3C\xD6\x2D\xCF\xF4\x24\x88\x94\xF1\xDA\x85\x90\x4D\xE7\xE8\x7F\x1A\x74\x23\x3B\x46\x38\x84\xE9\x55\x00\x8D\x8B\xF7\xBA\xD3\xC3\xA2\xDF\x2F\xBB\x72\xA0\x62\x7F\x7C\x9C\xD4\xBA\xFE\xC7\xD8\x4E\xF9\x55\x15\x49\x9A\x46\x4E\x2B\x5B\x66\xF0\xE2\xEC\x9A\x72\x7B\xA2\xC1\xF7\x9A\x60\xFD\x56\x45\xB8\xBA\xDF\x28\xF6\xCC\xC4\x91\x12\x23\x52\xD9\xB3\x0E\xCA\x7A\x8C\xAB\x0F\x95\x8B\x9C\x98\x52\x15\x29\xB2\x6A\x90\x67\x0E\x56\x9B\xF6\xE7\xD6\x01\x97\x45\x87\x67\x75\xAA\x38\xED\x03\xC4\x33\x88\xC1\x00\xB7\xD0\xFD\x79\xCD\x2B\x7D\xB6\x41\x3C\x44\xA5\x55\x38\xC5\x6C\xBC\x16\xD8\x12\xDB\xFD\x38\x5B\xD4\x0E\x07\x31\xCD\x89\x95\x6D\xA3\x77\x3B\x49\xBE\xEB\x64\x34\x57\x06\xBE\x2C\x51\xBC\x65\xB6\x50\xBC\x6F\x3D\x95\xA0\x8E\x7B\x9A\xC1\x16\x57\x45\xE4\x3E\x64\xC6\xDB\x6D\xD4\x99\xA1\x95\x6E\x15\xD0\x5B\x6B\x94\x65\xAC\x8B\x23\xD7\x3F\xB8\xDA\x59\xFA\x24\x6F\x55\x72\x0F\x50\xEE\x41\xF1\xFA\x14\x1E\xFE\xB3\xB1\x1E\xAF\x23\x67\xCF\xAF\xB5\xB0\x21\x3C\x5F\x07\x84\x0C\xD1\x0A\xD9\x62\x4D\x96\xD6\xC0\xC8\x8B\xF4\x8C\xBB\x39\x1A\x61\x81\xF8\x63\x61\xE1\x30\x6D\x17\xB3\xBB\xAE\x1D\x80\xE7\xF0\xC1\x70\x31\xA6\x07\x6A\x4E\xD3\x2E\x16\x58\x49\x7D\x8F\x7B\xC2\xAF\xE4\x0B\xEC\xA3\x0F\x04\x0D\x9F\xC0\x65\xCE\xB0\x2C\x57\xE4\x04\x7F\x2D\x41\xA6\x07\x90\x2C\x51\x87\x36\x0C\xBA\xEF\x03\xC5\x5B\x00\xDD\xA7\x73\x1F\x6A\x93\x02\xBC\x00\x54\xC3\x7D\x04\xCC\xC0\xEB\xB4\x37\xBF\xBF\x9D\xC8\xC0\x7F\xA4\xCF\xFC\x31\x65\xFD\xDC\xD2\x59\xFD\x2B\xA4\xCB\xE1\x4B\xD6\x7E\x3A\x8D\x0E\xF5\xD2\xF2\xE3\x52\x4B\xEA\x58\x9D\x80\x00\x98\x09\xAA\x6E\x78\xD7\xB0\x4B\x04\x08\x2D\x0A\xAE\xAD\x4B\x73\x55\x93\x4F\x57\x94\x41\xA5\xD2\xC3\x15\x84\xF3\xF2\xE9\x17\x31\xDB\xA2\x48\x7E\x62\x7B\x76\xD3\x45\xB2\x53\x32\x9E\x71\x84\x92\x6E\x88\x13\x68\xBA\x46\x92\x5F\x95\xFB\x3A\xBA\x72\x3D\x2E\x70\xE9\xDD\xE0\x01\x5E\xEB\x81\x3F\x90\xC1\xB6\x2E\x44\x3F\x6B\x71\xB7\x66\x98\x52\xB7\xA2\xA4\xB4\xCA\x84\x3B\x40\xCB\x89\xC8\x27\x6E\x52\x6D\x98\xBC\x22\x4A\xC4\xA6\x83\x0B\x9E\x6A\xB9\x53\xCE\x75\x42\x7B\xF6\x71\x31\xEA\xE2\xD3\x89\x5A\xCB\x55\xEF\x0F\x0C\x19\x84\x92\x2C\x54\x49\xF2\xBF\x69\xC9\xC2\x35\xED\x15\x79\x96\x28\x67\xA3\x0E\xCB\x98\xE3\xEC\x39\x30\x2F\x5E\x80\xF9\xE4\xEE\xAB\xE9\x9F\x3D\x9F\x05\x01\x1B\xAD\xED\x24\x8A\xCD\x91\x92\x7B\x2A\x2B\xA1\x42\x8E\x99\x2D\xDF\x3F\xD8\xEC\x0B\x1C\x7F\x9A\x3E\xA4\x3E\x3A\x23\x73\xB4\x7F\xE6\x0F\xF2\x35\x23\xB9\x78\xA1\x67\x3F\xA5\xA1\x99\x44\x2C\x63\x2C\x8C\x2C\xB6\x49\x4C\x21\x23\x38\x2C\x5A\xDB\x91\x51\x96\xEA\xA5\xF6\xC1\x8A\xA9\xB4\x2A\xEA\x19\x63\x41\xC3\xF7\xBA\x06\x1A\xAE\x42\xA1\xEF\xB8\x13\x9C\xF9\xE1\x84\x76\x21\xB4\x04\x8F\x3E\x00\x40\xA0\xFA\x26\x79\x6C\x4C\x23\x5A\x73\x83\x41\x86\xAC\x4C\xE9\x34\xB0\xE5\x13\x99\xB3\x87\x72\x02\x82\xAA\xAD\xE3\x9A\xFB\xF5\x8C\xEC\xB9\xCF\xAA\x19\x04\x26\x0F\x5C\x09\x4A\x12\x97\x01\x14\xD5\x8F\xEB\x76\xD0\xFC\xBE\xE5\xC8\x66\xEB\xF7\x5C\xA0\x39\x4A\xF3\xAC\xC0\x65\x44\xA2\xE8\x6D\x2B\x64\x9C\xC5\xB5\x0D\x7E\x43\x54\x63\x81\x0C\x8F\x60\x32\x74\x2E\x33\x5E\x89\x1B\xBC\x58\xD5\xE1\xB1\x6D\xF5\x7B\xC8\xE8\x27\xEB\xB3\x5E\x61\x7A\xC4\xAE\xFD\x08\xE4\x91\x03\x64\xB3\xE9\x11\x5F\x93\xED\xA7\xB8\xA2\x52\x05\xE8\x14\x51\x6B\x05\x8E\xBD\x0E\x22\x8E\x66\x0F\xFC\x6A\xF9\x38\x0C\xDF\x23\x46\x9D\xA5\x11\x69\xA8\xAC\x88\x2C\x55\xFA\x1E\xFB\x97\x51\x58\x58\xAF\xBE\xB7\x39\x96\x30\xC6\x30\x42\xD9\x31\x83\xF0\x4E\x13\x42\xB1\xAC\xD6\xD9\x71\x52\x1B\xE8\xDB\xD6\xE3\xA0\x4B\xA1\x1C\xC8\xD2\xB3\x6C\x09\xA1\xAC\x75\xD6\xB0\x9D\x2D\xEF\x27\xB7\x0D\x7D\x35\x29\xF7\x84\x9F\xA6\xFD\x63\xCF\xE7\xB0\x09\x4F\xA6\x56\x1E\x47\xAA\x46\xB7\xED\x6F\x2C\xB2\x24\x76\x71\xC7\x4D\xDC\x63\x5D\x2B\x24\x79\x28\x36\xD7\x5A\x40\xF7\x6F\xA7\x7D\xDD\xDC\xFC\x1F\x96\x8D\xB2\xC0\xC1\xC9\xDF\x42\x6A\xFA\x08\x1E\x25\xA1\xE5\x04\xC5\x35\x48\x00\xB8\x42\x57\x44\x76\xB9\xDE\x09\xEB\xF4\xCB\x85\x56\xF7\x85\xCF\xF9\xB3\x41\x98\x76\x5A\x66\xC4\xDC\x94\x25\x8A\xC4\x19\x7A\x29\x41\x85\x77\x2D\xD0\x77\x4A\x0C\x31\x0E\x68\x8C\x09\x22\xB4\x09\x14\x03\x41\xC0\xE8\x4E\xC3\x9F\x40\x04\x6A\xA9\xBD\x28\xAB\xEE\xD2\xDD\x10\x83\xCC\xB5\xE4\x35\x4E\x79\xDD\x9A\xDA\x4E\x96\x2C\x5C\xC1\xED\x2E\x53\xF6\x01\x04\x5F\xE0\xDD\x2C\x3A\xF9\xE1\xA4\x66\xA4\xCB\x41\x79\x26\x04\x58\x8E\x54\x4A\xB3\xFF\x17\x7D\xBB\x4A\x1C\xAB\x15\xFE\xB7\xFE\xFE\x86\xC6\x79\xE7\xD0\x31\x01\x38\x80\xAE\xA3\xB3\x14\xA9\x19\x5D\x5C\x71\xA8\x32\x40\x80\x71\x15\x5D\x4B\x6F\x35\xC7\xC5\xE1\x3E\x28\x8E\x44\x96\x3A\x9F'
        return pkt


#test if pipe register works properly, and get their ID
#到最后我们还是没能拿到register的值，但是总的来说程序运行是正确的
# class Test0(AbstractTest):
#     def setupCtrlPlane(self):
        # self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 0)
        # self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000009, 0)
        # self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 1)
        # self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 1)
        # self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 2)
        # self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 2)
        # self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 3)
        # self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 3)

        # self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 0)
        # self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 0)
        # self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 1)
        # self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 1)
        # self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 2)
        # self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 2)
        # self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 3)
        # self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 3)

        # self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 0)
        # self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 0)
        # self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 1)
        # self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 1)
        # self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 2)
        # self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 2)
        # self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 3)
        # self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 3)
#         # Table SwitchIngress.table_forward
#         # self.insertTableEntry(
#         #     'SwitchIngress.table_forward',
#         #     [
#         #         gc.KeyTuple('hdr.ipv4.dst_addr', 0xF912251D),
#         #     ],
#         #     'SwitchIngress.drop',
#         #     [
#         #     ]
#         # )
#         pass
#     def sendPacket(self):
#         ig_port = 0
#         pkt = self.pkt1()
#         send_packet(self, ig_port, pkt)

    

#     def verifyPackets(self):
#         print('Getting pipe stage 1 values:')
#         self.getAllRegisterValue('SwitchIngress.PipeStage1_id_counter')
#         print('Getting pipe stage 1 counters:')
#         self.getAllCounterValue('SwitchIngress.PipeStage1_counterstar')
#         logger.info("Sending Packet ...")
#         print('Getting pipe stage 2 values:')
#         self.getAllRegisterValue('SwitchIngress.PipeStage2_id_counter')
#         print('Getting pipe stage 2 counters:')
#         self.getAllCounterValue('SwitchIngress.PipeStage2_counterstar')
#         logger.info("Sending Packet ...")
#         print('Getting pipe stage 3 values:')
#         self.getAllRegisterValue('SwitchIngress.PipeStage3_id_counter')
#         print('Getting pipe stage 3 counters:')
#         self.getAllCounterValue('SwitchIngress.PipeStage3_counterstar')
#         logger.info("Sending Packet ...")

#     def runTest(self):
#         self.runTestImpl()

    
#使用多个流做测试，看是否都能正常上报,其中test1，每个流一次性发送10个数据包
#test2 ，每个流先发5个，再发五个
#test3单独测试downstream meter
#test3在test2的基础上加上对digest的反应以及对counter中数据的校验
#test4在test3的基础上加上对dirty的上报，如果没有问题，那么正确性就得到了保障。
# class Test1(AbstractTest):
#     def setupCtrlPlane(self):
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 0)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 0)
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 1)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 1)
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 2)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 2)
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 3)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 3)

#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 0)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 0)
#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 1)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 1)
#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 2)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 2)
#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 3)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 3)

#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 0)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 0)
#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 1)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 1)
#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 2)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 2)
#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 3)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 3)
        
#     def sendPacket(self):
        
#         learn_filter = self.bfrt_info.learn_get('digest_f')
#         ig_port = 0
#         for i in range(0,10):
#             pkt = self.pkt1()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')



#         for i in range(0,11):
#             pkt = self.pkt2()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')
            
#         for i in range(0,12):
#             pkt = self.pkt3()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')
            
#         for i in range(0,13):
#             pkt = self.pkt4()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')
            
#         for i in range(0,14):
#             pkt = self.pkt5()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')
            
#         for i in range(0,7):
#             pkt = self.pkt6()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')
            

#     def verifyPackets(self):
#         print('Getting pipe stage 1 values:')
#         self.getAllRegisterValue('SwitchIngress.PipeStage1_id_counter')
#         print('Getting pipe stage 1 counters:')
#         self.getAllCounterValue('SwitchIngress.PipeStage1_counterstar')
#         logger.info("Sending Packet ...")
#         print('Getting pipe stage 2 values:')
#         self.getAllRegisterValue('SwitchIngress.PipeStage2_id_counter')
#         print('Getting pipe stage 2 counters:')
#         self.getAllCounterValue('SwitchIngress.PipeStage2_counterstar')
#         logger.info("Sending Packet ...")
#         print('Getting pipe stage 3 values:')
#         self.getAllRegisterValue('SwitchIngress.PipeStage3_id_counter')
#         print('Getting pipe stage 3 counters:')
#         self.getAllCounterValue('SwitchIngress.PipeStage3_counterstar')
#         logger.info("Sending Packet ...")

#     def runTest(self):  
#         self.setupCtrlPlane()
#         logger.info("Sending Packet ...")   
#         self.sendPacket()
#         logger.info("Verifying Packet ...")
#         self.verifyPackets()


#进展：test1已经通过

# class Test2(AbstractTest):
#     def setupCtrlPlane(self):
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 0)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 0)
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 1)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 1)
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 2)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 2)
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 3)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 3)

#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 0)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 0)
#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 1)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 1)
#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 2)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 2)
#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 3)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 3)

#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 0)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 0)
#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 1)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 1)
#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 2)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 2)
#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 3)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 3)
        
#     def sendPacket(self):
        
#         learn_filter = self.bfrt_info.learn_get('digest_f')
#         ig_port = 0
#         for i in range(0,3):
#             pkt = self.pkt1()
#             send_packet(self, ig_port, pkt)
#         for i in range(0,4):
#             pkt = self.pkt2()
#             send_packet(self, ig_port, pkt)
#         for i in range(0,5):
#             pkt = self.pkt3()
#             send_packet(self, ig_port, pkt)
#         for i in range(0,6):
#             pkt = self.pkt4()
#             send_packet(self, ig_port, pkt)
#         for i in range(0,7):
#             pkt = self.pkt5()
#             send_packet(self, ig_port, pkt)
#         for i in range(0,8):
#             pkt = self.pkt6()
#             send_packet(self, ig_port, pkt)
        
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')
        
#         self.verifyPackets()
#         print("before")

#         for i in range(0,6):
#             pkt = self.pkt1()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')
#         # self.verifyPackets()
#         for i in range(0,6):
#             pkt = self.pkt2()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')
#         # self.verifyPackets()
#         for i in range(0,6):
#             pkt = self.pkt3()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')

#         for i in range(0,6):
#             pkt = self.pkt4()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')

#         for i in range(0,6):
#             pkt = self.pkt5()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')

#         for i in range(0,6):
#             pkt = self.pkt6()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')
#         # self.verifyPackets()

#         print("after")
            

#     def verifyPackets(self):
        # print('Getting pipe stage 1 values:')
        # self.getAllRegisterValue('SwitchIngress.PipeStage1_id_counter')
        # print('Getting pipe stage 1 counters:')
        # self.getAllCounterValue('SwitchIngress.PipeStage1_counterstar')
        # logger.info("Sending Packet ...")
        # print('Getting pipe stage 2 values:')
        # self.getAllRegisterValue('SwitchIngress.PipeStage2_id_counter')
        # print('Getting pipe stage 2 counters:')
        # self.getAllCounterValue('SwitchIngress.PipeStage2_counterstar')
        # logger.info("Sending Packet ...")
        # print('Getting pipe stage 3 values:')
        # self.getAllRegisterValue('SwitchIngress.PipeStage3_id_counter')
        # print('Getting pipe stage 3 counters:')
        # self.getAllCounterValue('SwitchIngress.PipeStage3_counterstar')
        # logger.info("Sending Packet ...")

#     def runTest(self):  
#         self.setupCtrlPlane()
#         logger.info("Sending Packet ...")   
#         self.sendPacket()
#         logger.info("Verifying Packet ...")
#         self.verifyPackets()

#进展：test2已经通过，hashpipe的正确性基本得到保障




# class Test3(AbstractTest):
#     def setupCtrlPlane(self):
        # self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 0)
        # self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000009, 0)
        # self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 1)
        # self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 1)
        # self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 2)
        # self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 2)
        # self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 3)
        # self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 3)

        # self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 0)
        # self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 0)
        # self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 1)
        # self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 1)
        # self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 2)
        # self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 2)
        # self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 3)
        # self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 3)

        # self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 0)
        # self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 0)
        # self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 1)
        # self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 1)
        # self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 2)
        # self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 2)
        # self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 3)
        # self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 3)
        
#         self.insertTableEntry(
#             'SwitchIngress.tbl_DownstreamRecord',
#             [
#                 gc.KeyTuple('hdr.ipv4.dst_addr', 0xF912251D),
#                 gc.KeyTuple('hdr.ipv4.protocol', 0x11),
#                 gc.KeyTuple('hdr.ipv4.src_addr', 0xE9311EA7),
#                 gc.KeyTuple('hdr.path_t.pathBF', 0xEE57C7C3,0xffffffff),
#                 gc.KeyTuple('meta.dstp', 0x2329),
#                 gc.KeyTuple('meta.srcp', 0x1CBD),
#             ],
#             'SwitchIngress.recorded',
#             [
#                 gc.DataTuple('index', 0x00000000),
#             ]
#         )

#         self.insertTableEntry(
#             'SwitchIngress.tbl_DownstreamRecord',
#             [
#                 gc.KeyTuple('hdr.ipv4.dst_addr', 0xA20CFF35),
#                 gc.KeyTuple('hdr.ipv4.protocol', 0x11),
#                 gc.KeyTuple('hdr.ipv4.src_addr', 0x3DDA7479),
#                 gc.KeyTuple('hdr.path_t.pathBF', 0x30AA1116,0xffffffff),
#                 gc.KeyTuple('meta.dstp', 0x2329),
#                 gc.KeyTuple('meta.srcp', 0x74BD),
#             ],
#             'SwitchIngress.recorded',
#             [
#                 gc.DataTuple('index', 0x00000001),
#             ]
#         )

#         self.insertTableEntry(  
#             'SwitchIngress.tbl_DownstreamRecord',
#             [
#                 gc.KeyTuple('hdr.ipv4.dst_addr', 0x6D490C53),
#                 gc.KeyTuple('hdr.ipv4.protocol', 0x11),
#                 gc.KeyTuple('hdr.ipv4.src_addr', 0xDC33F450),
#                 gc.KeyTuple('hdr.path_t.pathBF', 0xC5C1E4EC,0xffffffff),
#                 gc.KeyTuple('meta.dstp', 0x2329),
#                 gc.KeyTuple('meta.srcp', 0x038E),
#             ],
#             'SwitchIngress.recorded',
#             [
#                 gc.DataTuple('index', 0x00000002),
#             ]
#         )

#         self.insertTableEntry(
#             'SwitchIngress.tbl_DownstreamRecord',
#             [
#                 gc.KeyTuple('hdr.ipv4.dst_addr', 0x637AB0B4),
#                 gc.KeyTuple('hdr.ipv4.protocol', 0x11),
#                 gc.KeyTuple('hdr.ipv4.src_addr', 0xA17C5ACD),
#                 gc.KeyTuple('hdr.path_t.pathBF', 0x46666557,0xffffffff),
#                 gc.KeyTuple('meta.dstp', 0x2329),
#                 gc.KeyTuple('meta.srcp', 0x1EB2),
#             ],
#             'SwitchIngress.recorded',
#             [
#                 gc.DataTuple('index', 0x00000003),
#             ]
#         )

#         self.insertTableEntry(
#             'SwitchIngress.tbl_DownstreamRecord',
#             [
#                 gc.KeyTuple('hdr.ipv4.dst_addr', 0x57833D4C),
#                 gc.KeyTuple('hdr.ipv4.protocol', 0x11),
#                 gc.KeyTuple('hdr.ipv4.src_addr', 0xD0F61344),
#                 gc.KeyTuple('hdr.path_t.pathBF', 0xCF6FF466,0xffffffff),
#                 gc.KeyTuple('meta.dstp', 0x2329),
#                 gc.KeyTuple('meta.srcp', 0xC8A7),
#             ],
#             'SwitchIngress.recorded',
#             [
#                 gc.DataTuple('index', 0x00000004),
#             ]
#         )

#         self.insertTableEntry(
#             'SwitchIngress.tbl_DownstreamRecord',
#             [
#                 gc.KeyTuple('hdr.ipv4.dst_addr', 0xB0BD4743),
#                 gc.KeyTuple('hdr.ipv4.protocol', 0x11),
#                 gc.KeyTuple('hdr.ipv4.src_addr', 0x8E5A4773),
#                 gc.KeyTuple('hdr.path_t.pathBF', 0x1987A2B0,0xffffffff),
#                 gc.KeyTuple('meta.dstp', 0x2329),
#                 gc.KeyTuple('meta.srcp', 0x8A75),
#                 gc.KeyTuple('$MATCH_PRIORITY',0),
#             ],
#             'SwitchIngress.recorded',
#             [
#                 gc.DataTuple('index', 0x00000005),
#             ]
#         )

#         self.insertTableEntry(
#             'SwitchIngress.tbl_DownstreamRecord',
#             [
#                 gc.KeyTuple('hdr.ipv4.dst_addr', 0xB0BD4743),
#                 gc.KeyTuple('hdr.ipv4.protocol', 0x11),
#                 gc.KeyTuple('hdr.ipv4.src_addr', 0x8E5A4773),
#                 gc.KeyTuple('hdr.path_t.pathBF', 0x1987A2B0,0x00000000),
#                 gc.KeyTuple('meta.dstp', 0x2329),
#                 gc.KeyTuple('meta.srcp', 0x8A75),
#                 gc.KeyTuple('$MATCH_PRIORITY',1),
#             ],
#             'SwitchIngress.dirtyRecord',
#             [
#                 gc.DataTuple('index', 0x00000005),
#             ]
#         )

#     def sendPacket(self):
#         learn_filter = self.bfrt_info.learn_get('digest_d')
#         ig_port = 0
#         # for i in range(0,10):
#         #     pkt = self.pkt1()
#         #     send_packet(self, ig_port, pkt)
#         # for i in range(0,11):
#         #     pkt = self.pkt2()
#         #     send_packet(self, ig_port, pkt)
#         # for i in range(0,12):
#         #     pkt = self.pkt3()
#         #     send_packet(self, ig_port, pkt)
#         # for i in range(0,13):
#         #     pkt = self.pkt4()
#         #     send_packet(self, ig_port, pkt)
#         # for i in range(0,14):
#         #     pkt = self.pkt5()
#         #     send_packet(self, ig_port, pkt)
#         for i in range(0,15):
#             pkt = self.pkt6()
#             send_packet(self, ig_port, pkt)
#         for i in range(0,1):
#             pkt = self.pkt6dirty()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filter.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message')


#     def verifyCounters(self):
#         down_counter_table = self.bfrt_info.table_get("SwitchIngress.downstreamCnt")
#         for i in range(0,6):
#             down_resp = down_counter_table.entry_get(self.target,
#                 [down_counter_table.make_key(
#                     [gc.KeyTuple('$COUNTER_INDEX',i)])],
#                     {"from_hw":True})
#             data_dict = next(down_resp)[0].to_dict()
#             print(data_dict)
#         # up_counter_table = self.bfrt_info.table_get("SwitchIngress.upstreamCnt")
    
#     def runTest(self):
#         self.setupCtrlPlane()
#         logger.info("Sending Packet ...")
#         self.sendPacket()
#         logger.info("Verifying Counter ...")
#         self.verifyCounters()


#我们应该用ternary match来解决wild card匹配的问题
#进展，test3已通过，已经成功使用ternary match解决了这个问题


#test4：接收digest信息，并作出反应，最后统计

# class Test4(AbstractTest):
#     def setupCtrlPlane(self):
#         self.next_cnt_index = 0
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 0)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 0)
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 1)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 1)
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 2)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 2)
#         self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 3)
#         self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 3)

#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 0)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 0)
#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 1)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 1)
#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 2)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 2)
#         self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 3)
#         self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 3)

#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 0)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 0)
#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 1)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 1)
#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 2)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 2)
#         self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 3)
#         self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 3)
        


#     def insertFromDigest(self,data_dict):
#         self.insertTableEntry(
#             'SwitchIngress.tbl_DownstreamRecord',
#             [
#                 gc.KeyTuple('hdr.ipv4.dst_addr', data_dict['dst_addr']),
#                 gc.KeyTuple('hdr.ipv4.protocol', data_dict['protocol']),
#                 gc.KeyTuple('hdr.ipv4.src_addr', data_dict['src_addr']),
#                 gc.KeyTuple('hdr.path_t.pathBF', data_dict['pathBF'],0xffffffff),
#                 gc.KeyTuple('meta.dstp', data_dict['dst_port']),
#                 gc.KeyTuple('meta.srcp', data_dict['src_port']),
#                 gc.KeyTuple('$MATCH_PRIORITY',0),
#             ],
#             'SwitchIngress.recorded',
#             [
#                 gc.DataTuple('index', self.next_cnt_index),
#             ]
#         )

#         self.insertTableEntry(
#             'SwitchIngress.tbl_DownstreamRecord',
#             [
#                 gc.KeyTuple('hdr.ipv4.dst_addr', data_dict['dst_addr']),
#                 gc.KeyTuple('hdr.ipv4.protocol', data_dict['protocol']),
#                 gc.KeyTuple('hdr.ipv4.src_addr', data_dict['src_addr']),
#                 gc.KeyTuple('hdr.path_t.pathBF', data_dict['pathBF'],0x00000000),
#                 gc.KeyTuple('meta.dstp', data_dict['dst_port']),
#                 gc.KeyTuple('meta.srcp', data_dict['src_port']),
#                 gc.KeyTuple('$MATCH_PRIORITY',1),
#             ],
#             'SwitchIngress.dirtyRecord',
#             [
#                 gc.DataTuple('index', self.next_cnt_index),
#             ]
#         )
#         self.next_cnt_index += 1

#     def sendPacket(self):
#         learn_filterf = self.bfrt_info.learn_get('digest_f')
#         ig_port = 0
#         for i in range(0,15):
#             pkt = self.pkt6()
#             send_packet(self, ig_port, pkt)
#         learn_filterd = self.bfrt_info.learn_get('digest_d')
#         try:
#             digest = self.interface.digest_get()
#             data_list = learn_filterf.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     self.insertFromDigest(data_dict)
#                     print(data_dict)
#         except Exception:
#             print('no message f')

#         for i in range(0,15):
#             pkt = self.pkt6()
#             send_packet(self, ig_port, pkt)
#         for i in range(0,1):
#             pkt = self.pkt6dirty()
#             send_packet(self, ig_port, pkt)
#         try:
#             digest = digest = self.interface.digest_get()
#             data_list = learn_filterd.make_data_list(digest)
#             if(len(data_list) != 0):
#                 for data in  data_list:
#                     data_dict = data.to_dict()
#                     print(data_dict)
#         except Exception:
#             print('no message d')


#     def verifyCounters(self):
#         down_counter_table = self.bfrt_info.table_get("SwitchIngress.downstreamCnt")
#         for i in range(0,6):
#             down_resp = down_counter_table.entry_get(self.target,
#                 [down_counter_table.make_key(
#                     [gc.KeyTuple('$COUNTER_INDEX',i)])],
#                     {"from_hw":True})
#             data_dict = next(down_resp)[0].to_dict()
#             print(data_dict)
#         # up_counter_table = self.bfrt_info.table_get("SwitchIngress.upstreamCnt")
#         print('Getting pipe stage 1 values:')
#         self.getAllRegisterValue('SwitchIngress.PipeStage1_id_counter')
#         print('Getting pipe stage 1 counters:')
#         self.getAllCounterValue('SwitchIngress.PipeStage1_counterstar')
#         logger.info("Sending Packet ...")
#         print('Getting pipe stage 2 values:')
#         self.getAllRegisterValue('SwitchIngress.PipeStage2_id_counter')
#         print('Getting pipe stage 2 counters:')
#         self.getAllCounterValue('SwitchIngress.PipeStage2_counterstar')
#         logger.info("Sending Packet ...")
#         print('Getting pipe stage 3 values:')
#         self.getAllRegisterValue('SwitchIngress.PipeStage3_id_counter')
#         print('Getting pipe stage 3 counters:')
#         self.getAllCounterValue('SwitchIngress.PipeStage3_counterstar')
#         logger.info("Sending Packet ...")
    
#     def runTest(self):
#         self.setupCtrlPlane()
#         logger.info("Sending Packet ...")
#         self.sendPacket()
#         logger.info("Verifying Counter ...")
#         self.verifyCounters()


class Test5(AbstractTest):
    def setupCtrlPlane(self):
        self.next_cnt_index = 0
        self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 0)
        self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 0)
        self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 1)
        self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 1)
        self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 2)
        self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 2)
        self.setRegisterValue('SwitchIngress.PipeStage1_id_counter', [('SwitchIngress.PipeStage1_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage1_id_counter.id', 0x00000001)], 3)
        self.setRegisterValue('SwitchIngress.PipeStage1_counterstar', 0x00000000, 3)

        self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 0)
        self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 0)
        self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 1)
        self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 1)
        self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 2)
        self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 2)
        self.setRegisterValue('SwitchIngress.PipeStage2_id_counter', [('SwitchIngress.PipeStage2_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage2_id_counter.id', 0x00000001)], 3)
        self.setRegisterValue('SwitchIngress.PipeStage2_counterstar', 0x00000000, 3)

        self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 0)
        self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 0)
        self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 1)
        self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 1)
        self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 2)
        self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 2)
        self.setRegisterValue('SwitchIngress.PipeStage3_id_counter', [('SwitchIngress.PipeStage3_id_counter.cnt', 0x00000000), ('SwitchIngress.PipeStage3_id_counter.id', 0x00000001)], 3)
        self.setRegisterValue('SwitchIngress.PipeStage3_counterstar', 0x00000000, 3)
        
        
        self.insertTableEntry(
            'SwitchIngress.tbl_needflow',
            [gc.KeyTuple('hdr.ethernet.ether_type',0x0800)],
            'SwitchIngress.needflows',
            []
        )

        self.modifyTableEntry(
            'SwitchIngress.tbl_needflow',
            [gc.KeyTuple('hdr.ethernet.ether_type',0x0800)],
            'SwitchIngress.notneedflow',
            []
        )

        self.modifyTableEntry(
            'SwitchIngress.tbl_needflow',
            [gc.KeyTuple('hdr.ethernet.ether_type',0x0800)],
            'SwitchIngress.needflows',
            []
        )

    def insertFromDigest(self,data_dict):
        self.insertTableEntry(
            'SwitchIngress.tbl_DownstreamRecord',
            [
                gc.KeyTuple('hdr.ipv4.dst_addr', data_dict['dst_addr']),
                gc.KeyTuple('hdr.ipv4.protocol', data_dict['protocol']),
                gc.KeyTuple('hdr.ipv4.src_addr', data_dict['src_addr']),
                gc.KeyTuple('hdr.path_t.pathBF', data_dict['pathBF'],0xffffffff),
                gc.KeyTuple('meta.dstp', data_dict['dst_port']),
                gc.KeyTuple('meta.srcp', data_dict['src_port']),
                gc.KeyTuple('$MATCH_PRIORITY',0),
            ],
            'SwitchIngress.recorded',
            [
                gc.DataTuple('index', self.next_cnt_index),
            ]
        )

        self.insertTableEntry(
            'SwitchIngress.tbl_DownstreamRecord',
            [
                gc.KeyTuple('hdr.ipv4.dst_addr', data_dict['dst_addr']),
                gc.KeyTuple('hdr.ipv4.protocol', data_dict['protocol']),
                gc.KeyTuple('hdr.ipv4.src_addr', data_dict['src_addr']),
                gc.KeyTuple('hdr.path_t.pathBF', data_dict['pathBF'],0x00000000),
                gc.KeyTuple('meta.dstp', data_dict['dst_port']),
                gc.KeyTuple('meta.srcp', data_dict['src_port']),
                gc.KeyTuple('$MATCH_PRIORITY',1),
            ],
            'SwitchIngress.dirtyRecord',
            [
                gc.DataTuple('index', self.next_cnt_index),
            ]
        )
        self.next_cnt_index += 1

    def sendPacket(self):
        learn_filterf = self.bfrt_info.learn_get('digest_f')
        ig_port = 0
        for i in range(0,15):
            pkt = self.pkt6()
            send_packet(self, ig_port, pkt)
        learn_filterd = self.bfrt_info.learn_get('digest_d')
        try:
            digest = self.interface.digest_get()
            data_list = learn_filterf.make_data_list(digest)
            if(len(data_list) != 0):
                for data in  data_list:
                    data_dict = data.to_dict()
                    self.insertFromDigest(data_dict)
                    print(data_dict)
        except Exception:
            print('no message f')

        for i in range(0,15):
            pkt = self.pkt6()
            send_packet(self, ig_port, pkt)
        for i in range(0,1):
            pkt = self.pkt6dirty()
            send_packet(self, ig_port, pkt)
        try:
            digest = digest = self.interface.digest_get()
            data_list = learn_filterd.make_data_list(digest)
            if(len(data_list) != 0):
                for data in  data_list:
                    data_dict = data.to_dict()
                    print(data_dict)
        except Exception:
            print('no message d')


    def verifyCounters(self):
        down_counter_table = self.bfrt_info.table_get("SwitchIngress.downstreamCnt")
        for i in range(0,6):
            down_resp = down_counter_table.entry_get(self.target,
                [down_counter_table.make_key(
                    [gc.KeyTuple('$COUNTER_INDEX',i)])],
                    {"from_hw":True})
            data_dict = next(down_resp)[0].to_dict()
            print(data_dict)
        # up_counter_table = self.bfrt_info.table_get("SwitchIngress.upstreamCnt")
        print('Getting pipe stage 1 values:')
        self.getAllRegisterValue('SwitchIngress.PipeStage1_id_counter')
        print('Getting pipe stage 1 counters:')
        self.getAllCounterValue('SwitchIngress.PipeStage1_counterstar')
        logger.info("Sending Packet ...")
        print('Getting pipe stage 2 values:')
        self.getAllRegisterValue('SwitchIngress.PipeStage2_id_counter')
        print('Getting pipe stage 2 counters:')
        self.getAllCounterValue('SwitchIngress.PipeStage2_counterstar')
        logger.info("Sending Packet ...")
        print('Getting pipe stage 3 values:')
        self.getAllRegisterValue('SwitchIngress.PipeStage3_id_counter')
        print('Getting pipe stage 3 counters:')
        self.getAllCounterValue('SwitchIngress.PipeStage3_counterstar')
        logger.info("Sending Packet ...")
    
    def runTest(self):
        self.setupCtrlPlane()
        logger.info("Sending Packet ...")
        self.sendPacket()
        logger.info("Verifying Counter ...")
        self.verifyCounters()